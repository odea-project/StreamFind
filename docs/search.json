[{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Wastewater ozonation showcase","text":"article, demonstrate StreamFind R package can used evaluate ozonation secondary wastewater effluent (.e., effluent aerated biological treatment) using mass spectrometry (MS). set 18 mzML files, representing blank, influent effluent measurements triplicate positive negative ionization mode, used. showcase use StreamFind main class MassSpecData, encapsulates tools required parsing, storing, processing visualizing MS data. Note methods/functions shown demonstration focuses workflow assess wastewater ozonation. complete overview StreamFind R package mass spectrometry, article StreamFind mass spectrometry recommended.","code":"basename(files) ##  [1] \"01_tof_ww_is_neg_blank-r001.mzML\"         ##  [2] \"01_tof_ww_is_neg_blank-r002.mzML\"         ##  [3] \"01_tof_ww_is_neg_blank-r003.mzML\"         ##  [4] \"01_tof_ww_is_pos_blank-r001.mzML\"         ##  [5] \"01_tof_ww_is_pos_blank-r002.mzML\"         ##  [6] \"01_tof_ww_is_pos_blank-r003.mzML\"         ##  [7] \"02_tof_ww_is_neg_influent-r001.mzML\"      ##  [8] \"02_tof_ww_is_neg_influent-r002.mzML\"      ##  [9] \"02_tof_ww_is_neg_influent-r003.mzML\"      ## [10] \"02_tof_ww_is_pos_influent-r001.mzML\"      ## [11] \"02_tof_ww_is_pos_influent-r002.mzML\"      ## [12] \"02_tof_ww_is_pos_influent-r003.mzML\"      ## [13] \"03_tof_ww_is_neg_o3sw_effluent-r001.mzML\" ## [14] \"03_tof_ww_is_neg_o3sw_effluent-r002.mzML\" ## [15] \"03_tof_ww_is_neg_o3sw_effluent-r003.mzML\" ## [16] \"03_tof_ww_is_pos_o3sw_effluent-r001.mzML\" ## [17] \"03_tof_ww_is_pos_o3sw_effluent-r002.mzML\" ## [18] \"03_tof_ww_is_pos_o3sw_effluent-r003.mzML\""},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"massspecdata","dir":"Articles","previous_headings":"","what":"MassSpecData","title":"Wastewater ozonation showcase","text":"main R6 MassSpecData class object created using MassSpecData$new(), shown . argument files can used add directly set mzML files. Note original vendor files converted mzML format using convert_ms_files() function, uses msConvert command line ProteoWizard.","code":"# Create a MassSpecData from mzML files ms <- MassSpecData$new(files = files) ## ⚙ Parsing 18 MS file/s... Done! ## 🖫 Parsed MS files/s cached! ## ✓ MassSpecData class object created! # Print in console a summary of the MassSpecData ms ##  ## MassSpecData ## name          NA ## author        NA ## path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles ## date          2023-11-02 11:55:23.156802 ##  ## Analyses:  ##           type                            analysis ##  1:  MS/MS-DDA         01_tof_ww_is_neg_blank-r001 ##  2:  MS/MS-DDA         01_tof_ww_is_neg_blank-r002 ##  3:  MS/MS-DDA         01_tof_ww_is_neg_blank-r003 ##  4:  MS/MS-DDA         01_tof_ww_is_pos_blank-r001 ##  5:  MS/MS-DDA         01_tof_ww_is_pos_blank-r002 ##  6:  MS/MS-DDA         01_tof_ww_is_pos_blank-r003 ##  7:  MS/MS-DDA      02_tof_ww_is_neg_influent-r001 ##  8:  MS/MS-DDA      02_tof_ww_is_neg_influent-r002 ##  9:  MS/MS-DDA      02_tof_ww_is_neg_influent-r003 ##  10: MS/MS-DDA      02_tof_ww_is_pos_influent-r001 ##  11: MS/MS-DDA      02_tof_ww_is_pos_influent-r002 ##  12: MS/MS-DDA      02_tof_ww_is_pos_influent-r003 ##  13: MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r001 ##  14: MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r002 ##  15: MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r003 ##  16: MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r001 ##  17: MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r002 ##  18: MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r003 ##                           replicate blank polarity spectra features filtered ##  1:          01_tof_ww_is_neg_blank  <NA> negative    1914        0        0 ##  2:          01_tof_ww_is_neg_blank  <NA> negative    1932        0        0 ##  3:          01_tof_ww_is_neg_blank  <NA> negative    1941        0        0 ##  4:          01_tof_ww_is_pos_blank  <NA> positive    2504        0        0 ##  5:          01_tof_ww_is_pos_blank  <NA> positive    2491        0        0 ##  6:          01_tof_ww_is_pos_blank  <NA> positive    2504        0        0 ##  7:       02_tof_ww_is_neg_influent  <NA> negative    1984        0        0 ##  8:       02_tof_ww_is_neg_influent  <NA> negative    1995        0        0 ##  9:       02_tof_ww_is_neg_influent  <NA> negative    1993        0        0 ##  10:      02_tof_ww_is_pos_influent  <NA> positive    2131        0        0 ##  11:      02_tof_ww_is_pos_influent  <NA> positive    2126        0        0 ##  12:      02_tof_ww_is_pos_influent  <NA> positive    2124        0        0 ##  13: 03_tof_ww_is_neg_o3sw_effluent  <NA> negative    1909        0        0 ##  14: 03_tof_ww_is_neg_o3sw_effluent  <NA> negative    1921        0        0 ##  15: 03_tof_ww_is_neg_o3sw_effluent  <NA> negative    1924        0        0 ##  16: 03_tof_ww_is_pos_o3sw_effluent  <NA> positive    2046        0        0 ##  17: 03_tof_ww_is_pos_o3sw_effluent  <NA> positive    2052        0        0 ##  18: 03_tof_ww_is_pos_o3sw_effluent  <NA> positive    2048        0        0 ##      groups ##  1:       0 ##  2:       0 ##  3:       0 ##  4:       0 ##  5:       0 ##  6:       0 ##  7:       0 ##  8:       0 ##  9:       0 ##  10:      0 ##  11:      0 ##  12:      0 ##  13:      0 ##  14:      0 ##  15:      0 ##  16:      0 ##  17:      0 ##  18:      0"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"projectheaders","dir":"Articles","previous_headings":"","what":"ProjectHeaders","title":"Wastewater ozonation showcase","text":"Project headers (e.g., name, author description) can added MassSpecData using MassSpecData$add_headers(). headers converted S3 ProjectHeaders class object MassSpecData, goes validation ensure conformity (details ).","code":"# Add headers to the MassSpecData ms$add_headers(   name = \"Wastewater Ozonation Showcase\",   author = \"Ricardo Cunha\",   description = \"Demonstration project\" ) ## ✓ Added headers! # Get the headers as ProjectHeaders ms$get_headers() ## $name ## [1] \"Wastewater Ozonation Showcase\" ##  ## $author ## [1] \"Ricardo Cunha\" ##  ## $description ## [1] \"Demonstration project\" ##  ## $path ## [1] \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" ##  ## $date ## [1] \"2023-11-02 11:55:25 CET\" ##  ## attr(,\"class\") ## [1] \"ProjectHeaders\" # Get the MassSpecData date ms$get_headers(value = \"date\") ## $date ## [1] \"2023-11-02 11:55:25 CET\""},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"replicates-and-blanks","dir":"Articles","previous_headings":"","what":"Replicates and blanks","title":"Wastewater ozonation showcase","text":"analysis replicate names associated blank replicate name can amended MassSpecData, shown . Alternatively, data.frame column names file, replicate blank added files argument MassSpecData$new(files = files) directly replicate blank replicate names assigned (details ).","code":"# Character vector with analysis replicate names rpls <- c(   rep(\"blank_neg\", 3),   rep(\"blank_pos\", 3),   rep(\"influent_neg\", 3),   rep(\"influent_pos\", 3),   rep(\"effluent_neg\", 3),   rep(\"effluent_pos\", 3) )  # Character vector with associated blank replicate names # Note that the order should match the respective replicate blks <- c(   rep(\"blank_neg\", 3),   rep(\"blank_pos\", 3),   rep(\"blank_neg\", 3),   rep(\"blank_pos\", 3),   rep(\"blank_neg\", 3),   rep(\"blank_pos\", 3) )  # Chaining add replicates and blanks ms$add_replicate_names(rpls)$add_blank_names(blks) ## ✓ Replicate names added! ## ✓ Blank names added! # Replicates and blanks were amended ms$get_overview()[, 1:5] ##         type                            analysis    replicate     blank ## 1  MS/MS-DDA         01_tof_ww_is_neg_blank-r001    blank_neg blank_neg ## 2  MS/MS-DDA         01_tof_ww_is_neg_blank-r002    blank_neg blank_neg ## 3  MS/MS-DDA         01_tof_ww_is_neg_blank-r003    blank_neg blank_neg ## 4  MS/MS-DDA         01_tof_ww_is_pos_blank-r001    blank_pos blank_pos ## 5  MS/MS-DDA         01_tof_ww_is_pos_blank-r002    blank_pos blank_pos ## 6  MS/MS-DDA         01_tof_ww_is_pos_blank-r003    blank_pos blank_pos ## 7  MS/MS-DDA      02_tof_ww_is_neg_influent-r001 influent_neg blank_neg ## 8  MS/MS-DDA      02_tof_ww_is_neg_influent-r002 influent_neg blank_neg ## 9  MS/MS-DDA      02_tof_ww_is_neg_influent-r003 influent_neg blank_neg ## 10 MS/MS-DDA      02_tof_ww_is_pos_influent-r001 influent_pos blank_pos ## 11 MS/MS-DDA      02_tof_ww_is_pos_influent-r002 influent_pos blank_pos ## 12 MS/MS-DDA      02_tof_ww_is_pos_influent-r003 influent_pos blank_pos ## 13 MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r001 effluent_neg blank_neg ## 14 MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r002 effluent_neg blank_neg ## 15 MS/MS-DDA 03_tof_ww_is_neg_o3sw_effluent-r003 effluent_neg blank_neg ## 16 MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r001 effluent_pos blank_pos ## 17 MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r002 effluent_pos blank_pos ## 18 MS/MS-DDA 03_tof_ww_is_pos_o3sw_effluent-r003 effluent_pos blank_pos ##    polarity ## 1  negative ## 2  negative ## 3  negative ## 4  positive ## 5  positive ## 6  positive ## 7  negative ## 8  negative ## 9  negative ## 10 positive ## 11 positive ## 12 positive ## 13 negative ## 14 negative ## 15 negative ## 16 positive ## 17 positive ## 18 positive"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"processingsettings","dir":"Articles","previous_headings":"","what":"ProcessingSettings","title":"Wastewater ozonation showcase","text":"Data processing performed modules according ProcessingSettings. S3 ProcessingSettings class objects obtained via respective Settings_[module name]_[algorithm name] constructor functions, attributing respective subclass. obtain ProcessingSettings module find_features() using algorithm openms. parameters processing module can changed via constructor arguments. Documentation ProcessingSettings subclass can found StreamFind reference documentation. , created ProcessingSettings can added MassSpecData. order matter workflow applied!","code":"# Get ProcessingSettings for finding features using the openms algorithm ffs <- Settings_find_features_openms()  # Print in console the details of the ProcessingSettings ffs ##  ##  ProcessingSettings  ##  call         find_features ##  algorithm    openms ##  version      0.2.0 ##  software     openms ##  developer    Rost HL, Sachsenberg T, Aiche S, Bielow C et al. ##  contact      oliver.kohlbacher@uni-tuebingen.de ##  link         https://openms.de/ ##  doi          https://doi.org/10.1038/nmeth.3959 ##  ##  parameters   ##   -  noiseThrInt 500  ##   -  chromSNR 3  ##   -  chromFWHM 10  ##   -  mzPPM 12  ##   -  reEstimateMTSD FALSE  ##   -  traceTermCriterion sample_rate  ##   -  traceTermOutliers 5  ##   -  minSampleRate 1  ##   -  minTraceLength 5  ##   -  maxTraceLength -1  ##   -  widthFiltering fixed  ##   -  minFWHM 5  ##   -  maxFWHM 40  ##   -  traceSNRFiltering TRUE  ##   -  localRTRange 0  ##   -  localMZRange 0  ##   -  isotopeFilteringModel none  ##   -  MZScoring13C FALSE  ##   -  useSmoothedInts FALSE  ##   -  extraOpts  ##   -  intSearchRTWindow 3  ##   -  useFFMIntensities FALSE  ##   -  verbose FALSE # List with other workflow module settings other_settings <- list(   Settings_annotate_features_StreamFind(),    Settings_group_features_openms(),      # Modifying the parameters with the constructor arguments   # db_is is a data.table with the name, mass and expected retention time of spiked internal standards, as shown below   Settings_find_internal_standards_StreamFind(     database = db_is,     ppm = 8,     sec = 10   ),      Settings_filter_features_StreamFind(     minIntensity = 5000,     maxGroupSd = 30,     blank = 5,     minGroupAbundance = 3,     excludeIsotopes = TRUE   ),    Settings_load_features_eic_StreamFind(     rtExpand = 60,     mzExpand = 0.0005   ),    Settings_load_features_ms1_StreamFind(),    Settings_load_features_ms2_StreamFind(),    Settings_load_groups_ms1_StreamFind(),    Settings_load_groups_ms2_StreamFind(),    Settings_calculate_quality_StreamFind() )  # Printing the third ProcessingSettings object from the list other_settings[[3]] ##  ##  ProcessingSettings  ##  call         find_internal_standards ##  algorithm    StreamFind ##  version      0.2.0 ##  software     StreamFind ##  developer    Ricardo Cunha ##  contact      cunha@iuta.de ##  link         https://odea-project.github.io/StreamFind ##  doi          NA ##  ##  parameters   ##   -  database  (only head rows)  ##  ##                   name        formula     mass   rt tag ## 1: Cyclophosphamide-d6 C7H9D6Cl2N2O2P 266.0625 1007  IS ## 2:      Diclophenac-d4  C14H7D4Cl2NO2 299.0418 1253  IS ## 3:       Metoprolol-d7    C15H18D7NO3 274.2274  915  IS ## 4:  Sulfamethoxazol-d4   C10H7D4N3O3S 257.0772 1015  IS ## 5:      Isoproturon-d6    C12H12D6N2O 212.1796 1149  IS ## 6:           Diuron-d6   C9H4D6Cl2N2O 238.0547 1157  IS ##  ##   -  ppm 8  ##   -  sec 10 # Add the settings as a list. The order matters! ms$add_settings(settings = c(list(ffs), other_settings)) ## ✓ Added settings for: ## find_features ## annotate_features ## group_features ## find_internal_standards ## filter_features ## load_features_eic ## load_features_ms1 ## load_features_ms2 ## load_groups_ms1 ## load_groups_ms2 ## calculate_quality # Getting the workflow settings ms$get_settings_names() ##  [1] \"find_features\"           \"annotate_features\"       ##  [3] \"group_features\"          \"find_internal_standards\" ##  [5] \"filter_features\"         \"load_features_eic\"       ##  [7] \"load_features_ms1\"       \"load_features_ms2\"       ##  [9] \"load_groups_ms1\"         \"load_groups_ms2\"         ## [11] \"calculate_quality\""},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"run_workflow","dir":"Articles","previous_headings":"","what":"run_workflow()","title":"Wastewater ozonation showcase","text":"modules assigned added ProcessingSettings can processed run_workflow(), demonstrated . Note run_workflow(), processing modules applied order added. Alternatively, modules can processed chaining, shown . chaining, order can modified modules individually called.","code":"# Run all ProcessingSettings added to the MassSpecData ms$run_workflow() ## ⚙ Running find_features with openms ## Verifying if your data is centroided... Done! ## ✓ 16545 features added! ## ⚙ Running annotate_features with StreamFind ## ⚙ Annotating features from 18 analyses... Done! ## 🖫 Annotated features cached! ## ✓ 16545 features added! ## ✓ Features annotated! ## ⚙ Running group_features with openms ## ✓ Feature group added to features! ## ✓ 5294 feature groups added! ## ⚙ Running find_internal_standards with StreamFind ## ✓ 7 internal standards found and tagged! ## ⚙ Running filter_features with StreamFind ## ✓ 14882 features filtered! ## ⚙ Running load_features_eic with StreamFind ## ⚙ Parsing spectra from 18 MS file/s... Done! ## 🖫 Parsed spectra cached! ## ✓ Feature EICs loaded! ## ✓ 1663 feature EICs added! ## ⚙ Running load_features_ms1 with StreamFind ## ⚙ Parsing spectra from 16 MS file/s... Done! ## 🖫 Parsed spectra cached! ## 🖫 Features MS1 spectra cached! ## ✓ MS1 spectra added to features in analyses! ## ⚙ Running load_features_ms2 with StreamFind ## ⚙ Parsing spectra from 16 MS file/s... Done! ## 🖫 Parsed spectra cached! ## 🖫 Features MS2 spectra cached! ## ✓ MS2 spectra added to features in analyses! ## ⚙ Running load_groups_ms1 with StreamFind ## 🖫 Groups MS1 spectra cached! ## ✓ MS1 spectra added to feature groups! ## ⚙ Running load_groups_ms2 with StreamFind ## ℹ Features MS2 spectra loaded from cache! ## ✓ MS2 spectra added to features in analyses! ## 🖫 Groups MS2 spectra cached! ## ✓ MS2 spectra added to feature groups! ## ⚙ Running calculate_quality with StreamFind ## ⚙ Calculating features quality from 18 analyses... Done! ## 🖫 Calculated features quality parameters cached! ## ✓ 16545 features added! ## ✓ Features quality added! # Alternatively, the modules can be chained ms$find_features()$annotate_features()$group_features()$filter_features()"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"Wastewater ozonation showcase","text":"created features feature groups can inspected data.table objects plotted dedicated modules MassSpecData.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"data-table-objects","dir":"Articles","previous_headings":"Results","what":"data.table objects","title":"Wastewater ozonation showcase","text":"features feature groups can obtained data.table MassSpecData$get_features() MassSpecData$get_groups() methods. methods also allow look specific features/feature groups using mass, mass--charge ratio, retention time drift time targets, show small set compound targets mass retention time expected value known. Note drift time applicable MS data ion mobility separation. Already inspection data.table, possible see compounds detected influent effluent (e.g., Carbamazepine) compounds appear reduced ozonation (e.g., Metoprolol). Since positive negative ionization mode combined, compounds appear polarities grouped neutral monoisotopic mass (e.g., Diclofenac).","code":"db ##                          name       formula     mass   rt tag ##  1:     4N-Acetylsulfadiazine   C12H12N4O3S 292.0630  905   S ##  2:                Metoprolol     C15H25NO3 267.1834  915   S ##  3:          Sulfamethoxazole   C10H11N3O3S 253.0521 1015   S ##  4:                Bisoprolol     C18H31NO4 325.2253  955   S ##  5: 4N-Acetylsulfamethoxazole   C12H13N3O4S 295.0627 1011   S ##  6:             Carbamazepine     C15H12N2O 236.0950 1079   S ##  7:                 Terbutryn     C10H19N5S 241.1361 1126   S ##  8:                  Losartan   C22H23ClN6O 422.1622 1095   S ##  9:               Candesartan    C24H20N6O3 440.1597 1097   S ## 10:               Isoproturon     C12H18N2O 206.1419 1152   S ## 11:                    Diuron   C9H10Cl2N2O 232.0170 1160   S ## 12:                Bezafibrat   C19H20ClNO4 361.1081 1164   S ## 13:                 Valsartan    C24H29N5O3 435.2270 1177   S ## 14:              Tebuconazole   C16H22ClN3O 307.1451 1267   S ## 15:                Diclofenac  C14H11Cl2NO2 295.0167 1255   S ## 16:             Propiconazole C15H17Cl2N3O2 341.0698 1308   S ## 17:                Flufenacet C14H13F4N3O2S 363.0665 1296   S ## 18:                 Ibuprofen      C13H18O2 206.1307 1152   S ## 19:                      CBZD    C15H14N2O3 270.1004  936   S # compounds are searched by monoisotopic mass and retention time # ppm and sec set the mass (im ppm) and time (in seconds) allowed deviation, respectively # average applied a mean to the intensities in each analysis replicate group ms$get_groups(mass = db, ppm = 5, sec = 10, average = TRUE) ##                    group     mass       rt massdev rtdev    rtmin    rtmax ## 1:  m236.100_rt1079_g576 236.0954 1078.678   36.16    18 1070.959 1088.708 ## 2:  m253.050_rt1015_g936 253.0522 1015.284   12.91    12 1010.443 1022.929 ## 3:  m267.180_rt916_g1284 267.1840  916.061   24.57    15  909.896  925.265 ## 4: m295.020_rt1256_g2086 295.0168 1256.321   15.62    14 1251.009 1265.459 ## 5:  m325.230_rt958_g2873 325.2259  958.241   33.79    28  945.080  972.702 ## 6: m440.160_rt1098_g5152 440.1602 1097.722   24.71    17 1091.174 1108.273 ##    filtered filter                ms1               ms2 blank_neg blank_pos ## 1:    FALSE   <NA>  <data.table[3x4]> <data.table[3x6]>         0    0.0000 ## 2:    FALSE   <NA>  <data.table[4x4]> <data.table[5x6]>         0    0.0000 ## 3:    FALSE   <NA>  <data.table[3x4]> <data.table[1x6]>         0    0.0000 ## 4:    FALSE   <NA> <data.table[15x4]> <data.table[3x6]>         0    0.0000 ## 5:    FALSE   <NA>  <data.table[3x4]> <data.table[3x6]>         0  709.9045 ## 6:    FALSE   <NA>  <data.table[5x4]> <data.table[8x6]>         0    0.0000 ##    effluent_neg effluent_pos influent_neg influent_pos blank_neg_sd ## 1:        0.000         0.00        0.000    63816.862            0 ## 2:        0.000         0.00        0.000     9679.874            0 ## 3:        0.000     15409.08        0.000    49655.948            0 ## 4:        0.000         0.00     8495.575    19736.467            0 ## 5:        0.000     13667.02        0.000    45901.568            0 ## 6:     6204.226     22512.84    34210.179   112282.091            0 ##    blank_pos_sd effluent_neg_sd effluent_pos_sd influent_neg_sd influent_pos_sd ## 1:            0               0               0               0               6 ## 2:            0               0               0               0              12 ## 3:            0               0               4               0               5 ## 4:            0               0               0               4              11 ## 5:          173               0              12               0               2 ## 6:            0              13               1               5               5 ##                name ## 1:    Carbamazepine ## 2: Sulfamethoxazole ## 3:       Metoprolol ## 4:       Diclofenac ## 5:       Bisoprolol ## 6:      Candesartan"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"plot_groups-methods","dir":"Articles","previous_headings":"Results","what":"plot_groups methods","title":"Wastewater ozonation showcase","text":"better overview results, method MassSpecData$plot_groups() even detailed method MassSpecData$plot_groups_overview() can used.","code":"# set legendNames to TRUE for using the names in db as legend ms$plot_groups(mass = db, ppm = 5, sec = 10, legendNames = TRUE) ms$plot_groups_overview(mass = db, ppm = 5, sec = 10, legendNames = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"filtered-not-removed","dir":"Articles","previous_headings":"Results","what":"Filtered not removed","title":"Wastewater ozonation showcase","text":"filter_features() module applied filter features according defined conditions/thresholds. filtered features removed just tagged filtered filter tag assigned. instance, method MassSpecData$get_features() run filtered argument set TRUE, filtered features also shown. , search internal standards added analysis filtered applying blank subtraction, receiving tag blank filter column TRUE filtered column.","code":"db_is ##                   name        formula     mass   rt tag ## 1: Cyclophosphamide-d6 C7H9D6Cl2N2O2P 266.0625 1007  IS ## 2:      Diclophenac-d4  C14H7D4Cl2NO2 299.0418 1253  IS ## 3:       Metoprolol-d7    C15H18D7NO3 274.2274  915  IS ## 4:  Sulfamethoxazol-d4   C10H7D4N3O3S 257.0772 1015  IS ## 5:      Isoproturon-d6    C12H12D6N2O 212.1796 1149  IS ## 6:           Diuron-d6   C9H4D6Cl2N2O 238.0547 1157  IS ## 7:    Carbamazepin-d10    C15H2D10N2O 246.1577 1075  IS # set filtered to TRUE for showing filtered features/feature groups ms$get_groups(mass = db_is, ppm = 8, sec = 10, average = TRUE, filtered = TRUE) ##                    group     mass       rt massdev rtdev    rtmin    rtmax ## 1:  m212.180_rt1149_g181 212.1807 1149.055   11.16    17 1141.062 1157.682 ## 2:  m238.050_rt1157_g615 238.0548 1157.199   16.05    17 1150.379 1166.985 ## 3:  m246.160_rt1075_g742 246.1586 1075.050   29.37    35 1065.027 1099.684 ## 4: m257.080_rt1015_g1023 257.0774 1014.526   31.10    16 1008.146 1024.348 ## 5: m266.060_rt1007_g1233 266.0627 1006.683   31.55    15 1000.986 1015.827 ## 6:  m274.230_rt915_g1454 274.2290  914.861   14.22    17  908.401  925.265 ## 7: m299.040_rt1254_g2203 299.0419 1254.373   15.56    17 1247.826 1264.373 ##    filtered filter ms1 ms2 blank_neg  blank_pos effluent_neg effluent_pos ## 1:     TRUE  blank              0.00 1101404.42        0.000   1322755.92 ## 2:     TRUE  blank          13917.30  118039.48    15530.309    141741.46 ## 3:     TRUE  blank              0.00  456753.78        0.000    498771.59 ## 4:     TRUE  blank          10741.03  193813.88     7050.165    204772.06 ## 5:     TRUE  blank              0.00   34702.05        0.000     60153.15 ## 6:     TRUE  blank              0.00 1581149.46        0.000   1571304.96 ## 7:     TRUE  blank          24569.04   47786.58    19768.769     51395.04 ##    influent_neg influent_pos blank_neg_sd blank_pos_sd effluent_neg_sd ## 1:        0.000   1226482.58            0            4               0 ## 2:    14521.777    130401.27           10            4              11 ## 3:        0.000    532430.03            0            4               0 ## 4:     3663.327    189112.69           16            2               9 ## 5:        0.000     56790.93            0           87               0 ## 6:        0.000   1497131.38            0            2               0 ## 7:    16689.037     47569.69            7            9               7 ##    effluent_pos_sd influent_neg_sd influent_pos_sd                name ## 1:               1               0               5      Isoproturon-d6 ## 2:               3               5               3           Diuron-d6 ## 3:               4               0               3    Carbamazepin-d10 ## 4:               4              97               2  Sulfamethoxazol-d4 ## 5:               4               0               3 Cyclophosphamide-d6 ## 6:               1               0               1       Metoprolol-d7 ## 7:               6              18               4      Diclophenac-d4"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"internal-stanards","dir":"Articles","previous_headings":"Results","what":"Internal Stanards","title":"Wastewater ozonation showcase","text":"module MassSpecData$find_internal_standards() applied results can obtained dedicated method MassSpecData$get_internal_standards() plotted quality overview using method MassSpecData$plot_internal_standards_qc(), shown . plot gives overview mass, retention time intensity variance internal stadards across analyses project.","code":"ms$plot_internal_standards_qc()"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"isotopes","dir":"Articles","previous_headings":"Results","what":"Isotopes","title":"Wastewater ozonation showcase","text":"method annotate_features() applied annotate natural isotopes within MS data. Implementation adducts source fragments annotation planned yet available StreamFind algorithm. method MassSpecData$get_components() can used search components, shown analysis number 11. filter excludeIsotopes applied, isotopic features filtered tag isotope minIntensity filtered minIntensity, applied first. Although first isotope Diclofenac (.e., 13C) found, second annotated maxGaps argument settings set 1. frequent case compounds halogens. components can also visualized method MassSpecData$map_components(), shown internal standards added analysis 11. Note filtered argument set TRUE return also filtered features.","code":"# Components of Diclofenac and Candesartan in analysis 11 ms$get_components(   analyses = 11,   mass = db[db$name %in% c(\"Diclofenac\", \"Candesartan\"), ],   ppm = 5, sec = 10 ) ##                          analysis               feature polarity index       rt ## 1: 02_tof_ww_is_pos_influent-r002 mz296.02_rt1257_f1145        1  1145 1256.670 ## 2: 02_tof_ww_is_pos_influent-r002 mz298.02_rt1257_f1146        1  1146 1256.670 ## 3: 02_tof_ww_is_pos_influent-r002  mz441.17_rt1097_f616        1   616 1096.581 ## 4: 02_tof_ww_is_pos_influent-r002  mz442.17_rt1097_f617        1   617 1096.581 ##          mz     mass intensity      area    rtmin    rtmax    mzmin    mzmax ## 1: 296.0246 295.0173  19179.48 116940.30 1251.924 1264.436 296.0238 296.0256 ## 2: 298.0215 297.0142  13278.35  82983.53 1251.924 1263.002 298.0208 298.0230 ## 3: 441.1681 440.1609 109887.30 588979.40 1091.918 1105.248 441.1674 441.1690 ## 4: 442.1707 441.1635  28418.03 158080.90 1090.266 1105.248 442.1691 442.1745 ##    filled filtered  filter isocount iso_gr iso_z iso_cat iso_step iso_md_diff ## 1:  FALSE    FALSE    <NA>        1   9978     1     M+0        0    0.000000 ## 2:  FALSE     TRUE isotope        1   9978     1     M+2        2    1.996954 ## 3:  FALSE    FALSE    <NA>        1  10735     1     M+0        0    0.000000 ## 4:  FALSE    FALSE    <NA>        1  10735     1     M+1        1    1.002595 ##    iso_md_hit iso_md_error  iso_mz_sd iso_rel_int iso_el iso_n_carbons ## 1:   0.000000 0.0000000000 0.00102881   1.0000000                    0 ## 2:   1.997050 0.0000962900 0.00280013   0.6923205   37Cl             0 ## 3:   0.000000 0.0000000000 0.00089894   1.0000000                   24 ## 4:   1.003355 0.0007597878 0.00379988   0.2586107    13C            24 ##                 iso_feat iso_size                 group istd_name istd_rte ## 1: mz296.02_rt1257_f1145        2 m295.020_rt1256_g2086      <NA>       NA ## 2: mz296.02_rt1257_f1145        2 m297.010_rt1256_g2149      <NA>       NA ## 3:  mz441.17_rt1097_f616        2 m440.160_rt1098_g5152      <NA>       NA ## 4:  mz441.17_rt1097_f616        2 m441.160_rt1098_g5170      <NA>       NA ##    istd_mze istd_rec                ms1                ms2 qlt_noise qlt_sn ## 1:       NA       NA <data.table[10x4]> <data.table[23x6]>       650   29.5 ## 2:       NA       NA                                              NA     NA ## 3:       NA       NA  <data.table[4x4]> <data.table[95x6]>      2512   43.7 ## 4:       NA       NA  <data.table[4x4]>                          535   53.2 ##    qlt_traces qlt_gaufit qlt_fwhm  qlt_A qlt_mu qlt_sigma qlt_warning qlt_model ## 1:         12  0.9774234      5.9  20412    4.0       2.5       FALSE <list[5]> ## 2:         NA         NA       NA     NA     NA        NA          NA           ## 3:         11  0.9472155      4.6 116779    3.9       2.0       FALSE <list[5]> ## 4:         13  0.9429037      4.6  29874    4.9       2.0       FALSE <list[5]> ##           name ## 1:  Diclofenac ## 2:  Diclofenac ## 3: Candesartan ## 4: Candesartan ms$map_components(   analyses = 11,   mass = db_is,   ppm = 8, sec = 10,   filtered = TRUE,   legendNames = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/articles/demo_ozonation_project.html","id":"more-to-come","dir":"Articles","previous_headings":"","what":"More to come","title":"Wastewater ozonation showcase","text":"Future integration: Correcting matrix better comparison influent effluent Annotation adducts -source fragments Suspect screening MS2 validation formula/compound assignment via patRoon Screening transformation products using biotransformer tool via patRoon","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"streamfind","dir":"Articles","previous_headings":"","what":"StreamFind","title":"Developer guide for mass spectrometry","text":"library StreamFind R package can used data management, processing, visualization reporting. guide focuses mass spectrometry (MS) data aims instruct developers implement new processing modules additional processing algorithms new existing processing modules StreamFind library.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"setup","dir":"Articles","previous_headings":"StreamFind","what":"Setup","title":"Developer guide for mass spectrometry","text":"R package StreamFind GitHub repository ODEA Project. development, recommendation download repository locally using git tracking version control. GitHub desktop tool can used easily install configure git GitHub account, recommended authoring contributions. Since R package, RStudio IDE recommended development. Yet, others (e.g., VS Code) also work. using RStudio, repository can downloaded via new project, selecting version control, git finally adding GitHub url https://github.com/odea-project/StreamFind. create local image StreamFind repository directly git tracking, git GitHub desktop properly installed configured. using RStudio, project directly identified package development tools available support development. recommend setting Use devtools package functions available generate documentation via Roxygen (configure bottom select options) located Build tab Configure Build Tools…. IDEs, recommend using package devtools. Considering local image StreamFind repository installed git tracking, first step development create dedicated branch implementation new processing modules /algorithms. master branch changed directly modified pull requests dedicated development branch, giving opportunity code revision.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"structure","dir":"Articles","previous_headings":"StreamFind","what":"Structure","title":"Developer guide for mass spectrometry","text":"streamFind R package centered around R6 class system, brings object oriented programming R. MS, MassSpecData R6 class used encapsulate data methods. data stored private fields within MassSpecData can accessed processed via public methods. creation MassSpecData object way access change data briefly shown. implementation processing modules algorithms, S3 class ProcessingSettings used dispatch settings processing modules. See article Wastewater ozonation showcase demonstration usage. essence, given algorithm applied processing method added MassSpecData ProcessingSettings object used process data defined settings parameters. structure ProcessingSettings exemplified algorithm openms applied module MassSpecData$find_features(). shown, constructor ProcessingSettings function always including Settings_[module name]_[algorithm name]; details given Semantics (@ref(semantics)). , ProcessingSettings can directly added MassSpecData. Alternatively, ProcessingSettings can saved JSON string imported JSON file, demonstrated . use S3 object system ProcessingSettings gives flexibility list parameters, meaning parameter entry can single numeric value, vector strings even full data.frame required. ProcessingSettings constructor (.e., Settings_[module name]_[algorithm name]) dedicated validation method ensure parameters metadata conformity (shown ). validation ProcessingSettings always performed applying processing module. Besides S3 class ProcessingSettings, ProcessingSettings object receives class names used S3 method dispatchment (.e., direct object dedicated S3 method actual processing algorithm applied). show classes ffs ProcessingSettings. class patRoon means algorithm openms applied via package patRoon. class Settings_find_features_openms directs object right processing module indicates algorithm applied. , S3 generic used processing module (e.g., MassSpecData$find_features() MassSpecData$group_features()) dispatchment. process visible user essential developer. Implementation new processing modules /algorithms must consider structure. section Implementation (@ref(implementation)) process adding new modules algorithms described detail.","code":"ms <- MassSpecData$new() ## ✓ MassSpecData class object created! ms$add_headers(name = \"Example\", author = \"Person A\") ## ✓ Added headers! ms$get_headers() ## $name ## [1] \"Example\" ##  ## $author ## [1] \"Person A\" ##  ## $path ## [1] \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" ##  ## $date ## [1] \"2023-11-02 11:57:04 CET\" ##  ## attr(,\"class\") ## [1] \"ProjectHeaders\" # print method. Note that MS data files were not yet added! ms ##  ## MassSpecData ## name          Example ## author        Person A ## path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles ## date          2023-11-02 11:57:04.599286 ##  ## Analyses: 0 ffs <- Settings_find_features_openms()  ffs ##  ##  ProcessingSettings  ##  call         find_features ##  algorithm    openms ##  version      0.2.0 ##  software     openms ##  developer    Rost HL, Sachsenberg T, Aiche S, Bielow C et al. ##  contact      oliver.kohlbacher@uni-tuebingen.de ##  link         https://openms.de/ ##  doi          https://doi.org/10.1038/nmeth.3959 ##  ##  parameters   ##   -  noiseThrInt 500  ##   -  chromSNR 3  ##   -  chromFWHM 10  ##   -  mzPPM 12  ##   -  reEstimateMTSD FALSE  ##   -  traceTermCriterion sample_rate  ##   -  traceTermOutliers 5  ##   -  minSampleRate 1  ##   -  minTraceLength 5  ##   -  maxTraceLength -1  ##   -  widthFiltering fixed  ##   -  minFWHM 5  ##   -  maxFWHM 40  ##   -  traceSNRFiltering TRUE  ##   -  localRTRange 0  ##   -  localMZRange 0  ##   -  isotopeFilteringModel none  ##   -  MZScoring13C FALSE  ##   -  useSmoothedInts FALSE  ##   -  extraOpts  ##   -  intSearchRTWindow 3  ##   -  useFFMIntensities FALSE  ##   -  verbose FALSE ms$add_settings(ffs) ## ✓ find_features processing settings added! ms ##  ## MassSpecData ## name          Example ## author        Person A ## path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles ## date          2023-11-02 11:57:04.599286 ##  ## settings:  ##  1: find_features (openms) ##  ## Analyses: 0 save_default_ProcessingSettings(   call = \"find_features\",   algorithm = \"xcms3_centwave\",   name = \"ffs\",   path = getwd() ) jsonlite::prettify(readLines(\"ffs.json\")) ## { ##     \"call\": [ ##         \"find_features\" ##     ], ##     \"algorithm\": [ ##         \"xcms3_centwave\" ##     ], ##     \"parameters\": { ##         \"class\": [ ##             \"CentWaveParam\" ##         ], ##         \"ppm\": [ ##             12 ##         ], ##         \"peakwidth\": [ ##             5, ##             60 ##         ], ##         \"snthresh\": [ ##             15 ##         ], ##         \"prefilter\": [ ##             5, ##             1500 ##         ], ##         \"mzCenterFun\": [ ##             \"wMean\" ##         ], ##         \"integrate\": [ ##             1 ##         ], ##         \"mzdiff\": [ ##             -0.0002 ##         ], ##         \"fitgauss\": [ ##             true ##         ], ##         \"noise\": [ ##             500 ##         ], ##         \"verboseColumns\": [ ##             true ##         ], ##         \"roiList\": [ ##  ##         ], ##         \"firstBaselineCheck\": [ ##             false ##         ], ##         \"roiScales\": [ ##  ##         ], ##         \"extendLengthMSW\": [ ##             false ##         ] ##     }, ##     \"version\": [ ##         \"0.2.0\" ##     ], ##     \"software\": [ ##         \"xcms\" ##     ], ##     \"developer\": [ ##         \"Ralf Tautenhahn, Johannes Rainer\" ##     ], ##     \"contact\": [ ##         \"rtautenh@ipb-halle.de\" ##     ], ##     \"link\": [ ##         \"https://bioconductor.org/packages/release/bioc/html/xcms.html\" ##     ], ##     \"doi\": [ ##         \"https://doi.org/10.1186/1471-2105-9-504\" ##     ] ## } ## ms$import_settings(\"ffs.json\") ## ✓ find_features processing settings added! # \"openms\" replaced by \"xcms3_centwave\" ms ##  ## MassSpecData ## name          Example ## author        Person A ## path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles ## date          2023-11-02 11:57:04.599286 ##  ## settings:  ##  1: find_features (xcms3_centwave) ##  ## Analyses: 0 validate(ffs) ## [1] TRUE class(ffs) ## [1] \"ProcessingSettings\"            \"Settings_find_features_openms\" ## [3] \"patRoon\""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"semantics","dir":"Articles","previous_headings":"StreamFind","what":"Semantics","title":"Developer guide for mass spectrometry","text":"Consistent semantics attempted within StreamFind R package. class method names already mentioned clear use underscore separate words methods use Upper Camel Case classes visible. section, try highlight defined rules important semantic aspects. methods available via class MassSpecData$ written underscore separate words (e.g., get_analysis_names() annotate_features()). arguments methods, functions class constructors always written Lower Camel Case one word needed (e.g., colorBy minIntensity). Classes written Upper Camel Case two words used (e.g., MassSpecAnalysis ProjectHeaders) exception specific constructor functions different algorithm settings, use syntax Settings_[module name]_[algorithm name] (e.g., Settings_filter_features_StreamFind Settings_bin_spectra_qBinning); supports facilitates association settings respective processing module. Functions methods available user (.e., exported via package NAMESPACE) written . beginning, followed underscore separate words (e.g., .get_colors() .plot_ms2_static()). also applied S3 generics processing modules, use syntax .s3_ms_[module name] (e.g., .s3_ms_find_features .s3_ms_group_features).","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"files","dir":"Articles","previous_headings":"StreamFind","what":"Files","title":"Developer guide for mass spectrometry","text":"file structure StreamFind package line CRAN official package development guideline.). relevant files developer R, src, man-roxygen, tests vignettes. R folder R scripts, src folder C++ libraries Rcpp interface functions, man-roxygen templates documentation arguments, tests test units applied processing module algorithm implementation finally, vignettes articles, tutorial guides users. R file names R folder defined name syntax according content/function. Class files named class_[class type capital_[class name].R]. Exported MS function files named fct_ms_[unique name].R. MS utility functions exported named utils_ms_[unique name].R. S3 methods processing modules written methods_S3_ms_[module name]_[algorithm].R. ProcessingSettings constructors named constructor_S3_ms_[module name]_[algorithm].R.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Developer guide for mass spectrometry","text":"implementation new processing modules new algorithms given processing modules differ terms impact change. addition new processing modules require change main MassSpecData class addition new S3 generics, adding new algorithms existing modules require changes existing files. Therefore, describe implementation two separate sections.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"new-modules","dir":"Articles","previous_headings":"Implementation","what":"New modules","title":"Developer guide for mass spectrometry","text":"definition.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_developer_guide.html","id":"new-algorithms","dir":"Articles","previous_headings":"Implementation","what":"New algorithms","title":"Developer guide for mass spectrometry","text":"definition.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"StreamFind for mass spectrometry","text":"StreamFind R package framework data processing environmental quality studies. article introduces basic framework StreamFind R package mass spectrometric (MS) data processing. Installation instructions StreamFind R package can found . installed, StreamFind R package loaded shown .","code":"library(StreamFind)"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"StreamFind for mass spectrometry","text":"StreamFind includes example data files via supplementary StreamFindData R package.","code":"# install the StreamFindData R package from the GitHub repository remotes::install_github(\"odea-project/StreamFindData\")"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"ms-files","dir":"Articles","previous_headings":"Resources","what":"MS files","title":"StreamFind for mass spectrometry","text":"StreamFindData installed, full file paths example MS data files can obtained shown . files available described table . Note, MS files (.mzML .mzXML) trimmed function trim_ms_files_spectra() StreamFind reduce size. centroided Agilent Q-TOF files trimmed retention time 900 1350 seconds, m/z MS1 data 200 450 Da m/z MS2 35 450 Da. Additionally, MS1 MS2 traces 100 50 counts removed, respectively. profile Agilent Q-TOF files trimmed retention time 1000 1200 seconds, m/z MS1 data 200 300 Da m/z MS2 35 300 Da. Additionally, MS1 MS2 traces 1 count removed exclude empty spectra. files used within document demonstration framework.  Files included StreamFind R package.","code":"files <- StreamFindData::get_ms_file_paths() # files is a vector with all file full paths"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"spiked-chemicals","dir":"Articles","previous_headings":"Resources","what":"Spiked chemicals","title":"StreamFind for mass spectrometry","text":"chemicals spiked MS files described table. internal standards () spiked Agilent Q-TOF files. chemical standards (S) spiked first 6 Agilent Q-TOF files. Note S visible profile Agilent Q-TOF files narrower trimming applied.  Chemical standards spiked.","code":"db <- StreamFindData::get_ms_tof_spiked_chemicals()"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"massspecdata","dir":"Articles","previous_headings":"","what":"MassSpecData","title":"StreamFind for mass spectrometry","text":"MassSpecData R6 class object, holding MS data parsed .mzML .mzXML files well methods get, visualize process parsed data (see ?MassSpecData detailed documentation). straight forward manner initiate MassSpecData object character vector .mzML .mzXML file full path/s, shown three MS files (triplicate, 1 3 files table section MS files). object name defined Example 1 using argument headers. information MassSpecData$new() method, see ?MassSpecData documentation. print (show) method shown running MassSpecData object name. list included analyses printed console matching files added. Another option obtain overview ms object method get_overview() shown , returning data.frame analysis details within MassSpecData object.","code":"ms <- MassSpecData$new(files = files[1:3], headers = list(name = \"Example 1\")) #> ⚙ Parsing 3 MS file/s... Done! #> 🖫 Parsed MS files/s cached! #> ✓ MassSpecData class object created! ms #>  #> MassSpecData #> name          Example 1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:11.324399 #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886        0        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880        0        0      0 #>  3: MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive    1892        0        0      0 ms$get_overview()[, 1:5] # only the first 5 columns #>        type                  analysis            replicate blank polarity #> 1 MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive #> 2 MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive #> 3 MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"internal-fields","dir":"Articles","previous_headings":"MassSpecData","what":"Internal fields","title":"StreamFind for mass spectrometry","text":"MassSpecData object contains following internal fields (private fields) store standardized data: headers, settings, analyses, groups alignment. internal fields directly accessed changed. Instead, user must use respective get add methods, shown sections get methods add methods, respectively. add methods contain validation conformity checks ensure structure semantics added data respected. headers also Headers S3 class object list flexible headers length one (e.g., name, path, date, etc.) characterize MassSpecData object. given, name, path date automatically generated (name set NA_character_, path set getwd() date set Sys.time()) included list, required workflow purposes. entries can added user without type (class) limitations uniquely named length one. See ?Headers information; settings named list ProcessingSettings S3 class objects used data processing (see ?settings information). added settings object named according function call (processing name). settings interface described section processing settings; analyses named list MassSpecAnalysis S3 class objects representing file added MassSpecData (see?MassSpecAnalysis information). name MassSpecAnalysis object analyses list name file (without extension). duplicate file names (analyses names) can exist MassSpecData. structure MassSpecAnalysis S3 class object described section analyses; groups data.table feature groups correspondence analysis (.e., grouping features across analyses). information groups given section groups; alignment list results retention time alignment analyses MassSpecData object. information alignment given section alignment.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Get methods","title":"StreamFind for mass spectrometry","text":"Several methods implemented access data within MassSpecData object, already demonstrated get_overview(). method always used writing name MassSpecData object followed $ method call (e.g., ms$get_overview()). internal fields can accessed get_headers(), get_settings(), get_analyses(), get_groups() get_alignment(). instance, get method headers returns list entries. Note path date automatically created vignette built even given headers argument MassSpecData object created. Similarly, get method analyses returns list MassSpecAnalysis objects. get_analyses() used get first analysis object (a1). , names() function used show names entries a1 MassSpecAnalysis, represents first .mzML file parsed ms. Note get_analyses() method always returns list even one MassSpecAnalysis object. Therefore, use [[ function a1[[1]] access MassSpecAnalysis object . analysis object contains 26 fields (listed ) information data parsed directly .mzML file. Variations content structure (.e., different vendors data acquired different conditions modes) .mzML .mzXML files added affect content entry MassSpecAnalysis object structure remains (see ?MassSpecAnalysis). function parse.MassSpecAnalysis() StreamFind R package used create validate list MassSpecAnalysis objects character vector .mzML .mzXML full file paths (see ?parse.MassSpecAnalysis information). structure MassSpecAnalysis S3 class object described section analyses. typing ms$get, available get methods listed. documentation ?MassSpecData also contains detailed information usage examples available get methods.","code":"ms$get_headers() #> $name #> [1] \"Example 1\" #>  #> $author #> [1] NA #>  #> $path #> [1] \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" #>  #> $date #> [1] \"2023-11-02 11:57:11 CET\" #>  #> attr(,\"class\") #> [1] \"ProjectHeaders\" a1 = ms$get_analyses(analyses = 1)  class(a1[[1]]) #> [1] \"MassSpecAnalysis\"  names(a1[[1]]) #>  [1] \"name\"                 \"replicate\"            \"blank\"                \"file\"                 #>  [5] \"format\"               \"type\"                 \"time_stamp\"           \"spectra_number\"       #>  [9] \"spectra_mode\"         \"spectra_levels\"       \"mz_low\"               \"mz_high\"              #> [13] \"rt_start\"             \"rt_end\"               \"polarity\"             \"has_ion_mobility\"     #> [17] \"chromatograms_number\" \"software\"             \"instrument\"           \"run\"                  #> [21] \"spectra\"              \"chromatograms\"        \"features_eic\"         \"features\"             #> [25] \"metadata\"             \"version\""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"add-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Add methods","title":"StreamFind for mass spectrometry","text":"Add methods used add data existing MassSpecData object. instance, add new name description ms object method add_headers(). entry names already present MassSpecData object (e.g., name), content overwritten shown . Similarly, new MassSpecAnalysis objects can added add_analyses() shown . Note function parse.MassSpecAnalysis() used parse data files 7, 8 9, creating named list analysis objects. name MassSpecAnalysis list file name without extension. , list added ms object method add_analyses(). typing ms$add, available add methods listed. documentation ?MassSpecData also contains detailed information usage examples available add methods.","code":"ms$add_headers(name = \"Ex1\", description = \"An example MassSpecData.\") #> ✓ Added headers! ms$get_headers() #> $name #> [1] \"Ex1\" #>  #> $description #> [1] \"An example MassSpecData.\" #>  #> $author #> [1] NA #>  #> $path #> [1] \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" #>  #> $date #> [1] \"2023-11-02 11:57:12 CET\" #>  #> attr(,\"class\") #> [1] \"ProjectHeaders\" a_list = parse.MassSpecAnalysis(files[7:9]) #> ⚙ Parsing 3 MS file/s... Done! #> 🖫 Parsed MS files/s cached!  vapply(a_list, class, \"\") #> 00_tof_s_is_pos_prof-r001 00_tof_s_is_pos_prof-r002 00_tof_s_is_pos_prof-r003  #>        \"MassSpecAnalysis\"        \"MassSpecAnalysis\"        \"MassSpecAnalysis\" ms$add_analyses(a_list) #> ✓ 3 analyses added! ms #>  #> MassSpecData #> name          Ex1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:12.059716 #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886        0        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880        0        0      0 #>  3: MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive    1892        0        0      0 #>  4: MS/MS-DDA 00_tof_s_is_pos_prof-r001 00_tof_s_is_pos_prof  <NA> positive     859        0        0      0 #>  5: MS/MS-DDA 00_tof_s_is_pos_prof-r002 00_tof_s_is_pos_prof  <NA> positive     851        0        0      0 #>  6: MS/MS-DDA 00_tof_s_is_pos_prof-r003 00_tof_s_is_pos_prof  <NA> positive     856        0        0      0"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"remove-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Remove methods","title":"StreamFind for mass spectrometry","text":"Complementary add methods, remove methods used remove data existing MassSpecData object. instance, code chunk name description removed headers ms object. However, name, path date removed. Even one specified, removed. Yet, can changed add_headers() method. Also, analyses can removed remove_analyses() method shown . removing analyses, correspondence feature groups unique analyses also removed MassSpecData object. typing ms$remove, available remove methods listed. documentation ?MassSpecData also contains detailed information usage examples available remove methods.","code":"ms$remove_headers(c(\"name\", \"description\")) #> ✓ Removed headers: description ms$get_headers() #> $name #> [1] \"Ex1\" #>  #> $author #> [1] NA #>  #> $path #> [1] \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" #>  #> $date #> [1] \"2023-11-02 11:57:12 CET\" #>  #> attr(,\"class\") #> [1] \"ProjectHeaders\" ms$remove_analyses(4:6) #> ✓ Removed analyses: #> 00_tof_s_is_pos_prof-r001 #> 00_tof_s_is_pos_prof-r002 #> 00_tof_s_is_pos_prof-r003 ms #>  #> MassSpecData #> name          Ex1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:12.059716 #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886        0        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880        0        0      0 #>  3: MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive    1892        0        0      0"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"subset-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Subset methods","title":"StreamFind for mass spectrometry","text":"remove methods changes MassSpecData object reference, subset methods create clone subset MassSpecData object. instance, method subset_analyses() demonstrated create clone ms object first 2 analyses. Note output behaves new MassSpecData object created. fact, happens background. Also, note sub-setting content (.e., internal fields) cloned new MassSpecData class object. instance, headers subset_ms object ms object. changes subset_ms object creation affect ms object cloned. information copy cloning R6 class objects recommended R6 official documentation. typing ms$subset, available subset methods listed. documentation ?MassSpecData also contains detailed information usage examples available subset methods.","code":"subset_ms <- ms$subset_analyses(analyses = 1:2) #> ✓ Subset with 2 analyses created!  subset_ms #>  #> MassSpecData #> name          Ex1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:12.059716 #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886        0        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880        0        0      0"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"has-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Has methods","title":"StreamFind for mass spectrometry","text":"methods simply check data present MassSpecData. methods shown . typing ms$, available methods listed. documentation ?MassSpecData also contains detailed information usage examples available methods.","code":"# check if settings are present ms$has_settings() #> [1] FALSE  # check if analyses are present ms$has_analyses() #> [1] TRUE  # check if features are present in analyses ms$has_features() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                     FALSE                     FALSE                     FALSE  # check if raw spectra are loaded to analyses ms$has_loaded_spectra() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                     FALSE                     FALSE                     FALSE"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"plot-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Plot methods","title":"StreamFind for mass spectrometry","text":"Within MassSpecData class object, standardized methods plotting data also available. plot methods use data can obtained get methods, meaning user able re-plot data different approach/style. instance, get_tic() method can used obtain total ion chromatogram (TIC) data.table columns analysis, rt intensity, shown first analysis. TIC data can directly plotted using plot_tic() method, shown .  Note plotting data available (e.g., features current ms object feature finding yet applied) returns NULL (demonstrated ).  plot methods interactive argument set TRUE default using plotly package plot data. static version plot using base plot() function can obtained setting interactive FALSE, shown base peak chromatogram (BPC) analyses ms object. typing ms$plot, available plot methods listed. documentation ?MassSpecData also contains detailed information usage examples available plot methods.","code":"head(ms$get_tic(analyses = 1)) #>                     analysis polarity level      rt   intensity #> 1: 00_tof_s_is_pos_cent-r001        1     1 900.093 84532.19000 #> 2: 00_tof_s_is_pos_cent-r001        1     2 900.495   263.00735 #> 3: 00_tof_s_is_pos_cent-r001        1     2 900.695    62.77822 #> 4: 00_tof_s_is_pos_cent-r001        1     2 900.896  1709.72934 #> 5: 00_tof_s_is_pos_cent-r001        1     2 901.097  1236.84611 #> 6: 00_tof_s_is_pos_cent-r001        1     2 901.298   845.98020 ms$plot_tic(analyses = 1) ms$plot_features() #> ✗ Features not found for the targets! #> NULL ms$plot_bpc(interactive = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"save-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Save methods","title":"StreamFind for mass spectrometry","text":"MassSpecData object stored default environment R session save within .RData save.image() function used (default save current environment asked R session ends terminated). However, save methods also available save data within internal fields formats. Currently .rds .json possible. , save_headers() method used save Headers S3 class object .json. Similarly, save_analyses() method can applied export specific MassSpecAnalysis objects .rds .json. , first MassSpecAnalysis object exported .json named a1. section import methods, exported analysis (a1.json) imported ms object. Also, entire ms object can saved using save() method shown . save methods listed typing ms$save. , documentation ?MassSpecData contains detailed information usage examples available save methods.","code":"ms$save_headers(format = \"json\", path = getwd()) # the prettify function is applied for simplifying the json string output jsonlite::prettify(readLines(\"headers.json\")) #> { #>     \"name\": [ #>         \"Ex1\" #>     ], #>     \"author\": [ #>         null #>     ], #>     \"path\": [ #>         \"C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles\" #>     ], #>     \"date\": [ #>         \"2023-11-02 11:57:12\" #>     ] #> } #> ms$save_analyses(analyses = 1, format = \"json\", name = \"a1\") ms$save(format = \"json\", name = \"ms\", path = getwd())"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"import-methods","dir":"Articles","previous_headings":"MassSpecData","what":"Import methods","title":"StreamFind for mass spectrometry","text":"Complementary save methods, .json .rds files can imported MassSpecData using import methods. instance, previously saved headers.json imported back ms object. add_headers(), entry names already present, content overwritten. Also, saved a1.json MassSpecAnalysis object can imported import_analyses() method. However, analysis name already present ms object, warning printed operation done (shown ). internal fields (.e., settings, groups alignment) can similarly imported. Validation conformity tests applied ensure data required structure. saved MassSpecData object can imported .json .rds using import_MassSpecData() function StreamFind package. , previously saved ms.json imported compared ms.","code":"ms$import_headers(\"headers.json\") #> ✓ Added headers! ms$import_analyses(\"a1.json\") #> Warning in self$add_analyses(analyses): Duplicated analysis names not allowed! Not done. ms_imported = import_MassSpecData(\"ms.json\") #> ✓ MassSpecData class object created! #> ✓ Added headers! #> ✓ 3 analyses added! #> ✓ MassSpecData class object imported from json file! all.equal(ms, ms_imported) #>  [1] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Length mismatch: comparison on first 20 components\"                              #>  [2] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.324852\\\": target is data.table, current is list\" #>  [3] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.325629\\\": target is data.table, current is list\" #>  [4] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.325867\\\": target is data.table, current is list\" #>  [5] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.326077\\\": target is data.table, current is list\" #>  [6] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.635791\\\": target is data.table, current is list\" #>  [7] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.636082\\\": target is data.table, current is list\" #>  [8] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.636295\\\": target is data.table, current is list\" #>  [9] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:11.636726\\\": target is data.table, current is list\" #> [10] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.059995\\\": target is data.table, current is list\" #> [11] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.060306\\\": target is data.table, current is list\" #> [12] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.060529\\\": target is data.table, current is list\" #> [13] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.060735\\\": target is data.table, current is list\" #> [14] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.060942\\\": target is data.table, current is list\" #> [15] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.475864\\\": target is data.table, current is list\" #> [16] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.476161\\\": target is data.table, current is list\" #> [17] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.476386\\\": target is data.table, current is list\" #> [18] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.625923\\\": target is data.table, current is list\" #> [19] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.760789\\\": target is data.table, current is list\" #> [20] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.761082\\\": target is data.table, current is list\" #> [21] \"Component \\\".__enclos_env__\\\": Component \\\"private\\\": Component \\\".history\\\": Component \\\"2023-11-02 11:57:12.76129\\\": target is data.table, current is list\""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"analyses","dir":"Articles","previous_headings":"","what":"Analyses","title":"StreamFind for mass spectrometry","text":"Within MassSpecData object, internal field analyses list MassSpecAnalysis S3 class objects representing MS files disk. shown MassSpecData section, MassSpecData can initiated files argument using character vector full file path/s .mzML .mzXML files. Alternatively, function parse.MassSpecAnalysis() can used generate list analysis objects argument analyses new() method add_analyses() method can used add MassSpecAnalysis objects MassSpecData object. package mzR Bioconductor used parse data. mzR package available (.e., installed), xml2 package CRAN used instead much slower. Specially large MS files (e.g., high resolution MS files ion mobility), mzR package recommended. data parsed independently package used. structure example MassSpecAnalysis object shown consists 23 entries (see ?MassSpecAnalysis information). name file name without extension; replicate analysis replicate group name; blank associated blank replicate group name; file full file path; type either “MS” MS1 spectral data, “MS/MS” tandem spectral data (.e., MS1 MS2) “SRM” selected reaction monitoring data (.e., spectra chromatograms); instrument list metadata instrument used acquire data (content highly vendor dependent); time_stamp start time date data acquisition; spectra_number number spectra file; spectra_mode one centroid, profile NA centroided data, data profile mode mode defined absence spectra, respectively. spectra_levels number levels spectra (.e., 1 1 2); mz_low lowest value detected spectra, Da; mz_high highest value detected spectra, Da; rt_start run start time, seconds; rt_end run end time, seconds; polarity polarity mode: positive, negative (latter refers polarity switching acquisition); chromatograms_number number chromatograms (applicable .mzML files); ion_mobility TRUE FALSE presence absence drift separation ion mobility; tic data.table total ion chromatogram; bpc data.table base peak chromatogram; spectra data.table raw spectra (present loaded load_spectra() method); chromatograms data.table raw chromatograms (present loaded load_chromatograms() method); features data.table features obtained data processing (e.g., find_features() method); metadata list flexible storage experimental metadata (e.g., concentration, location, etc.);","code":"str(a1[[1]]) #> List of 26 #>  $ name                : chr \"00_tof_s_is_pos_cent-r001\" #>  $ replicate           : chr \"00_tof_s_is_pos_cent\" #>  $ blank               : chr NA #>  $ file                : chr \"C:/Users/cunha/AppData/Local/R/win-library/4.3/StreamFindData/extdata/00_tof_s_is_pos_cent-r001.mzML\" #>  $ format              : chr \"mzML\" #>  $ type                : chr \"MS/MS-DDA\" #>  $ time_stamp          : chr \"2022-06-17T14:45:28Z\" #>  $ spectra_number      : int 1886 #>  $ spectra_mode        : chr \"centroid\" #>  $ spectra_levels      : int [1:2] 1 2 #>  $ mz_low              : num 0 #>  $ mz_high             : num 450 #>  $ rt_start            : num 900 #>  $ rt_end              : num 1350 #>  $ polarity            : chr \"positive\" #>  $ has_ion_mobility    : logi FALSE #>  $ chromatograms_number: int 0 #>  $ software            :Classes 'data.table' and 'data.frame':   4 obs. of  3 variables: #>   ..$ name   : chr [1:4] \"MassHunter Data Acquisition\" \"ProteoWizard software\" \"ProteoWizard software\" \"mzR\" #>   ..$ id     : chr [1:4] \"MassHunter\" \"pwiz\" \"pwiz_3.0.21263\" \"mzR\" #>   ..$ version: chr [1:4] \"8.0\" \"3.0.19322\" \"3.0.21263\" \"2.30.0\" #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ instrument          :Classes 'data.table' and 'data.frame':   10 obs. of  2 variables: #>   ..$ category: chr [1:10] \"Agilent instrument model\" \"instrument serial number\" \"instrument model\" \"source\" ... #>   ..$ value   : chr [1:10] \"Agilent instrument model\" \"SG1845C101\" \"QTOF\" \"microelectrospray\" ... #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ run                 :Classes 'data.table' and 'data.frame':   1886 obs. of  18 variables: #>   ..$ index        : int [1:1886] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ scan         : int [1:1886] 900101 900503 900703 900904 901105 901306 901506 901753 902154 902355 ... #>   ..$ traces       : int [1:1886] 442 1 1 2 3 4 6 523 15 19 ... #>   ..$ polarity     : int [1:1886] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ mode         : int [1:1886] 2 2 2 2 2 2 2 2 2 2 ... #>   ..$ level        : int [1:1886] 1 2 2 2 2 2 2 1 2 2 ... #>   ..$ rt           : num [1:1886] 900 900 901 901 901 ... #>   ..$ drift        : num [1:1886] NA NA NA NA NA NA NA NA NA NA ... #>   ..$ bpc_mz       : num [1:1886] 259.2 82.1 52 72.9 72.9 ... #>   ..$ bpc_intensity: num [1:1886] 3450.5 263 62.8 1504.5 935.6 ... #>   ..$ tic_intensity: num [1:1886] 84532.2 263 62.8 1709.7 1236.8 ... #>   ..$ mzlow        : num [1:1886] 200.2 82.1 52 67.9 55.9 ... #>   ..$ mzhigh       : num [1:1886] 449 82.1 52 72.9 72.9 ... #>   ..$ pre_scan     : int [1:1886] NA 900101 900101 900101 900101 900101 900101 NA 901753 901753 ... #>   ..$ pre_mz       : num [1:1886] NA 171 171 114 114 ... #>   ..$ pre_ce       : num [1:1886] NA 10 35 10 35 10 35 NA 10 35 ... #>   ..$ pre_mzlow    : num [1:1886] NA NA NA NA NA NA NA NA NA NA ... #>   ..$ pre_mzhigh   : num [1:1886] NA NA NA NA NA NA NA NA NA NA ... #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ spectra             :Classes 'data.table' and 'data.frame':   0 obs. of  0 variables #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ chromatograms       :Classes 'data.table' and 'data.frame':   0 obs. of  0 variables #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ features_eic        : list() #>  $ features            :Classes 'data.table' and 'data.frame':   0 obs. of  0 variables #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ metadata            : list() #>  $ version             : chr \"0.2.0\" #>  - attr(*, \"class\")= chr \"MassSpecAnalysis\""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-basic-information","dir":"Articles","previous_headings":"Analyses","what":"Get basic information","title":"StreamFind for mass spectrometry","text":"data MassSpecAnalysis objects can obtained get methods shown . , methods get information analyses demonstrated. methods except get_number_analyses(), analyses argument can used query information specific analyses, using analysis name index shown .","code":"# getter for number of analyses ms$get_number_analyses() #> [1] 3  # getter for file names (i.e., analysis names) ms$get_analysis_names(analyses = 1:2) #>   00_tof_s_is_pos_cent-r001   00_tof_s_is_pos_cent-r002  #> \"00_tof_s_is_pos_cent-r001\" \"00_tof_s_is_pos_cent-r002\"  # getter for file full paths of analyses ms$get_files(3) #>                                                                              00_tof_s_is_pos_cent-r003  #> \"C:/Users/cunha/AppData/Local/R/win-library/4.3/StreamFindData/extdata/00_tof_s_is_pos_cent-r003.mzML\"  # getter for replicate group names ms$get_replicate_names() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>    \"00_tof_s_is_pos_cent\"    \"00_tof_s_is_pos_cent\"    \"00_tof_s_is_pos_cent\"  # getter for associated blank replicate group names ms$get_blank_names() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                        NA                        NA                        NA  # getter for polarities ms$get_polarities(analyses = \"00_hrms_s_is_pos_cent-r003\") #> Warning in private$.check_analyses_argument(analyses): Defined analyses not found! #> NULL  # getter for lower mz value ms$get_mz_low(c(\"00_hrms_s_is_pos_cent-r001\", \"00_hrms_s_is_pos_cent-r003\")) #> Warning in private$.check_analyses_argument(analyses): Defined analyses not found! #> NULL  # getter for higher mz value ms$get_mz_high() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                  449.9957                  449.9977                  449.9973  # getter for start retention time ms$get_rt_start() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                   900.093                   900.176                   900.296  # getter for retention time end ms$get_rt_end() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                  1349.886                  1349.865                  1349.785  # getter for MS levels. Note that it returns a list not a vector! ms$get_spectra_levels() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r002  #>                         1                         2                         1                         2  #> 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent-r003  #>                         1                         2  # getter for spectra mode ms$get_spectra_mode() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                \"centroid\"                \"centroid\"                \"centroid\"  # getter for TIC head(ms$get_tic(analyses = 2)) #>                     analysis polarity level      rt   intensity #> 1: 00_tof_s_is_pos_cent-r002        1     1 900.176 89913.47353 #> 2: 00_tof_s_is_pos_cent-r002        1     1 900.376 91671.23309 #> 3: 00_tof_s_is_pos_cent-r002        1     2 900.777    55.32065 #> 4: 00_tof_s_is_pos_cent-r002        1     2 900.978     0.00000 #> 5: 00_tof_s_is_pos_cent-r002        1     1 901.225 95438.06544 #> 6: 00_tof_s_is_pos_cent-r002        1     2 901.626  3329.93284  # getter for BPC head(ms$get_bpc()) #>                     analysis polarity level      rt        mz  intensity #> 1: 00_tof_s_is_pos_cent-r001        1     1 900.093 259.15174 3450.45898 #> 2: 00_tof_s_is_pos_cent-r001        1     2 900.495  82.06341  263.00735 #> 3: 00_tof_s_is_pos_cent-r001        1     2 900.695  52.01887   62.77822 #> 4: 00_tof_s_is_pos_cent-r001        1     2 900.896  72.93683 1504.46399 #> 5: 00_tof_s_is_pos_cent-r001        1     2 901.097  72.93706  935.63983 #> 6: 00_tof_s_is_pos_cent-r001        1     2 901.298  58.06513  325.16455"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"making-spectra-targets","dir":"Articles","previous_headings":"Analyses","what":"Making spectra targets","title":"StreamFind for mass spectrometry","text":"Besides analysis information, low level data (.e., spectra chromatograms) can also obtained specific get methods. spectra, definition targets selectively parse small pieces raw data essential. StreamFind, targets can comprehensively assembled function make_ms_targets(), demonstrated Carbamazepin-d10 Diuron-d6 (internal standards spiked analyses ms object). function make_ms_targets() five arguments (mz, rt, ppm, sec id) used assemble targets. , different ways demonstrated build MS targets. Case 1: Individual m/z time targets deviations. Case 2: m/z time minimum maximum ranges data.frame given mz rt, respectively. Case 3: m/z time targets given data.frame mz mass time deviations given ppm sec, respectively. Case 4: m/z time minimum maximum ranges given directly data.frame mz. Although different ways used build data.frame targets, result tested . Note exact mass (m/z) time targets given (.e., given minimum maximum ranges), calculated average minimum maximum values (see cases 2 4 ).","code":"# Carbamazepin-d10 is ionized only in positive mode carbamazepin_d10 <- db[name %in% \"Carbamazepin-d10\", .(name, mass, rt)] carbamazepin_d10 #>                name     mass   rt #> 1: Carbamazepin-d10 246.1577 1075  # Expected m/z and time of Carbamazepin-d10 carb_mz_pos <- carbamazepin_d10$mass + 1.0073 # for positive ionization ([M+H]+) carb_mz_pos #> [1] 247.165 carb_rt <- carbamazepin_d10$rt carb_rt #> [1] 1075  # Diuron-d6 is ionized in both positive and negative modes diuron_d6 <- db[name %in% \"Diuron-d6\", .(name, mass, rt)] diuron_d6 #>         name     mass   rt #> 1: Diuron-d6 238.0547 1157  # Expected m/z and time of Diuron-d6 diu_mz_pos <- diuron_d6$mass + 1.0073 # for positive ionization ([M+H]+) diu_mz_pos #> [1] 239.062 diu_rt <- diuron_d6$rt diu_rt #> [1] 1157  # Time and mass deviations to make the targets sec_dev <- 30 # in seconds ppm_dev <- 20 # in ppm # m/z targets, in Da mz1 <- c(carb_mz_pos, diu_mz_pos)  # Time targets, in seconds rt1 <- c(carb_rt, diu_rt)  # Optional identifiers for the targets id1 <- c(\"target1\", \"target2\")  targets1 <- make_ms_targets(mz = mz1, rt = rt1, ppm = ppm_dev, sec = sec_dev, id = id1)  targets1 #>         id      mz   rt drift    mzmin    mzmax rtmin rtmax driftmin driftmax #> 1: target1 247.165 1075     0 247.1601 247.1699  1045  1105        0        0 #> 2: target2 239.062 1157     0 239.0572 239.0668  1127  1187        0        0 # Calculating mass deviation in Da from 200 ppm ppm_carb <- ppm_dev / 1E6 * carb_mz_pos ppm_diu <- ppm_dev / 1E6 * diu_mz_pos  # Min and Max m/z ranges, in Da mz2 <- data.frame(   \"mzmin\" = c(carb_mz_pos - ppm_carb, diu_mz_pos - ppm_diu),   \"mzmax\" = c(carb_mz_pos + ppm_carb, diu_mz_pos + ppm_diu) ) # Min and Max time ranges, in seconds rt2 <- data.frame(   \"rtmin\" = c(carb_rt - sec_dev, diu_rt - sec_dev),   \"rtmax\" = c(carb_rt + sec_dev, diu_rt + sec_dev) )  targets2 <- make_ms_targets(mz = mz2, rt = rt2)  targets2 #>                             id      mz   rt drift    mzmin    mzmax rtmin rtmax driftmin driftmax #> 1: 247.1601-247.1699/1045-1105 247.165 1075     0 247.1601 247.1699  1045  1105        0        0 #> 2: 239.0572-239.0668/1127-1187 239.062 1157     0 239.0572 239.0668  1127  1187        0        0 # data.frame with m/z and time targets mz3 <- data.frame(   \"id\" = c(\"target1\", \"target2\"),   \"mz\" = c(carb_mz_pos, diu_mz_pos),   \"rt\" = c(carb_rt, diu_rt) )  targets3 <- make_ms_targets(mz = mz3, ppm = ppm_dev, sec = sec_dev)  targets3 #>         id      mz   rt drift    mzmin    mzmax rtmin rtmax driftmin driftmax #> 1: target1 247.165 1075     0 247.1601 247.1699  1045  1105        0        0 #> 2: target2 239.062 1157     0 239.0572 239.0668  1127  1187        0        0 # data.frame with m/z and time minimum and maximum ranges mz4 <- data.frame(   \"id\" = c(\"target1\", \"target2\"),   \"mzmin\" = c(carb_mz_pos - ppm_carb, diu_mz_pos - ppm_diu),   \"mzmax\" = c(carb_mz_pos + ppm_carb, diu_mz_pos + ppm_diu),   \"rtmin\" = c(carb_rt - sec_dev, diu_rt - sec_dev),   \"rtmax\" = c(carb_rt + sec_dev, diu_rt + sec_dev) )  targets4 <- make_ms_targets(mz = mz4)  targets4 #>         id      mz   rt drift    mzmin    mzmax rtmin rtmax driftmin driftmax #> 1: target1 247.165 1075     0 247.1601 247.1699  1045  1105        0        0 #> 2: target2 239.062 1157     0 239.0572 239.0668  1127  1187        0        0 #test all equal target 1 t1 <- rbind(targets1[1, ], targets2[1,], targets3[1, ], targets4[1, ]) all(round(apply(t1[, 2:7], 2, sd), digits = 4) == 0)  #> [1] TRUE  #test all equal target 2 t2 <- rbind(targets1[2, ], targets2[2,], targets3[2, ], targets4[2, ]) all(round(apply(t2[, 2:7], 2, sd), digits = 4) == 0) #> [1] TRUE"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-and-plot-spectra","dir":"Articles","previous_headings":"Analyses","what":"Get and plot spectra","title":"StreamFind for mass spectrometry","text":"Besides get_tic() get_bpc() methods (shown ). four methods get low level spectra analyses: get_spectra(), get_eic(), get_ms1() get_ms2(). methods use arguments function make_ms_targets() build MS targets analyses argument specify MassSpecAnalysis objects query data. methods return data.table. documentation ?MassSpecData detailed information use method. get method, plot method available similar interface. get plot method demonstrated defined targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"mass-traces","dir":"Articles","previous_headings":"Analyses > Get and plot spectra","what":"Mass traces","title":"StreamFind for mass spectrometry","text":"Spectra can obtained get_spectra() method plotted plot_spectra(). levels argument includes 2, extra columns given applied collision energy (ce), precursor scan number (preScan) isolated m/z value (preMZ). Arguments minIntensityMS1 minIntensityMS2 can used define minimum intensity parsed mass traces. allTraces argument can set FALSE returning MS2 data correspondent defined targets. , isolationWindow argument used calculate isolation window target retrieve MS2 based preMZ rt columns (demonstrated second spectra plot). Another plotting option raw spectra plot_xic() method shown . method returns two row plot traces intensity vs retention time top m/z vs retention time . targetsMark can defined illustrate area expected m/z retention time targets. , targets1 rt mz columns narrower ppm sec deviations (.e., 5 ppm 10 seconds, respectively) used show area Carbamazepin-d10 expected potential identification.","code":"# Getter for level 1 raw spectra of targets from analysis 1 head(ms$get_spectra(analyses = 1, mz = targets1, levels = 1)) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                     analysis index    scan polarity level pre_scan pre_ce pre_mz pre_mzlow pre_mzhigh #> 1: 00_tof_s_is_pos_cent-r001   625 1051585        1     1       NA     NA     NA        NA         NA #> 2: 00_tof_s_is_pos_cent-r001   626 1051785        1     1       NA     NA     NA        NA         NA #> 3: 00_tof_s_is_pos_cent-r001   635 1054190        1     1       NA     NA     NA        NA         NA #> 4: 00_tof_s_is_pos_cent-r001   653 1057794        1     1       NA     NA     NA        NA         NA #> 5: 00_tof_s_is_pos_cent-r001   661 1059852        1     1       NA     NA     NA        NA         NA #> 6: 00_tof_s_is_pos_cent-r001   666 1061101        1     1       NA     NA     NA        NA         NA #>          rt       mz intensity      id #> 1: 1051.577 247.1699  266.1408 target1 #> 2: 1051.777 247.1653  170.7393 target1 #> 3: 1054.182 247.1695  137.6068 target1 #> 4: 1057.786 247.1685  137.0182 target1 #> 5: 1059.844 247.1685  185.2737 target1 #> 6: 1061.093 247.1693  132.1641 target1 # Getter for level 2 raw spectra of targets from analysis 1 head(ms$get_spectra(analyses = 1, mz = targets1, levels = 2)) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                     analysis index    scan polarity level pre_scan pre_ce   pre_mz pre_mzlow pre_mzhigh #> 1: 00_tof_s_is_pos_cent-r001   703 1070564        1     2  1070163     10 247.1653        NA         NA #> 2: 00_tof_s_is_pos_cent-r001   713 1073035        1     2  1072232     10 246.1585        NA         NA #> 3: 00_tof_s_is_pos_cent-r001   718 1074375        1     2  1073973     10 493.3212        NA         NA #> 4: 00_tof_s_is_pos_cent-r001   719 1074575        1     2  1073973     35 493.3212        NA         NA #> 5: 00_tof_s_is_pos_cent-r001   732 1077010        1     2  1076529     10 495.1798        NA         NA #> 6: 00_tof_s_is_pos_cent-r001   737 1078353        1     2  1077859     10 247.1653        NA         NA #>          rt       mz  intensity      id #> 1: 1070.556 247.1644  2552.5784 target1 #> 2: 1073.027 247.1650  1220.9025 target1 #> 3: 1074.367 247.1656 11859.5967 target1 #> 4: 1074.567 247.1648  4409.1353 target1 #> 5: 1077.002 247.1662   225.6866 target1 #> 6: 1078.345 247.1655  2331.8867 target1 # Plots raw spectra (level 1) of all analyses with intensity above 1000 ms$plot_spectra(mz = targets1, levels = 1, minIntensityMS1 = 1000) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! # Plots raw spectra (level 1 and 2) of analysis 2 and target 1 while coloring by levels # Note that allTraces was set to FALSE to retrieve MS2 of MS1 targets considering an isolation window of 1.3 Da ms$plot_spectra(   analyses = 2, mz = targets1[1, ], levels = c(1,2),    allTraces = FALSE, isolationWindow = 1.3, colorBy = \"levels\",   minIntensityMS1 = 1000, minIntensityMS2 = 10 ) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$plot_xic(analyses = 1:2, mz = targets1[2,],   targetsMark = targets1[2, c(\"rt\", \"mz\")], ppmMark = 5, secMark = 10) #> ⚙ Parsing spectra from 2 MS file/s... Done! #> 🖫 Parsed spectra cached!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"eic","dir":"Articles","previous_headings":"Analyses > Get and plot spectra","what":"EIC","title":"StreamFind for mass spectrometry","text":"extracted ion chromatogram (EIC) can obtained get_eic() plotted plot_eic() method. interface similar previous methods, analyses make targets arguments used specify analyses parse data traces retrieve.","code":"ms$get_eic(analyses = 1, mz = mz1, rt = rt1, ppm = 5, sec = 10) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                      analysis polarity                          id       rt   intensity #>  1: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1068.906    475.4273 #>  2: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1069.106   1061.4553 #>  3: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1069.307   1127.3320 #>  4: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1070.155   8936.2217 #>  5: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1071.003  31982.0020 #>  6: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1072.224 124947.7812 #>  7: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1073.965 386014.0000 #>  8: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1075.617 494635.6562 #>  9: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1077.851 293527.6250 #> 10: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1079.214 158460.7656 #> 11: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1080.866  71661.5781 #> 12: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1081.788  51021.5586 #> 13: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1082.944  35174.8750 #> 14: 00_tof_s_is_pos_cent-r001        1 247.1638-247.1662/1065-1085 1084.354  23622.6016 #> 15: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1151.727   1214.5728 #> 16: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1152.575   4681.6792 #> 17: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1154.134  29117.3613 #> 18: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1155.476  87716.6250 #> 19: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1157.128 135111.7656 #> 20: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1158.548 130023.3125 #> 21: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1158.749 127509.9141 #> 22: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1159.597 102260.5469 #> 23: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1160.685  70154.9297 #> 24: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1162.153  36913.1758 #> 25: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1163.505  22763.1465 #> 26: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1163.809  19723.6406 #> 27: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1164.998  14764.5938 #> 28: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1165.848  10984.7188 #> 29: 00_tof_s_is_pos_cent-r001        1 239.0608-239.0632/1147-1167 1166.460   8428.2959 #>                      analysis polarity                          id       rt   intensity ms$plot_eic(mz = targets1, interactive = FALSE) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$plot_eic(mz = targets1, colorBy = \"analyses\") #> ℹ Spectra loaded from cache!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"ms1-and-ms2-spectra","dir":"Articles","previous_headings":"Analyses > Get and plot spectra","what":"MS1 and MS2 spectra","title":"StreamFind for mass spectrometry","text":"EIC method collects sums traces retention time value (.e., scan), get_ms1() get_ms2() methods average mass traces given retention time interval, returning averaged spectrum representing several scans. averaging based clustering mass traces according given mzClust argument demonstrated MS1 MS2 data.","code":"# MS1 averaged spectrum of targets from 247 to 257 (Carbamazepin-d10) and 239 to 245 (Diuron-d6) m/z and +/- 1 second the retention time of each target ms$get_ms1(analyses = 3, mzClust = 0.005,   mz = data.frame(\"mzmin\" = c(247, 239), \"mzmax\" = c(257, 245)),   rt = data.frame(\"rtmin\" = targets1$rt - 1, \"rtmax\" = targets1$rt + 1) )  #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                     analysis                id polarity       rt       mz  intensity #> 1: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 239.0629 136537.797 #> 2: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 240.0651  13238.891 #> 3: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 241.0599  88077.086 #> 4: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 242.0622   8096.552 #> 5: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 242.1443   4972.892 #> 6: 00_tof_s_is_pos_cent-r003 239-245/1156-1158        1 1157.553 243.0567  13344.084 #> 7: 00_tof_s_is_pos_cent-r003 247-257/1074-1076        1 1075.320 247.1667 467487.781 #> 8: 00_tof_s_is_pos_cent-r003 247-257/1074-1076        1 1075.320 248.1696  64967.305 #> 9: 00_tof_s_is_pos_cent-r003 247-257/1074-1076        1 1075.320 249.1725   5653.086 # In the plot, the Carbamazepin-d10 and Diuron-d6 isotopes can be distinguished ms$plot_ms1(analyses = 3,   mz = data.frame(\"mzmin\" = c(247, 239), \"mzmax\" = c(257, 245)),   rt = data.frame(\"rtmin\" = targets1$rt - 1, \"rtmax\" = targets1$rt + 1),   mzClust = 0.005, interactive = FALSE ) #> ℹ Spectra loaded from cache! # MS2 data of Diuron-d6 for analysis 1 ms$get_ms2(analyses = 1, mz = targets1[2, ]) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                      analysis      id polarity  pre_mz       rt        mz  intensity is_pre #>  1: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  50.08603  167.68597  FALSE #>  2: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  52.06201   71.65398  FALSE #>  3: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  52.10307  880.15546  FALSE #>  4: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  58.02526  284.37335  FALSE #>  5: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  67.05350  136.25000  FALSE #>  6: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  69.06932  148.38947  FALSE #>  7: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855  78.08215 3100.08008  FALSE #>  8: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 109.08662  199.07353  FALSE #>  9: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 123.99397  120.91129  FALSE #> 10: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 132.95641   72.00000  FALSE #> 11: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 132.96170  246.98898  FALSE #> 12: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 203.05598  164.08511  FALSE #> 13: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 237.05647   91.56356  FALSE #> 14: 00_tof_s_is_pos_cent-r001 target2        1 239.062 1160.855 239.06161  913.12909   TRUE # MS2 data plot of Diuron-d6 in all analyses ms$plot_ms2(mz = targets1[2 ,],    mzClust = 0.005, minIntensity = 50,   colorBy = \"analyses\", verbose = FALSE) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! # MS2 data plot of both targets in analyses 3 # Note that \"minIntensity\" argument was increased to 500 counts, resulting in a cleaner averaged spectrum ms$plot_ms2(analyses = 3, mz = targets1,    mzClust = 0.005, minIntensity = 500,   colorBy = \"targets\", verbose = FALSE) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"centroiding","dir":"Articles","previous_headings":"","what":"Centroiding","title":"StreamFind for mass spectrometry","text":"Possible using function convert_ms_files() utilizes MSConvert command line interface. See help(convert_ms_files) information. Alternative centroiding implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"processing-settings","dir":"Articles","previous_headings":"","what":"Processing settings","title":"StreamFind for mass spectrometry","text":"Data processing steps often require settings parameters support application given function data. MassSpecData object, methods require settings settings argument (e.g., method find_features()). StreamFind package, settings argument takes ProcessingSettings S3 class list object (see ?ProcessingSettings) three mandatory elements: call, algorithm parameters. call defines name method (processing step applied), “find_features” “group_features”. algorithm defines algorithm used processing step (e.g., “xcms” “openms”). Finally, parameters list algorithm dependent entries define settings applied data processing. example “find_features” settings using algorithm “xcms” given . data processing methods StreamFind use package patRoon. Therefore, interface parameters similar. algorithm parameters (named “param” patRoon) can taken respective documentation equivalent function. instance, find_features() method StreamFind uses findFeatures() function patRoon. documentation data processing method ?MassSpecData explains exemplifies usage required settings can acquired patRoon. ProcessingSettings object can added MassSpecData object add_settings() method shown . Similarly, can obtained get_settings() method using call name also shown .","code":"settingsFindFeatures <- Settings_find_features_xcms3_centwave(   ppm = 12,   peakwidth = c(5, 30),   snthresh = 10,   prefilter = c(5, 1500),   mzCenterFun = \"mean\",   integrate = 2,   mzdiff = -0.0001,   fitgauss = TRUE,   noise = 500,   verboseColumns = TRUE,   firstBaselineCheck = FALSE,   extendLengthMSW = TRUE )  settingsFindFeatures #>  #>  ProcessingSettings  #>  call         find_features #>  algorithm    xcms3_centwave #>  version      0.2.0 #>  software     xcms #>  developer    Ralf Tautenhahn, Johannes Rainer #>  contact      rtautenh@ipb-halle.de #>  link         https://bioconductor.org/packages/release/bioc/html/xcms.html #>  doi          https://doi.org/10.1186/1471-2105-9-504 #>  #>  parameters   #>   -  class CentWaveParam  #>   -  ppm 12  #>   -  peakwidth 5 30  #>   -  snthresh 10  #>   -  prefilter 5 1500  #>   -  mzCenterFun mean  #>   -  integrate 2  #>   -  mzdiff -1e-04  #>   -  fitgauss TRUE  #>   -  noise 500  #>   -  verboseColumns TRUE  #>   -  roiList :   #>   -  firstBaselineCheck FALSE  #>   -  roiScales   #>   -  extendLengthMSW TRUE ms$add_settings(settings = settingsFindFeatures) #> ✓ find_features processing settings added! # Note that it returns a named list, therefore we access it with the [[ method ms$get_settings(call = \"find_features\")[[\"find_features\"]] #>  #>  ProcessingSettings  #>  call         find_features #>  algorithm    xcms3_centwave #>  version      0.2.0 #>  software     xcms #>  developer    Ralf Tautenhahn, Johannes Rainer #>  contact      rtautenh@ipb-halle.de #>  link         https://bioconductor.org/packages/release/bioc/html/xcms.html #>  doi          https://doi.org/10.1186/1471-2105-9-504 #>  #>  parameters   #>   -  class CentWaveParam  #>   -  ppm 12  #>   -  peakwidth 5 30  #>   -  snthresh 10  #>   -  prefilter 5 1500  #>   -  mzCenterFun mean  #>   -  integrate 2  #>   -  mzdiff -1e-04  #>   -  fitgauss TRUE  #>   -  noise 500  #>   -  verboseColumns TRUE  #>   -  roiList :   #>   -  firstBaselineCheck FALSE  #>   -  roiScales   #>   -  extendLengthMSW TRUE"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"features","dir":"Articles","previous_headings":"","what":"Features","title":"StreamFind for mass spectrometry","text":"Extraction features raw MS data frequent step applied data processing easing prioritization identification chemicals given analysis (.e., sample). feature essence describes chromatographic peak composed fundamentally three values: mass--charge ratio (m/z), retention time (rt) intensity. method find_features() MassSpecData object can used extract features files represented MassSpecAnalysis objects. Several algorithms (.e., software) available finding features patRoon package mentioned. algorithms require spectral data profile mode use centroided data (see centroiding section information centroid vs profile mode). , use added settings find features analyses object ms. Note argument settings used (NULL default value) settings already added object. Adding settings via argument settings call method find_features() replace existing settings MassSpecData object call name “find_features”. settings call name “find_features” available given, features extracted.","code":"ms$find_features(settings = NULL) #> Loading required namespace: xcms #>  #> Attaching package: 'BiocGenerics' #>  #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #>  #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, #>     Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, #>     which.min #>  #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, #>     see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #>  #> Attaching package: 'S4Vectors' #>  #> The following object is masked from 'package:utils': #>  #>     findMatches #>  #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #>  #>  #> Attaching package: 'ProtGenerics' #>  #> The following object is masked from 'package:stats': #>  #>     smooth #>  #>  #> This is MSnbase version 2.26.0  #>   Visit https://lgatto.github.io/MSnbase/ to get started. #>  #>  #> Attaching package: 'MSnbase' #>  #> The following object is masked from 'package:base': #>  #>     trimws #>  #>  #> This is xcms version 3.22.0  #>  #>  #> Attaching package: 'xcms' #>  #> The following object is masked from 'package:stats': #>  #>     sigma #>  #> Detecting mass traces at 12 ppm ... OK #> Detecting chromatographic peaks in 334 regions of interest ... OK: 321 found. #>  #> Attaching package: 'BiocGenerics' #>  #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #>  #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, #>     Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, #>     which.min #>  #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, #>     see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #>  #> Attaching package: 'S4Vectors' #>  #> The following object is masked from 'package:utils': #>  #>     findMatches #>  #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #>  #>  #> Attaching package: 'ProtGenerics' #>  #> The following object is masked from 'package:stats': #>  #>     smooth #>  #>  #> This is MSnbase version 2.26.0  #>   Visit https://lgatto.github.io/MSnbase/ to get started. #>  #>  #> Attaching package: 'MSnbase' #>  #> The following object is masked from 'package:base': #>  #>     trimws #>  #>  #> This is xcms version 3.22.0  #>  #>  #> Attaching package: 'xcms' #>  #> The following object is masked from 'package:stats': #>  #>     sigma #>  #> Detecting mass traces at 12 ppm ... OK #> Detecting chromatographic peaks in 333 regions of interest ... OK: 327 found. #>  #> Attaching package: 'BiocGenerics' #>  #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #>  #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, Map, #>     mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, #>     Reduce, rownames, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which.max, #>     which.min #>  #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, #>     see 'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #>  #> Attaching package: 'S4Vectors' #>  #> The following object is masked from 'package:utils': #>  #>     findMatches #>  #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #>  #>  #> Attaching package: 'ProtGenerics' #>  #> The following object is masked from 'package:stats': #>  #>     smooth #>  #>  #> This is MSnbase version 2.26.0  #>   Visit https://lgatto.github.io/MSnbase/ to get started. #>  #>  #> Attaching package: 'MSnbase' #>  #> The following object is masked from 'package:base': #>  #>     trimws #>  #>  #> This is xcms version 3.22.0  #>  #>  #> Attaching package: 'xcms' #>  #> The following object is masked from 'package:stats': #>  #>     sigma #>  #> Detecting mass traces at 12 ppm ... OK #> Detecting chromatographic peaks in 339 regions of interest ... OK: 325 found. #> ✓ 973 features added! # Check for presence of features in analyses ms$has_features() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                      TRUE                      TRUE                      TRUE  # Show method giving the number of features ms #>  #> MassSpecData #> name          Ex1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:12 #>  #> settings:  #>  1: find_features (xcms3_centwave) #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886      321        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880      325        0      0 #>  3: MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive    1892      327        0      0"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-features","dir":"Articles","previous_headings":"Features","what":"Get features","title":"StreamFind for mass spectrometry","text":"described, get methods parse data MassSpecData class object. features, method get_features() can used shown . arguments given, features data.table MassSpecAnalysis object collated without filtering column analysis given make reference analysis corresponding features belong . arguments make_ms_targets() available. corresponding feature Carbamazepin-d10 analysis object extracted using mz rt arguments. features data.table contain following mandatory columns: analysis: (character) file name without extension; feature: (character) unique identifier feature analysis; index: (numeric) index feature analysis; mz: (numeric) calculated m/z feature mass traces (.e., centroids), Da; rt: (numeric) calculated retention time feature mass traces, seconds; mzmin: (numeric) minimum m/z value feature mass traces, Da; mzmax: (numeric) maximum m/z value feature mass traces, Da; rtmin: (numeric) minimum retention time value feature mass traces, seconds; rtmax: (numeric) maximum retention time value feature mass traces, seconds; intensity: (numeric) calculated height features, counts; area: (numeric) calculated area integrated feature; columns added specific algorithms added StreamFind feature extraction : adduct: (character) adduct label feature (e.g., [M+H]+, [M-H]-, [M+Na]+), see isotopes adducts section information; mass: (numeric) calculated neutral mass feature based polarity analysis; is_filled: (logical) TRUE means feature built recursive integration (.e., integrated correspondence analysis, see groups section information); filtered: (logical) TRUE means feature filtered set still remained data set (see filters section information); filter: (character) filter tag NA_character_ feature filtered (.e., filtered FALSE); sn: (numeric) calculated signal--noise ratio feature; ms1 data.table averaged spectrum MS1 spectra data within defined mass time ranges; ms2 data.table averaged spectrum MS2 spectra data correspond isolation window feature mass time ranges;","code":"head(ms$get_features()) #>                     analysis            feature polarity index      rt       mz     mass intensity      area #> 1: 00_tof_s_is_pos_cent-r001 mz259.152_rt900_f1        1     1 900.093 259.1516 258.1444  3553.743  28519.90 #> 2: 00_tof_s_is_pos_cent-r001   mz309.1_rt905_f2        1     2 905.136 309.0996 308.0924  2647.143  16228.90 #> 3: 00_tof_s_is_pos_cent-r001 mz229.108_rt906_f3        1     3 905.985 229.1079 228.1006  3343.811  20532.68 #> 4: 00_tof_s_is_pos_cent-r001 mz295.069_rt906_f4        1     4 905.985 295.0690 294.0617  4921.815  29773.05 #> 5: 00_tof_s_is_pos_cent-r001 mz315.053_rt906_f5        1     5 905.985 315.0531 314.0458 51530.594 274753.11 #> 6: 00_tof_s_is_pos_cent-r001 mz316.056_rt906_f6        1     6 905.985 316.0562 315.0489  7304.014  34575.66 #>      rtmin   rtmax    mzmin    mzmax filled filtered filter   sn #> 1: 900.093 913.570 259.1508 259.1530  FALSE    FALSE   <NA>   22 #> 2: 900.093 909.362 309.0982 309.1011  FALSE    FALSE   <NA>  143 #> 3: 901.745 912.467 229.1069 229.1088  FALSE    FALSE   <NA>   21 #> 4: 900.093 913.570 295.0664 295.0701  FALSE    FALSE   <NA>   69 #> 5: 900.093 914.819 315.0517 315.0538  FALSE    FALSE   <NA> 1116 #> 6: 900.093 910.211 316.0545 316.0593  FALSE    FALSE   <NA>  354 ms$get_features(mz = carb_mz_pos, rt = carb_rt, ppm = 5, sec = 10) #>                     analysis               feature polarity index       rt       mz     mass intensity #> 1: 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106        1   106 1075.617 247.1658 246.1586  494635.7 #> 2: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109        1   109 1075.139 247.1659 246.1586  488322.9 #> 3: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1   110 1075.320 247.1659 246.1586  467487.8 #>       area    rtmin    rtmax    mzmin    mzmax filled filtered filter   sn                        name #> 1: 1947864 1068.906 1097.678 247.1652 247.1663  FALSE    FALSE   <NA> 5307 247.1638-247.1662/1065-1085 #> 2: 2001289 1067.528 1099.008 247.1653 247.1663  FALSE    FALSE   <NA> 5387 247.1638-247.1662/1065-1085 #> 3: 2270302 1068.304 1097.445 247.1651 247.1667  FALSE    FALSE   <NA> 9610 247.1638-247.1662/1065-1085"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"plot-features","dir":"Articles","previous_headings":"Features","what":"Plot features","title":"StreamFind for mass spectrometry","text":"two methods plot features: plot_features() map_features(). methods demonstrated features correspondent target chemicals. plot_features() method plots chromatogram inspect intensity, shape fitting aspects map_features() method plots time mass space (shaded area) features well calculate m/z retention time values (dots). instance, applying correspondence analysis (information groups section), plots can used evaluate appropriate mass time deviations consider processing settings.","code":"ms$plot_features(analyses = 1, mz = targets1, colorBy = \"targets\", interactive = FALSE) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$plot_features(mz = targets1, colorBy = \"analyses\", interactive = TRUE) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$map_features(mz = targets1, colorBy = \"analyses\", interactive = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-features-ms1-and-ms2","dir":"Articles","previous_headings":"Features","what":"Get features MS1 and MS2","title":"StreamFind for mass spectrometry","text":"mentioned, feature represents MS1 level chromatographic peak. averaged MS1 spectrum can obtained method get_features_ms1(). Spectra within feature mass time space collected clustered according mzClust argument (Da), shown . arguments rtWindow mzWindow can used narrow extend space collection mass traces. example , time window collection mass traces plus/minus 2 seconds calculated retention time feature found mz rt arguments; example, feature correspondent Carbamazepin-d10. mass window -1 Da +6 Da calculated m/z. rtWindow mzWindow NULL, integrated feature space (plotted map_features() method) used. minIntensity argument used filter mass traces intensity threshold. example , set 1000 counts, exclude low intensity mass traces. data.table obtained can plotted directly plot_features_ms1() method shown . MS2 data features obtained get_features_ms2() method, shown . MS2, arguments mzClust minIntensity applied way MS1. However, extracting traces isolation window (Da) set using argument isolationWindow. isolation window match settings used isolate precursor ions fragmentation tandem MS. set isolationWindow 1.3 Da, extends mzmin mzmax range feature \\(-\\frac{1.3}{2}\\) \\(+\\frac{1.3}{2}\\), respectively. Plotting data.table can also directly performed plot_features_ms2() method shown .","code":"ms$get_features_ms1(analyses = 2, mz = carb_mz_pos, rt = carb_rt,   ppm = 20, sec = 30, rtWindow = c(-2, 2), mzWindow = c(-1, 6),   mzClust = 0.003, minIntensity = 1000 ) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                     analysis               feature polarity       rt       mz  intensity #> 1: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109        1 1075.186 247.1659 488322.938 #> 2: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109        1 1075.186 248.1688  67753.320 #> 3: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109        1 1075.186 249.1713   6125.987 #>                           name #> 1: 247.1601-247.1699/1045-1105 #> 2: 247.1601-247.1699/1045-1105 #> 3: 247.1601-247.1699/1045-1105 # Plotting the MS1 spectrum of both Carbamazepin-d10 and Diuron-d6 in analyses 2 ms$plot_features_ms1(analyses = 2, verbose = FALSE,   mz = targets1, rtWindow = c(-2, 2), mzWindow = c(-1, 6),   mzClust = 0.003, minIntensity = 1000, colorBy = \"targets\" ) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$get_features_ms2(analyses = 3, mz = carb_mz_pos, rt = carb_rt,   ppm = 20, sec = 30, isolationWindow = 1.3, mzClust = 0.003,   minIntensity = 500, verbose = FALSE ) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached! #>                     analysis               feature polarity   pre_mz       rt       mz intensity is_pre #> 1: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 173.1196  507.9772  FALSE #> 2: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 174.1232  634.3593  FALSE #> 3: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 187.1255  562.4938  FALSE #> 4: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 202.1451 1215.3989  FALSE #> 5: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 203.1501  577.6039  FALSE #> 6: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 204.1596 4718.9497  FALSE #> 7: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1 247.1645 1075.703 247.1653 3205.4683   TRUE #>                           name #> 1: 247.1601-247.1699/1045-1105 #> 2: 247.1601-247.1699/1045-1105 #> 3: 247.1601-247.1699/1045-1105 #> 4: 247.1601-247.1699/1045-1105 #> 5: 247.1601-247.1699/1045-1105 #> 6: 247.1601-247.1699/1045-1105 #> 7: 247.1601-247.1699/1045-1105 ms$plot_features_ms2(mz = carb_mz_pos, rt = carb_rt,   ppm = 20, sec = 30, isolationWindow = 1.3, mzClust = 0.003,   minIntensity = 500, colorBy = \"analyses\", verbose = FALSE ) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$plot_features_ms2(analyses = 1, mz = targets1,   isolationWindow = 1.3, mzClust = 0.003,   minIntensity = 500, colorBy = \"targets\",   interactive = FALSE, verbose = FALSE ) #> ⚙ Parsing spectra from 1 MS file/s... Done! #> 🖫 Parsed spectra cached!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"load-features-ms1-and-ms2","dir":"Articles","previous_headings":"Features","what":"Load features MS1 and MS2","title":"StreamFind for mass spectrometry","text":"MS1 MS2 spectra can support identification processing steps giving additional information isotopic specific fragmentation patterns, respectively. methods load_features_ms1() load_features_ms2() used systematically load averaged MS1 MS2 spectra features MassSpecData class object. methods settings argument takes settings object similar “find_features” settings specific call name, method name, shown . parameters arguments respective get methods (see get features ms1 ms2). settings can also added settings internal field explained processing settings section. allows internal data re-processing, inspection retrospective evaluation. settings already added ms, settings also msTargets. general, sub-setting methods transfer everything new MassSpecData object except excluded (see subset-methods section information). , MS1 spectra remaining features (.e., feature corresponding Carbamazepin-d10 Diuron-d6 analysis) loaded msTargets. loaded, MS1 data added new column features data.table analysis object. Therefore, two ways getting MS1 spectra demonstrated . use get_features_ms1() method recommended accessing directly features data.table. method get_features_ms1() argument loadedMS1 set TRUE default loaded MS1 spectra present, data queried loaded spectra rather extracting raw data. Note loadedMS1 TRUE, averaging settings ignored spectra already averaged loading MS1 data. loadedMS1 set FALSE, data extracted raw data even loaded spectra present features table. alternative, MS1 spectra can obtained directly features data.table shown recommended. Similarly MS1, MS2 data can loaded shown . Note settings already added former ms object. Still, one can add settings method call. previously stored settings overwritten. case, change settings . loaded MS2 spectra can obtained method get_features_ms2() argument loadedMS2 set TRUE (default value). Alternatively, recommended, MS2 spectra can obtained directly features data.table shown MS1 spectra. MS1 MS2 data available given feature (.e., within feature m/z retention time window mass traces MS1 traces fragmented, respectively), NULL value given. , ms1 ms2 columns features data.table NULL entry present spectrum absent. returning bulk MS1 MS2 spectra get_features_ms1() get_features_ms2(), respectively, features NULL (spectra) listed returned data.table.","code":"# Settings for loading features MS1 spectra slfms1 <- Settings_load_features_ms1_StreamFind(   rtWindow = c(-2, 2),   mzWindow = c(-1, 6),   mzClust = 0.003,   presence = 0.9,   minIntensity = 250,   filtered = FALSE,   runParallel = FALSE,   verbose = FALSE )  ms$add_settings(settings = slfms1) #> ✓ load_features_ms1 processing settings added!  # Settings for loading features MS2 spectra slfms2 <- Settings_load_features_ms2_StreamFind(   isolationWindow = 1.3,   mzClust = 0.003,   presence = 0.9,   minIntensity = 0,   filtered = FALSE,   runParallel = FALSE,   verbose = FALSE )  ms$add_settings(settings = slfms2) #> ✓ load_features_ms2 processing settings added!  # Returns the names of the settings list, which is also the call or method name names(ms$get_settings()) #> [1] \"find_features\"     \"load_features_ms1\" \"load_features_ms2\" # The ms object is first reduced in size to ease computation for this example targetFeatures <- ms$get_features(mz = targets1) targetFeatures <- targetFeatures[, c(\"analysis\", \"feature\"), with = FALSE] targetFeatures #>                     analysis               feature #> 1: 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 2: 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 #> 3: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109 #> 4: 00_tof_s_is_pos_cent-r002 mz239.063_rt1158_f189 #> 5: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110 #> 6: 00_tof_s_is_pos_cent-r003 mz239.063_rt1158_f189  # Only the features from targets are kept in the MassSpecData object msTargets <- ms$subset_features(features = targetFeatures) #> ✓ Subset with 6 features created!  # Only 2 features in each analysis object msTargets #>  #> MassSpecData #> name          Ex1 #> author        NA #> path          C:/Users/cunha/Documents/007_CodeProjects/StreamFind/vignettes/articles #> date          2023-11-02 11:57:12 #>  #> settings:  #>  1: find_features (xcms3_centwave) #>  2: load_features_ms1 (StreamFind) #>  3: load_features_ms2 (StreamFind) #>  #> Analyses:  #>          type                  analysis            replicate blank polarity spectra features filtered groups #>  1: MS/MS-DDA 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent  <NA> positive    1886        2        0      0 #>  2: MS/MS-DDA 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent  <NA> positive    1880        2        0      0 #>  3: MS/MS-DDA 00_tof_s_is_pos_cent-r003 00_tof_s_is_pos_cent  <NA> positive    1892        2        0      0 msTargets$load_features_ms1() #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! #> 🖫 Features MS1 spectra cached! #> ✓ MS1 spectra added to features in analyses!  msTargets$has_loaded_features_ms1() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                      TRUE                      TRUE                      TRUE msTargets$get_features_ms1(analyses = 1, mz = targets1, loadedMS1 = TRUE) #>     polarity       rt       mz   intensity                  analysis               feature    name #>  1:        1 1075.368 247.1661 494635.6562 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 target1 #>  2:        1 1075.368 248.1689  71388.6719 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 target1 #>  3:        1 1075.368 249.1718   5655.6255 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 target1 #>  4:        1 1075.368 250.1752    477.6384 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 target1 #>  5:        1 1158.466 239.0629 135111.7656 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #>  6:        1 1158.466 240.0650  12256.3877 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #>  7:        1 1158.466 241.0599  85982.3750 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #>  8:        1 1158.466 242.0627   9898.8076 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #>  9:        1 1158.466 242.1440   5255.0767 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #> 10:        1 1158.466 243.0567  13224.3398 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #> 11:        1 1158.466 243.1452    921.5386 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 #> 12:        1 1158.466 244.0589   1167.6215 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186 target2 # Plotting all loaded MS1 spectra by feature id msTargets$plot_features_ms1(loadedMS1 = TRUE) # Get MS1 spectra from features data.table ms1FromFeaturesDataTable <- msTargets$get_features() head(ms1FromFeaturesDataTable) #>                     analysis               feature polarity index       rt       mz     mass intensity #> 1: 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106        1   106 1075.617 247.1658 246.1586  494635.7 #> 2: 00_tof_s_is_pos_cent-r001 mz239.063_rt1159_f186        1   186 1158.548 239.0626 238.0553  135111.8 #> 3: 00_tof_s_is_pos_cent-r002 mz247.166_rt1075_f109        1   109 1075.139 247.1659 246.1586  488322.9 #> 4: 00_tof_s_is_pos_cent-r002 mz239.063_rt1158_f189        1   189 1158.344 239.0629 238.0556  134514.2 #> 5: 00_tof_s_is_pos_cent-r003 mz247.166_rt1075_f110        1   110 1075.320 247.1659 246.1586  467487.8 #> 6: 00_tof_s_is_pos_cent-r003 mz239.063_rt1158_f189        1   189 1157.982 239.0626 238.0554  136537.8 #>         area    rtmin    rtmax    mzmin    mzmax filled filtered filter   sn               ms1 #> 1: 1947864.4 1068.906 1097.678 247.1652 247.1663  FALSE    FALSE   <NA> 5307 <data.table[4x4]> #> 2: 1009916.0 1150.729 1179.125 239.0618 239.0632  FALSE    FALSE   <NA> 1732 <data.table[8x4]> #> 3: 2001288.8 1067.528 1099.008 247.1653 247.1663  FALSE    FALSE   <NA> 5387 <data.table[4x4]> #> 4: 1047147.6 1150.347 1178.394 239.0622 239.0636  FALSE    FALSE   <NA> 1955 <data.table[7x4]> #> 5: 2270301.6 1068.304 1097.445 247.1651 247.1667  FALSE    FALSE   <NA> 9610 <data.table[3x4]> #> 6:  905488.7 1150.300 1176.606 239.0621 239.0634  FALSE    FALSE   <NA> 2086 <data.table[7x4]>  # Column ms1 is a list of data.table objects with the spectrum of each feature or NULL when a given feature does not have mass traces class(ms1FromFeaturesDataTable$ms1) #> [1] \"list\"  # Extract the first spectrum with the \"[[\" method ms1FromFeaturesDataTable$ms1[[1]] #>    polarity       rt       mz   intensity #> 1:        1 1075.368 247.1661 494635.6562 #> 2:        1 1075.368 248.1689  71388.6719 #> 3:        1 1075.368 249.1718   5655.6255 #> 4:        1 1075.368 250.1752    477.6384 msTargets$load_features_ms2(settings = slfms2) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! #> ✓ load_features_ms2 processing settings added! #> 🖫 Features MS2 spectra cached! #> ✓ MS2 spectra added to features in analyses!  msTargets$has_loaded_features_ms2() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                      TRUE                      TRUE                      TRUE # The first 6 lines of the MS2 spectra head(msTargets$get_features_ms2(analyses = 1, mz = targets1, loadedMS2 = TRUE)) #>    polarity   pre_mz       rt        mz intensity is_pre                  analysis               feature #> 1:        1 247.1653 1077.018  93.06292  80.22612  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 2:        1 247.1653 1077.018 104.05816 140.80147  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 3:        1 247.1653 1077.018 121.07799 227.60043  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 4:        1 247.1653 1077.018 123.09103 166.16307  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 5:        1 247.1653 1077.018 129.06050 105.71204  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #> 6:        1 247.1653 1077.018 132.07309 108.90141  FALSE 00_tof_s_is_pos_cent-r001 mz247.166_rt1076_f106 #>       name #> 1: target1 #> 2: target1 #> 3: target1 #> 4: target1 #> 5: target1 #> 6: target1 # Plotting all loaded MS2 spectra in analysis 2 by feature id msTargets$plot_features_ms2(analyses = 2, loadedMS2 = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"remove-features-ms1-and-ms2","dir":"Articles","previous_headings":"Features","what":"Remove features MS1 and MS2","title":"StreamFind for mass spectrometry","text":"Loaded MS1 MS2 feature spectra can removed using remove_features_ms1() remove_features_ms2(). Note loaded spectra removed argument can given remove certain spectra. means features MS1 MS2 spectra loaded, loaded features. Removing features MassSpecData object also remove MS1 MS2 spectra features data.table.","code":"msTargets$remove_features_ms1() #> ✓ Removed all MS1 spectra from features! msTargets$has_loaded_features_ms1() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                     FALSE                     FALSE                     FALSE  msTargets$remove_features_ms2() #> ✓ Removed all MS2 spectra from features! msTargets$has_loaded_features_ms2() #> 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 00_tof_s_is_pos_cent-r003  #>                     FALSE                     FALSE                     FALSE"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"isotopes-and-adducts","dir":"Articles","previous_headings":"","what":"Isotopes and adducts","title":"StreamFind for mass spectrometry","text":"yet implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"groups","dir":"Articles","previous_headings":"","what":"Groups","title":"StreamFind for mass spectrometry","text":"extraction features, correspondence analysis (.e., grouping features across analyses) often applied following processing step. result correspondence analysis feature groups, describing correspondent features analysis. method group_features() used correspondence analysis features MassSpecData object. Similarly find_features(), group_features() method uses settings. Also patRoon package used background. precisely, function groupFeatures() patRoon used. Therefore, settings algorithm parameters can obtained documentation groupFeatures(). correspondence analysis demonstrated using algorithm “xcms”.","code":"settingsGroupFeatures <- Settings_group_features_xcms3_peakdensity(   bw = 5,   minFraction = 0.5,   minSamples = 1,   binSize = 0.008,   maxFeatures = 100 ) ms$group_features(settings = settingsGroupFeatures) #> Processing 62056 mz slices ... OK #> ✓ Feature group added to features! #> ✓ 323 feature groups added! #> ✓ group_features processing settings added!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-groups","dir":"Articles","previous_headings":"Groups","what":"Get groups","title":"StreamFind for mass spectrometry","text":"Feature groups stored groups internal field data.table, can obtained method get_groups(), shown . groups data.table mandatory columns: group: (character) identifier feature group; rt: (numeric) averaged retention time features group, seconds; mz: (numeric) averaged m/z features group, Da (present MassSpecData multiple polarities); mass: (numeric) averaged neutral mass features group, Da; adduct: (character) adduct ion assigned feature group; drt: (numeric) time deviation range feature group, seconds; dppm: (numeric) mass deviation range feature group, ppm; index: (integer) unique index feature group; hasFilled: (logical) TRUE, feature group features obtained recursive integration applied correspondence analysis filling analysis objects missing features; filtered: (logical) TRUE means feature group filtered set still remained data set (see filters section information); filter: (character) filter tag NA_character_ feature group filtered (.e., filtered FALSE); MassSpecAnalysis object, column analysis name added groups data.table intensity feature. columns added StreamFind specific workflow methods explained respective method demonstration documentation.","code":"head(ms$get_groups()) #>                 group     mass       rt 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 #> 1: m199.130_rt1045_g1 199.1269 1045.457                     0.000                  2697.881 #> 2: m199.190_rt1324_g2 199.1944 1324.233                 60441.660                 58636.840 #> 3: m199.190_rt1342_g3 199.1942 1342.027                  3466.634                  3805.641 #> 4: m200.200_rt1324_g4 200.1977 1324.300                  8170.295                  7186.740 #> 5: m201.210_rt1032_g5 201.2098 1032.121                  6142.546                  5668.699 #> 6: m201.170_rt1139_g6 201.1735 1138.579                  4500.240                  4418.917 #>    00_tof_s_is_pos_cent-r003 massdev rtdev    rtmin    rtmax filtered filter #> 1:                  2184.016   17.28    14 1039.160 1053.184    FALSE   <NA> #> 2:                 55671.273    5.16    21 1316.632 1337.933    FALSE   <NA> #> 3:                  3335.031   17.32    12 1337.170 1349.265    FALSE   <NA> #> 4:                  7475.637    9.20    18 1317.027 1334.583    FALSE   <NA> #> 5:                  5744.804   15.36    14 1026.065 1040.014    FALSE   <NA> #> 6:                  4837.556   12.68    24 1131.275 1155.476    FALSE   <NA> # Groups correspondent of CArbamazepin-d10 and Diuron-d6  ms$get_groups(mz = targets1) #>                  group     mass       rt 00_tof_s_is_pos_cent-r001 00_tof_s_is_pos_cent-r002 #> 1: m238.060_rt1158_g67 238.0555 1158.291                  135111.8                  134514.2 #> 2: m246.160_rt1075_g84 246.1586 1075.359                  494635.7                  488322.9 #>    00_tof_s_is_pos_cent-r003 massdev rtdev    rtmin    rtmax filtered filter    name #> 1:                  136537.8    7.37    29 1150.300 1179.125    FALSE   <NA> target2 #> 2:                  467487.8    6.21    31 1067.528 1099.008    FALSE   <NA> target1"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"plot-groups","dir":"Articles","previous_headings":"Groups","what":"Plot groups","title":"StreamFind for mass spectrometry","text":"features, plotting methods groups also available. methods plot_groups() plot_groups_overview() demonstrated. information usage available MassSpecData documentation (?MassSpecData).","code":"ms$plot_groups(mz = targets1, colorBy = \"analyses\") #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! # Plots an overview of the features within the group for each analysis ms$plot_groups_overview(mz = targets1) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"get-groups-ms1-and-ms2","dir":"Articles","previous_headings":"Groups","what":"Get groups MS1 and MS2","title":"StreamFind for mass spectrometry","text":"MS1 MS2 spectra spectra groups can obtained methods get_groups_ms1() get_groups_ms2(), respectively. Note average MS1 MS2 feature groups (.e., across analyses) requires pre-averaging spectra within feature. Therefore, arguments averaging spectra features available methods, shown . can set differently averaging spectra within features within feature groups. values used .","code":"ms$get_groups_ms1(mz = carb_mz_pos, rt = carb_rt,   ppm = 20, sec = 30, rtWindow = c(-2, 2), mzWindow = c(-1, 6),   mzClustFeatures = 0.003, minIntensityFeatures = 1000,   mzClustGroups = 0.003, minIntensityGroups = 1000 ) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! #>    polarity       rt       mz  intensity               group                        name #> 1:        1 1075.369 247.1661 494635.656 m246.160_rt1075_g84 247.1601-247.1699/1045-1105 #> 2:        1 1075.369 248.1689  71388.672 m246.160_rt1075_g84 247.1601-247.1699/1045-1105 #> 3:        1 1075.369 249.1716   6125.987 m246.160_rt1075_g84 247.1601-247.1699/1045-1105 ms$plot_groups_ms1(mz = targets1,   ppm = 20, sec = 30, rtWindow = c(-2, 2), mzWindow = c(-1, 6),   mzClustFeatures = 0.003, minIntensityFeatures = 1000,   mzClustGroups = 0.003, minIntensityGroups = 1000, ) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached! ms$get_groups_ms2(mz = carb_mz_pos, rt = carb_rt,   ppm = 20, sec = 30, isolationWindow = 1.3,   mzClustFeatures = 0.003, minIntensityFeatures = 500,   mzClustGroups = 0.003, minIntensityGroups = 500 ) #> ℹ Spectra loaded from cache! #>    polarity  pre_mz       rt       mz intensity is_pre               group                        name #> 1:        1 247.165 1076.529 202.1445  1215.399  FALSE m246.160_rt1075_g84 247.1601-247.1699/1045-1105 #> 2:        1 247.165 1076.529 204.1592  4718.950  FALSE m246.160_rt1075_g84 247.1601-247.1699/1045-1105 #> 3:        1 247.165 1076.529 247.1652  3205.468   TRUE m246.160_rt1075_g84 247.1601-247.1699/1045-1105 ms$plot_groups_ms2(mz = targets1,   ppm = 20, sec = 30, isolationWindow = 1.3,   mzClustFeatures = 0.003, minIntensityFeatures = 500,   mzClustGroups = 0.003, minIntensityGroups = 500 ) #> ⚙ Parsing spectra from 3 MS file/s... Done! #> 🖫 Parsed spectra cached!"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"load-groups-ms1-and-ms2","dir":"Articles","previous_headings":"Groups","what":"Load groups MS1 and MS2","title":"StreamFind for mass spectrometry","text":"Similarly features, loading MS1 MS2 spectra feature groups also possible via methods load_groups_ms1() load_groups_ms2(). Also settings used loading spectra spectra available given feature group, NULL returned. , loading process demonstrated subset earlier shown. Note features MS1 MS2 spectra removed section remove features ms1 ms2, load_groups_ms1() load_groups_ms2() applied without MS1 MS2 spectra features, previously loaded settings used reload spectra features averaging spectra within feature groups. MS1 MS2 spectra loaded, get plot methods use default loaded spectra. plotting methods demonstrated without adding averaging arguments.","code":"targetGroups <- ms$get_groups(mz = targets1)  # Only the groups from targets are kept in the MassSpecData object msTargets <- ms$subset_groups(groups = targetGroups$group) #> ✓ Subset with 2 feature groups created!  # Removing filtered features (i.e., not belonging to targeted groups) msTargets$remove_features(filtered = TRUE) #> ✓ Removed 967 features!  # Only 6 features and 2 groups left  msTargets # Settings for loading groups MS1 spectra slfgms1 <- Settings_load_groups_ms1_StreamFind(   mzClust = 0.003,   presence = 0.9,   minIntensity = 250,   filtered = FALSE,   runParallel = FALSE,   verbose = FALSE )  msTargets$add_settings(settings = slfgms1) #> ✓ load_groups_ms1 processing settings added!  # Settings for loading groups MS2 spectra slfgms2 <- Settings_load_groups_ms2_StreamFind(   mzClust = 0.003,   presence = 0.9,   minIntensity = 0,   filtered = FALSE,   runParallel = FALSE,   verbose = FALSE )  msTargets$add_settings(settings = slfgms2) #> ✓ load_groups_ms2 processing settings added!  # Returns the names of the settings list, which is also the call or method name names(msTargets$get_settings()) #> [1] \"find_features\"     \"load_features_ms1\" \"load_features_ms2\" \"group_features\"    \"load_groups_ms1\"   #> [6] \"load_groups_ms2\" msTargets$load_groups_ms1() #> ℹ Features MS1 spectra loaded from cache! #> ✓ MS1 spectra added to features in analyses! #> 🖫 Groups MS1 spectra cached! #> ✓ MS1 spectra added to feature groups!  msTargets$has_loaded_groups_ms1() #> [1] TRUE msTargets$load_groups_ms2() #> ℹ Features MS2 spectra loaded from cache! #> ✓ MS2 spectra added to features in analyses! #> 🖫 Groups MS2 spectra cached! #> ✓ MS2 spectra added to feature groups!  msTargets$has_loaded_groups_ms2() #> [1] TRUE msTargets$plot_groups_ms1(mz = targets1) msTargets$plot_groups_ms2(mz = targets1)"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"remove-groups-ms1-and-ms2","dir":"Articles","previous_headings":"Groups","what":"Remove groups MS1 and MS2","title":"StreamFind for mass spectrometry","text":"Also feature groups, methods remove_groups_ms1() remove_groups_ms2() can used clear MS1 MS2 spectra groups data.table MassSpecData class object, shown .","code":"msTargets$remove_groups_ms1() #> ✓ Removed all MS1 spectra from feature groups! msTargets$has_loaded_groups_ms1() #> [1] FALSE  msTargets$remove_groups_ms2() #> ✓ Removed all MS2 spectra from feature groups! msTargets$has_loaded_groups_ms2() #> [1] FALSE"},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"recursive-integration","dir":"Articles","previous_headings":"","what":"Recursive integration","title":"StreamFind for mass spectrometry","text":"yet implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"filters","dir":"Articles","previous_headings":"","what":"Filters","title":"StreamFind for mass spectrometry","text":"yet implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/ms_overview.html","id":"outlook","dir":"Articles","previous_headings":"","what":"Outlook","title":"StreamFind for mass spectrometry","text":"StreamFind R package experimental. article showed preliminary framework mass spectrometry. article updated future developments MS data processing. Please contact us questions, suggestions, issues collaboration.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/StreamFind.html","id":"introduction-to-streamfind","dir":"Articles","previous_headings":"","what":"Introduction to StreamFind","title":"StreamFind","text":"goal StreamFind boost competences researchers data analysis. focus development assembly data processing workflows mass spectrometry (MS) spectroscopy (e.g., Raman) application workflows environmental quality studies water cycle. moment, StreamFind can used via experimental StreamFind R package preliminary framework mass spectrometry. information usage see articles section.","code":""},{"path":"https://odea-project.github.io/StreamFind/articles/StreamFind.html","id":"development-in-progress","dir":"Articles","previous_headings":"","what":"Development in progress","title":"StreamFind","text":"life cycle StreamFind R package experimental. Please contact us questions, suggestions, issues collaboration. Besides development R package, graphical user interface (GUI) planned facilitate data analysis assembly workflows. Stay tuned!","code":""},{"path":"https://odea-project.github.io/StreamFind/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ricardo Cunha. Maintainer, author.","code":""},{"path":"https://odea-project.github.io/StreamFind/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cunha R (2023). StreamFind: Framework workflows data analysis water cycle. https://github.com/odea-project/StreamFind, https://odea-project.github.io/StreamFind/.","code":"@Manual{,   title = {StreamFind: Framework and workflows for data analysis in the water cycle},   author = {Ricardo Cunha},   year = {2023},   note = {https://github.com/odea-project/StreamFind, https://odea-project.github.io/StreamFind/}, }"},{"path":"https://odea-project.github.io/StreamFind/index.html","id":"streamfind-r-package","dir":"","previous_headings":"","what":"Framework and workflows for data analysis in the water cycle","title":"Framework and workflows for data analysis in the water cycle","text":"StreamFind project, entitled “Flexible data analysis workflow designer identify chemicals water cycle”, funded Bundesministerium für Bildung und Forschung (BMBF) cooperation Institut für Umwelt & Energie, Technik & Analytik e. V. (IUTA), Forschungszentrum Informatik (FZI) supporting partners. goal StreamFind project development assembly data processing workflows mass spectrometry spectroscopy application workflows environmental quality studies water cycle. StreamFind aims stimulate use advanced data analysis (e.g., non-target screening, statistical analysis, etc.) routine studies, promoting standardization data processing structure easing retrospective evaluation data. StreamFind platform directed academics also technicians, due aspired comprehensive documentation, well categorized set integrated modular functions graphical user interface. library StreamFind R package (repository). graphical user interface (GUI) Web App developed JavaScript can found StreamFind-App repository. StreamFind development ongoing, please contact us questions collaboration.","code":""},{"path":"https://odea-project.github.io/StreamFind/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Framework and workflows for data analysis in the water cycle","text":"installation StreamFind R package, recommended first install dependencies. Besides R RTools (latter recommended Windows users), StreamFind depends patRoon R package dependencies. patRoon R package combines several tools basic advanced data processing can used interchangeably StreamFind R package. Installation instructions patRoon dependencies can found . , StreamFind R package can installed GitHub repository. supplementary StreamFindData R package holds data used examples documentation assets StreamFind R package can also installed GitHub repository.","code":"remotes::install_github(\"odea-project/StreamFind\", dependencies = TRUE) remotes::install_github(\"odea-project/StreamFindData\")"},{"path":"https://odea-project.github.io/StreamFind/index.html","id":"documentation","dir":"","previous_headings":"Installation","what":"Documentation","title":"Framework and workflows for data analysis in the water cycle","text":"documentation usage examples StreamFind R package can found reference page articles webpage.","code":""},{"path":"https://odea-project.github.io/StreamFind/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Framework and workflows for data analysis in the water cycle","text":"StreamFind open source due public funding extensive contribution scientific literature well existing open source software. , reference research software used within StreamFind. Please note open source software research StreamFind uses relies contributions. Therefore, recommend search within citation contributions.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://odea-project.github.io/StreamFind/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://odea-project.github.io/StreamFind/reference/combine_MassSpecData.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to combine MassSpecData class objects. — combine_MassSpecData","title":"Function to combine MassSpecData class objects. — combine_MassSpecData","text":"Function combine MassSpecData class objects.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/combine_MassSpecData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to combine MassSpecData class objects. — combine_MassSpecData","text":"","code":"combine_MassSpecData(combineFeatureLists = TRUE, ...)"},{"path":"https://odea-project.github.io/StreamFind/reference/combine_MassSpecData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to combine MassSpecData class objects. — combine_MassSpecData","text":"... MassSpecData class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/combine_MassSpecData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to combine MassSpecData class objects. — combine_MassSpecData","text":"MassSpecData class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"Function convert vendor MS files .mzML .mzXML using command line interface MSConvert ProteoWizard.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"","code":"convert_ms_files(   files = NULL,   outputFormat = \"mzML\",   outputPath = NULL,   optList = NULL )"},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"files vector file full path/s conversion. outputFormat character string format output file. Possible values \"mzML\" \"mzXML\". outputPath directory place output file. NULL directory original file used. optList list options passed respective conversion tool. See documentation https://proteowizard.sourceforge.io/tools/msconvert.html possible commands.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"giving paths make sure single backslash changed double backslash single forward slash.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"Kessner D, Chambers M, Burke R, Agus D, Mallick P (2008). “ProteoWizard: open source software rapid proteomics tools development.” Bioinformatics, 24(21), 2534--2536. doi:10.1093/bioinformatics/btn323 , http://www.ncbi.nlm.nih.gov/pubmed/18606607. Chambers MC, Maclean B, Burke R, Amodei D, Ruderman DL, Neumann S, Gatto L, Fischer B, Pratt B, Egertson J, Hoff K, Kessner D, Tasman N, Shulman N, Frewen B, Baker TA, Brusniak M, Paulse C, Creasy D, Flashner L, Kani K, Moulding C, Seymour SL, Nuwaysir LM, Lefebvre B, Kuhlmann F, Roark J, Rainer P, Detlev S, Hemenway T, Huhmer , Langridge J, Connolly B, Chadick T, Holly K, Eckels J, Deutsch EW, Moritz RL, Katz JE, Agus DB, MacCoss M, Tabb DL, Mallick P (2012). “cross-platform toolkit mass spectrometry proteomics.” Nature Biotechnology, 30(10), 918--920. https://doi.org/10.1038/nbt.2377.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/convert_ms_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to convert vendor MS files to mzML or mzXML — convert_ms_files","text":"","code":"## The full file path #> file = E:/ms_file.d  ## Options to centroid MS1 and MS2 data in file #> optList <- list(filter = \"peakPicking vendor msLevel=1-2\")  ## Convert to mzML #> convert_ms_files(file, outfile = \"mzML\", optList = optList)"},{"path":"https://odea-project.github.io/StreamFind/reference/get_default_ProcessingSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"get_default_ProcessingSettings — get_default_ProcessingSettings","title":"get_default_ProcessingSettings — get_default_ProcessingSettings","text":"Saves disk ProcessingSettings S3 class object defined format, path name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/get_default_ProcessingSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_default_ProcessingSettings — get_default_ProcessingSettings","text":"","code":"get_default_ProcessingSettings(call = NA_character_, algorithm = NA_character_)"},{"path":"https://odea-project.github.io/StreamFind/reference/get_default_ProcessingSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_default_ProcessingSettings — get_default_ProcessingSettings","text":"call Character (length 1) method call name. algorithm Character (length 1) algorithm name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/get_default_ProcessingSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_default_ProcessingSettings — get_default_ProcessingSettings","text":"ProcessingSettings S3 class object subclass defined call algorithm.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/import_MassSpecData.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to import a MassSpecData class object from a json or rds file. — import_MassSpecData","title":"Function to import a MassSpecData class object from a json or rds file. — import_MassSpecData","text":"Function import MassSpecData class object saved json rds file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/import_MassSpecData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to import a MassSpecData class object from a json or rds file. — import_MassSpecData","text":"","code":"import_MassSpecData(file)"},{"path":"https://odea-project.github.io/StreamFind/reference/import_MassSpecData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to import a MassSpecData class object from a json or rds file. — import_MassSpecData","text":"file json rds file obtained MassSpecData method save().","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/import_MassSpecData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to import a MassSpecData class object from a json or rds file. — import_MassSpecData","text":"MassSpecData class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/make_ms_targets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to make targets for parsing data within MassSpecData class methods — make_ms_targets","title":"Function to make targets for parsing data within MassSpecData class methods — make_ms_targets","text":"Helper function build m/z retention time /drift time targets searching MS data. target composed id, m/z (Da), retention time (seconds) drift time (milliseconds) ranges. mass defined without time variables, retention drift time ranges return 0 vice versa.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/make_ms_targets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to make targets for parsing data within MassSpecData class methods — make_ms_targets","text":"","code":"make_ms_targets(   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL )"},{"path":"https://odea-project.github.io/StreamFind/reference/make_ms_targets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to make targets for parsing data within MassSpecData class methods — make_ms_targets","text":"mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/make_ms_targets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to make targets for parsing data within MassSpecData class methods — make_ms_targets","text":"data.frame columns: id, mz, rt, drift, mzmin, mzmax, rtmin, rtmax, driftmin driftmax.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":"Creates MassSpecAnalysis S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":"","code":"MassSpecAnalysis(   name = NA_character_,   replicate = NA_character_,   blank = NA_character_,   file = NA_character_,   format = NA_character_,   type = NA_character_,   time_stamp = NA_character_,   spectra_number = NA_integer_,   spectra_mode = NA_character_,   spectra_levels = NA_integer_,   mz_low = NA_real_,   mz_high = NA_real_,   rt_start = NA_real_,   rt_end = NA_real_,   polarity = NA_integer_,   has_ion_mobility = FALSE,   chromatograms_number = NA_integer_,   software = data.table(),   instrument = data.table(),   run = data.table(),   spectra = data.table(),   chromatograms = data.table(),   features_eic = list(),   features = data.table(),   metadata = list(),   version = NA_character_ )  # S3 method for MassSpecAnalysis validate(x = NULL)  # S3 method for MassSpecAnalysis print(x, ...)  # S3 method for MassSpecAnalysis asJSON(x)  as.MassSpecAnalysis(value)  parse.MassSpecAnalysis(files = NULL, runParallel = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":"name mzML mzXML file name without extension. replicate Character length one, representing analysis replicate group name. blank Character length one, representing associated blank replicate group name. file mzML mzXML full file path (extension). format Character length one. One mzML mzXML. type Character length one. Possible values \"MS\" MS1 spectral data, \"MS/MS\" tandem spectral data (.e., MS1 MS2) \"SRM\" selected reaction monitoring data (.e., spectra chromatograms). time_stamp Character length one, representing start time date data acquisition. spectra_number Integer number spectra file. spectra_mode Character length one. Possible values centroid , profile NA centroided data, data profile mode mode defined absence spectra, respectively. spectra_levels Integer vector number levels spectra (.e., 1 1 2). mz_low Numeric length one lowest m/z value detected spectra, Da. mz_high Numeric length one highest m/z value detected spectra, Da. rt_start Numeric length one run start time, seconds. rt_end Numeric length one run end time, seconds. polarity Character length one. Possible values positive, negative (latter refers polarity switching acquisition). has_ion_mobility Logical length one presence absence drift separation ion mobility. chromatograms_number Integer number chromatograms file. software data.table software info used acquire/process data (content highly vendor dependent). instrument data.table instrument info used acquire data (content highly vendor dependent). run data.table run information spectrum. spectra data.table raw spectra (present loaded). chromatograms data.table raw chromatograms (present loaded). features_eic list feature extracted ions chromatograms (EICs) binning spectra. features data.table features data processing. metadata List flexible storage experimental metadata (e.g., concentration, location, etc.). version Character length one version. match version StreamFind package created MassSpecAnalysis object. x MassSpecAnalysis S3 class object. ... used. value list checked /converted MassSpecAnalysis S3 class. files character vector mzML mzXML full file path/s. Alternatively, data.frame column/s file, replicate blank full file path/s, replicate group name/s (string) associated blank replicate group name (string). runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":"MassSpecAnalysis S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":"validate(MassSpecAnalysis): Validates MassSpecAnalysis S3 class object, returning logical value length one. print(MassSpecAnalysis): Prints MassSpecAnalysis S3 class object console. asJSON(MassSpecAnalysis): Converts MassSpecAnalysis S3 class object JSON string.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecAnalysis.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"MassSpecAnalysis S3 class constructor, methods and functions — MassSpecAnalysis","text":".MassSpecAnalysis(): Converts argument value MassSpecAnalysis S3 class object. parse.MassSpecAnalysis(): Parses information mzML mzXML file/s returns list MassSpecAnalysis S3 class object/s. error, returns NULL.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":null,"dir":"Reference","previous_headings":"","what":"MassSpecData R6 class and methods — MassSpecData","title":"MassSpecData R6 class and methods — MassSpecData","text":"MassSpecData R6 class framework methods parsing, processing, visualizing storing mass spectrometry (MS) data.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MassSpecData R6 class and methods — MassSpecData","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Kapoulkine (2022). “pugixml 1.13: Light-weight, simple fast XML parser C++ XPath support.” Copyright (C) 2006-2018. http://pugixml.org.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MassSpecData R6 class and methods — MassSpecData","text":"help (list()) List function elements access specific reference help pages.","code":""},{"path":[]},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MassSpecData R6 class and methods — MassSpecData","text":"MassSpecData$new() MassSpecData$print() MassSpecData$get_headers() MassSpecData$get_history() MassSpecData$get_analyses() MassSpecData$get_number_analyses() MassSpecData$get_overview() MassSpecData$get_analysis_names() MassSpecData$get_replicate_names() MassSpecData$get_blank_names() MassSpecData$get_files() MassSpecData$get_formats() MassSpecData$get_types() MassSpecData$get_time_stamps() MassSpecData$get_spectra_number() MassSpecData$get_spectra_mode() MassSpecData$get_spectra_levels() MassSpecData$get_mz_low() MassSpecData$get_mz_high() MassSpecData$get_rt_start() MassSpecData$get_rt_end() MassSpecData$get_polarities() MassSpecData$get_chromatograms_number() MassSpecData$get_instrument_info() MassSpecData$get_software_info() MassSpecData$get_run() MassSpecData$get_tic() MassSpecData$get_bpc() MassSpecData$get_metadata() MassSpecData$get_spectra() MassSpecData$get_chromatograms() MassSpecData$get_eic() MassSpecData$get_ms1() MassSpecData$get_ms2() MassSpecData$get_settings() MassSpecData$get_settings_names() MassSpecData$get_features() MassSpecData$get_features_eic() MassSpecData$get_features_ms1() MassSpecData$get_features_ms2() MassSpecData$get_alignment() MassSpecData$get_groups() MassSpecData$get_groups_ms1() MassSpecData$get_groups_ms2() MassSpecData$get_groups_coverage() MassSpecData$get_components() MassSpecData$get_suspects() MassSpecData$get_modules_data() MassSpecData$get_internal_standards() MassSpecData$add_headers() MassSpecData$add_settings() MassSpecData$add_analyses() MassSpecData$add_files() MassSpecData$add_replicate_names() MassSpecData$add_blank_names() MassSpecData$add_metadata() MassSpecData$add_spectra() MassSpecData$add_features_eic() MassSpecData$add_features() MassSpecData$add_group_to_features() MassSpecData$add_groups() MassSpecData$add_alignment() MassSpecData$add_modules_data() MassSpecData$load_spectra() MassSpecData$load_chromatograms() MassSpecData$load_features_eic() MassSpecData$load_features_ms1() MassSpecData$load_features_ms2() MassSpecData$load_groups_ms1() MassSpecData$load_groups_ms2() MassSpecData$remove_headers() MassSpecData$remove_settings() MassSpecData$remove_analyses() MassSpecData$remove_features() MassSpecData$remove_features_ms1() MassSpecData$remove_features_ms2() MassSpecData$remove_groups() MassSpecData$remove_groups_ms1() MassSpecData$remove_groups_ms2() MassSpecData$remove_alignment() MassSpecData$subset_analyses() MassSpecData$subset_features() MassSpecData$subset_groups() MassSpecData$has_ion_mobility() MassSpecData$has_analyses() MassSpecData$has_loaded_spectra() MassSpecData$has_loaded_chromatograms() MassSpecData$has_loaded_features_ms1() MassSpecData$has_loaded_features_ms2() MassSpecData$has_loaded_groups_ms1() MassSpecData$has_loaded_groups_ms2() MassSpecData$has_settings() MassSpecData$has_features_eic() MassSpecData$has_features() MassSpecData$has_alignment() MassSpecData$has_groups() MassSpecData$plot_spectra() MassSpecData$plot_xic() MassSpecData$plot_eic() MassSpecData$plot_tic() MassSpecData$plot_bpc() MassSpecData$plot_ms2() MassSpecData$plot_ms1() MassSpecData$plot_features() MassSpecData$map_features() MassSpecData$plot_features_ms1() MassSpecData$plot_features_ms2() MassSpecData$plot_alignment() MassSpecData$plot_groups() MassSpecData$plot_groups_ms1() MassSpecData$plot_groups_ms2() MassSpecData$plot_groups_overview() MassSpecData$plot_internal_standards_qc() MassSpecData$map_components() MassSpecData$run_workflow() MassSpecData$centroid_spectra() MassSpecData$bin_spectra() MassSpecData$find_features() MassSpecData$group_features() MassSpecData$filter_features() MassSpecData$annotate_features() MassSpecData$find_internal_standards() MassSpecData$suspect_screening() MassSpecData$calculate_quality() MassSpecData$as_patRoon_features() MassSpecData$as_patRoon_featureGroups() MassSpecData$as_patRoon_MSPeakLists() MassSpecData$check_correspondence() MassSpecData$save_headers() MassSpecData$save_settings() MassSpecData$save_analyses() MassSpecData$save_groups() MassSpecData$save() MassSpecData$import_headers() MassSpecData$import_settings() MassSpecData$import_analyses() MassSpecData$import_groups() MassSpecData$import_all() MassSpecData$patRoon_report() MassSpecData$processing_function_calls() MassSpecData$clone()","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Creates R6 MassSpecData class object. headers given (.e., NULL), default ProjectHeaders S3 class object generated name NA_character, path get_wd() date Sys.time(). See ?ProjectHeaders information.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$new(   files = NULL,   runParallel = FALSE,   headers = NULL,   settings = NULL,   analyses = NULL,   groups = NULL,   alignment = NULL )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"files character vector full file path/s mzML mzXML file/s data.frame columns file, replicate blank full file path mzML mzXML file/s (character), replicate group name (character) associated blank replicate group name (character). Note file paths must extension .mzML .mzXML. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. headers named list headers ProjectHeaders S3 class object. list element must length one. type restrictions except name (must type character length 1), author (must type character length 1), path (must type character length 1) date (must class POSIXct class POSIXt length 1). See information ?ProjectHeaders. settings named list ProcessingSettings S3 class objects single ProcessingSettings S3 class object. list names match call name ProcessingSettings object. Alternatively, named list call name, algorithm parameters transformed added ProcessingSettings S3 class object. analyses MassSpecAnalysis S3 class object list MassSpecAnalysis S3 class objects elements (see ?MassSpecAnalysis information). groups data.table feature groups correspondence across MS analyses obtained method get_groups(). Note correspondence features across MS analyses performed method group_features(). alignment named list data.table analysis results alignment features correspondence features across analyses. names list must match names analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"new MassSpecData class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Prints summary MassSpecData object console.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$print()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Console text.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-headers-","dir":"Reference","previous_headings":"","what":"Method get_headers()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets headers.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_headers(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value character vector name/s header elements. NULL, entire headers list returned.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"headers list header elements defined value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-history-","dir":"Reference","previous_headings":"","what":"Method get_history()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets object history.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_history()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"history list processing steps applied.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-analyses-","dir":"Reference","previous_headings":"","what":"Method get_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_analyses(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"list analyses analyses defined analyses argument.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-number-analyses-","dir":"Reference","previous_headings":"","what":"Method get_number_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets number analyses present.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_number_analyses()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"integer value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-overview-","dir":"Reference","previous_headings":"","what":"Method get_overview()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets overview data.frame analysis types, names, replicates, associated blank replicates, polarities full file paths.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_overview()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame columns type, analysis, replicate, blank polarity file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-analysis-names-","dir":"Reference","previous_headings":"","what":"Method get_analysis_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets analysis names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_analysis_names(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-replicate-names-","dir":"Reference","previous_headings":"","what":"Method get_replicate_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets analysis replicate names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_replicate_names(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-blank-names-","dir":"Reference","previous_headings":"","what":"Method get_blank_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets analysis blank replicate names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_blank_names(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-files-","dir":"Reference","previous_headings":"","what":"Method get_files()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets full file paths analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_files(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-formats-","dir":"Reference","previous_headings":"","what":"Method get_formats()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets file format analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_formats(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-types-","dir":"Reference","previous_headings":"","what":"Method get_types()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets type analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_types(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-time-stamps-","dir":"Reference","previous_headings":"","what":"Method get_time_stamps()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets time stamp analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_time_stamps(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-spectra-number-","dir":"Reference","previous_headings":"","what":"Method get_spectra_number()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets number spectra analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_spectra_number(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-spectra-mode-","dir":"Reference","previous_headings":"","what":"Method get_spectra_mode()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets spectra mode analysis (.e., profile centroided).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_spectra_mode(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-spectra-levels-","dir":"Reference","previous_headings":"","what":"Method get_spectra_levels()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets spectra levels analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_spectra_levels(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"list analysis integer vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-mz-low-","dir":"Reference","previous_headings":"","what":"Method get_mz_low()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets lower m/z value analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_mz_low(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-mz-high-","dir":"Reference","previous_headings":"","what":"Method get_mz_high()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets higher m/z value analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_mz_high(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-rt-start-","dir":"Reference","previous_headings":"","what":"Method get_rt_start()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets start retention time value analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_rt_start(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-rt-end-","dir":"Reference","previous_headings":"","what":"Method get_rt_end()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets end retention time value analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_rt_end(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-polarities-","dir":"Reference","previous_headings":"","what":"Method get_polarities()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets polarity analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_polarities(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-chromatograms-number-","dir":"Reference","previous_headings":"","what":"Method get_chromatograms_number()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets number chromatograms analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_chromatograms_number(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-instrument-info-","dir":"Reference","previous_headings":"","what":"Method get_instrument_info()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets instrument information analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_instrument_info(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-software-info-","dir":"Reference","previous_headings":"","what":"Method get_software_info()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets software information analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_software_info(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-run-","dir":"Reference","previous_headings":"","what":"Method get_run()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets run summary data.table analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_run(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-tic-","dir":"Reference","previous_headings":"","what":"Method get_tic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets total ion chromatogram (TIC) analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_tic(analyses = NULL, levels = c(1, 2))"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table TIC chromatogram.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-bpc-","dir":"Reference","previous_headings":"","what":"Method get_bpc()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets base peak chromatogram (BPC) analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_bpc(analyses = NULL, levels = c(1, 2))"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-metadata-","dir":"Reference","previous_headings":"","what":"Method get_metadata()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets metadata analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_metadata(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-spectra-","dir":"Reference","previous_headings":"","what":"Method get_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets spectra analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_spectra(   analyses = NULL,   levels = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   allTraces = TRUE,   isolationWindow = 1.3,   minIntensityMS1 = 0,   minIntensityMS2 = 0,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. allTraces Logical, TRUE level 2 data returned. FALSE level 2, MS2 traces MS1 targets returned, using isolationWindow calculate mass window. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). minIntensityMS1 Numeric value minimum intensity level 1 data (.e., MS1 data). minIntensityMS2 Numeric value minimum intensity level 2 data (.e., MS2 data). runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table spectra analyses targets, defined.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-chromatograms-","dir":"Reference","previous_headings":"","what":"Method get_chromatograms()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets chromatograms analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_chromatograms(   analyses = NULL,   index = NA_integer_,   minIntensity = 0,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. index Integer value index. minIntensity Numeric value minimum intensity. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table chromatogram/s.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-eic-","dir":"Reference","previous_headings":"","what":"Method get_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets extract ion chromatograms (EIC) analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_eic(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-ms-","dir":"Reference","previous_headings":"","what":"Method get_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets MS1 data analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_ms1(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   mzClust = 0.003,   presence = 0.8,   verbose = FALSE,   minIntensity = 1000,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. minIntensity Numeric value minimum intensity. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-ms--1","dir":"Reference","previous_headings":"","what":"Method get_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets MS2 data analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_ms2(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   isolationWindow = 1.3,   mzClust = 0.005,   presence = 0.8,   verbose = FALSE,   minIntensity = 0,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. minIntensity Numeric value minimum intensity. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-settings-","dir":"Reference","previous_headings":"","what":"Method get_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets processing settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_settings(call = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"call string vector strings name/s processing method/s.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"list ProcessingSettings S3 class object/s.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-settings-names-","dir":"Reference","previous_headings":"","what":"Method get_settings_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets names present processing settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_settings_names()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector name ProcessingSettings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-features-","dir":"Reference","previous_headings":"","what":"Method get_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_features(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-36","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-features-eic-","dir":"Reference","previous_headings":"","what":"Method get_features_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets EIC features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_features_eic(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtExpand = 120,   mzExpand = NULL,   filtered = FALSE,   loaded = TRUE,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtExpand Numeric value retention time values (seconds) expanding left right mass range. mzExpand Numeric value mass mass--charge ratio (m/z) (Da) expanding left right mass range. filtered Logical. TRUE, filtered features/groups considered. loaded Logical. TRUE available, previously loaded data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-37","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-features-ms-","dir":"Reference","previous_headings":"","what":"Method get_features_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets averaged MS1 spectrum features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_features_ms1(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtWindow = c(-2, 2),   mzWindow = c(-5, 100),   mzClust = 0.003,   presence = 0.8,   minIntensity = 1000,   verbose = FALSE,   filtered = FALSE,   loadedMS1 = TRUE,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtWindow Numeric vector length two retention time values (seconds) expanding left right retention time range. first element expands left second expands right. Note first element negative expand left. mzWindow Numeric vector length two mass mass--charge ratio (m/z) values (Da) expanding left right mass range. first element expands left second expands right. Note first element negative expand left. mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedMS1 Logical. TRUE available, previously loaded MS1 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-38","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-features-ms--1","dir":"Reference","previous_headings":"","what":"Method get_features_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets averaged MS2 spectrum features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_features_ms2(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   isolationWindow = 1.3,   mzClust = 0.003,   presence = 0.8,   minIntensity = 0,   verbose = FALSE,   filtered = FALSE,   loadedMS2 = TRUE,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedMS2 Logical. TRUE available, previously loaded MS2 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-39","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-alignment-","dir":"Reference","previous_headings":"","what":"Method get_alignment()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets alignment.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_alignment()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-40","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-groups-","dir":"Reference","previous_headings":"","what":"Method get_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets feature groups analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_groups(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE,   onlyIntensities = FALSE,   average = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered. onlyIntensities Logical. TRUE, feature intensity values returned. Feature metadata group excluded. average Logical. TRUE, feature intensities group averaged returned analysis replicate group.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-41","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-groups-ms-","dir":"Reference","previous_headings":"","what":"Method get_groups_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets averaged MS1 spectrum feature groups analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_groups_ms1(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtWindow = c(-2, 2),   mzWindow = c(-5, 90),   mzClustFeatures = 0.003,   presenceFeatures = 0.8,   minIntensityFeatures = 1000,   loadedFeaturesMS1 = TRUE,   mzClustGroups = 0.003,   presenceGroups = 0.8,   minIntensityGroups = 1000,   groupBy = \"groups\",   verbose = FALSE,   filtered = FALSE,   loadedGroupsMS1 = TRUE,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtWindow Numeric vector length two retention time values (seconds) expanding left right retention time range. first element expands left second expands right. Note first element negative expand left. mzWindow Numeric vector length two mass mass--charge ratio (m/z) values (Da) expanding left right mass range. first element expands left second expands right. Note first element negative expand left. mzClustFeatures Numeric value mass deviation threshold (Da) cluster mass traces features. Highly dependent mass resolution MS data. presenceFeatures Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityFeatures Numeric value minimum intensity features. loadedFeaturesMS1 Logical. TRUE available, previously loaded features MS1 data used instead extraction raw data. mzClustGroups Numeric value mass deviation threshold (Da) cluster mass traces feature groups. Highly dependent mass resolution MS data. presenceGroups Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityGroups Numeric value minimum intensity feature groups. groupBy String way grouping. Possible values groups replicates groups feature groups feature groups replicates, respectively. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedGroupsMS1 Logical. TRUE available, previously loaded feature groups MS1 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-42","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-groups-ms--1","dir":"Reference","previous_headings":"","what":"Method get_groups_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets averaged MS2 spectrum feature groups analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_groups_ms2(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   isolationWindow = 1.3,   mzClustFeatures = 0.003,   presenceFeatures = 0.8,   minIntensityFeatures = 100,   loadedFeaturesMS2 = TRUE,   mzClustGroups = 0.003,   presenceGroups = 0.8,   minIntensityGroups = 100,   groupBy = \"groups\",   verbose = FALSE,   filtered = FALSE,   loadedGroupsMS2 = TRUE,   runParallel = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClustFeatures Numeric value mass deviation threshold (Da) cluster mass traces features. Highly dependent mass resolution MS data. presenceFeatures Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityFeatures Numeric value minimum intensity features. loadedFeaturesMS2 Logical. TRUE available, previously loaded features MS2 data used instead extraction raw data. mzClustGroups Numeric value mass deviation threshold (Da) cluster mass traces feature groups. Highly dependent mass resolution MS data. presenceGroups Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityGroups Numeric value minimum intensity feature groups. groupBy String way grouping. Possible values groups replicates groups feature groups feature groups replicates, respectively. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedGroupsMS2 Logical. TRUE available, previously loaded feature groups MS2 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-43","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-groups-coverage-","dir":"Reference","previous_headings":"","what":"Method get_groups_coverage()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets percentage coverage feature groups analyses (.e. 100% means feature group present analyses).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_groups_coverage(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE,   minIntensity = 0 )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered. minIntensity Numeric value minimum intensity.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-44","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-components-","dir":"Reference","previous_headings":"","what":"Method get_components()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets feature components (.e., isotope clusters adducts) analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_components(   analyses = NULL,   groups = NULL,   features = NULL,   components = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. groups numeric/character vector number/id feature groups. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. components numeric vector number/s feature component/s. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-45","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-suspects-","dir":"Reference","previous_headings":"","what":"Method get_suspects()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets suspects features according defined database mass (ppm) time (sec) deviations.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_suspects(   analyses = NULL,   database = NULL,   ppm = 4,   sec = 10,   filtered = FALSE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. database data.frame least columns name mass, indicating name neutral monoisotopic mass suspect targets. ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MassSpecData R6 class and methods — MassSpecData","text":"ppm sec indicate mass (im ppm) time (seconds) deviations applied screening.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-46","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"data.frame suspects matched features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-modules-data-","dir":"Reference","previous_headings":"","what":"Method get_modules_data()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets modules data.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_modules_data(modules = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"modules X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-47","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"list modules data defined modules argument NULL data modules returned.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-get-internal-standards-","dir":"Reference","previous_headings":"","what":"Method get_internal_standards()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Gets modules data.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$get_internal_standards(average = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"average Logical. TRUE, feature intensities group averaged returned analysis replicate group. modules X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-48","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"list modules data defined modules argument NULL data modules returned.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-headers-","dir":"Reference","previous_headings":"","what":"Method add_headers()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds headers. argument element \"name\" given, must type character. argument element path given, must type character exist. argument element date given, must class POSIXct POSIXt. given date character, conversion class POSIXct POSIXt attempted. See ?ProjectHeaders information.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-49","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_headers(...)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-43","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"... Arguments added headers. Note given arguments must length one. type limitations. name argument becomes name header entry. Alternatively, single list argument headers (length one) can given.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-49","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-settings-","dir":"Reference","previous_headings":"","what":"Method add_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds processing settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-50","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_settings(settings = NULL, replace = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-44","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings named list ProcessingSettings S3 class objects single ProcessingSettings S3 class object. list names match call name ProcessingSettings object. Alternatively, named list call name, algorithm parameters transformed added ProcessingSettings S3 class object. replace Logical. TRUE, existing settings replaced new settings call name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-50","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-analyses-","dir":"Reference","previous_headings":"","what":"Method add_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-51","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_analyses(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-45","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses MassSpecAnalysis S3 class object list MassSpecAnalysis S3 class objects elements (see ?MassSpecAnalysis information).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-51","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-files-","dir":"Reference","previous_headings":"","what":"Method add_files()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds MassSpecAnalysis objects based mzML/mzXML files. Note adding new mzML/mzXML files MassSpecAnalysis added existing grouping features removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-52","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_files(files = NULL, runParallel = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-46","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"files character vector full file path/s mzML mzXML file/s data.frame columns file, replicate blank full file path mzML mzXML file/s (character), replicate group name (character) associated blank replicate group name (character). Note file paths must extension .mzML .mzXML. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-52","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-replicate-names-","dir":"Reference","previous_headings":"","what":"Method add_replicate_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds redefines analysis replicate names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-53","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_replicate_names(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-47","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value character vector analysis replicate names. Must length number analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-53","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-blank-names-","dir":"Reference","previous_headings":"","what":"Method add_blank_names()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds redefines analysis blank replicate names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-54","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_blank_names(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-48","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value character vector analysis blank replicate names. Must length number analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-54","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-metadata-","dir":"Reference","previous_headings":"","what":"Method add_metadata()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds metadata analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-55","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_metadata(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-49","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value data.frame data.table metadata analyses. data.frame must analysis column number rows number analyses MassSpecData. Metadata added using extra columns data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-55","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-spectra-","dir":"Reference","previous_headings":"","what":"Method add_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds spectra analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-56","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_spectra(spectra = NULL, replace = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-50","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"spectra data.table spectra MS analyses obtained method get_spectra() columns \"scan\", \"mz\" \"intensity\". columns might added specific processing algorithms! replace Logical. TRUE, existing spectra replaced new features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-56","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-features-eic-","dir":"Reference","previous_headings":"","what":"Method add_features_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds extracted ion chromatograms (EICs) features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-57","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_features_eic(eics = NULL, replace = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-51","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"eics data.table features MS analyses obtained method get_features_eics(). replace Logical. TRUE, existing EICs features replaced new EICs.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-57","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-features-","dir":"Reference","previous_headings":"","what":"Method add_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-58","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_features(features = NULL, replace = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-52","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"features data.table features MS analyses obtained method get_features(). Note features obtained method find_features(). replace Logical. TRUE, existing features replaced new features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-58","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-group-to-features-","dir":"Reference","previous_headings":"","what":"Method add_group_to_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds group columns correspondence analysis features data.table. Note existing features groups replaced!","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-59","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_group_to_features(feature_groups = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-53","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"feature_groups data.table columns analysis, feature group.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-59","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-groups-","dir":"Reference","previous_headings":"","what":"Method add_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds feature groups. Note existing features groups replaced!","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-60","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_groups(groups = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-54","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups data.table feature groups correspondence across MS analyses obtained method get_groups(). Note correspondence features across MS analyses performed method group_features().","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-60","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-alignment-","dir":"Reference","previous_headings":"","what":"Method add_alignment()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds time alignment results.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-61","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_alignment(alignment = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-55","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"alignment named list data.table analysis results alignment features correspondence features across analyses. names list must match names analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-61","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-add-modules-data-","dir":"Reference","previous_headings":"","what":"Method add_modules_data()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Adds data modules MassSpecData.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-62","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$add_modules_data(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-56","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value named list data modules.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-62","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-spectra-","dir":"Reference","previous_headings":"","what":"Method load_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads spectra analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-63","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_spectra(runParallel = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-57","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-63","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-chromatograms-","dir":"Reference","previous_headings":"","what":"Method load_chromatograms()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads chromatograms analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-64","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_chromatograms(runParallel = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-58","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-64","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-features-eic-","dir":"Reference","previous_headings":"","what":"Method load_features_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads features EICs analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-65","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_features_eic(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-59","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-65","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-features-ms-","dir":"Reference","previous_headings":"","what":"Method load_features_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads average MS1 spectra features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-66","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_features_ms1(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-60","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-66","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-features-ms--1","dir":"Reference","previous_headings":"","what":"Method load_features_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads average MS2 spectra features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-67","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_features_ms2(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-61","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-67","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-groups-ms-","dir":"Reference","previous_headings":"","what":"Method load_groups_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads average MS1 spectra feature groups. MS1 spectra features already loaded, feature MS1 spectra used averaging respective feature group. features MS1 spectra present, settings loading averaging features MS1 spectra (.e., settings call name \"load_features_ms1\") must given settingsFeatures argument added beforehand add_settings method.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-68","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_groups_ms1(settings = NULL, settingsFeatures = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-62","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object. settingsFeatures ProcessingSettings S3 class object call name applicable processing method features. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings features processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-68","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-load-groups-ms--1","dir":"Reference","previous_headings":"","what":"Method load_groups_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Loads average MS2 spectra feature groups. MS2 spectra features already loaded, feature MS2 spectra used averaging respective feature group. features MS2 spectra present, settings loading averaging features MS2 spectra (.e., settings call name \"load_features_ms2\") must given settingsFeatures argument added beforehand add_settings method.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-69","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$load_groups_ms2(settings = NULL, settingsFeatures = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-63","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object. settingsFeatures ProcessingSettings S3 class object call name applicable processing method features. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings features processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-69","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-headers-","dir":"Reference","previous_headings":"","what":"Method remove_headers()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes headers entries. Note name, path date headers removed changed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-70","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_headers(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-64","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"value character vector name/s elements headers removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-70","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-settings-","dir":"Reference","previous_headings":"","what":"Method remove_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-71","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_settings(call = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-65","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"call string vector strings name/s processing method/s removed. Alternatively, integer vector index/es settings removed. call NULL settings removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-71","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-analyses-","dir":"Reference","previous_headings":"","what":"Method remove_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes analyses. Note unique feature groups removed analyses also removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-72","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_analyses(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-66","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-72","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-features-","dir":"Reference","previous_headings":"","what":"Method remove_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Remove features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-73","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_features(features = NULL, filtered = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-67","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-73","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-features-ms-","dir":"Reference","previous_headings":"","what":"Method remove_features_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes loaded MS1 spectra features analyses. practice, column ms1 features data.table analysis object removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-74","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_features_ms1()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-74","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-features-ms--1","dir":"Reference","previous_headings":"","what":"Method remove_features_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes loaded MS2 spectra features analyses. practice, column ms2 features data.table analysis object removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-75","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_features_ms2()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-75","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-groups-","dir":"Reference","previous_headings":"","what":"Method remove_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-76","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_groups(groups = NULL, filtered = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-68","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-76","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-groups-ms-","dir":"Reference","previous_headings":"","what":"Method remove_groups_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes loaded MS1 spectra feature groups. practice, column ms1 groups data.table removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-77","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_groups_ms1()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-77","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-groups-ms--1","dir":"Reference","previous_headings":"","what":"Method remove_groups_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes loaded MS2 spectra feature groups. practice, column ms2 groups data.table removed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-78","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_groups_ms2()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-78","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-remove-alignment-","dir":"Reference","previous_headings":"","what":"Method remove_alignment()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Removes alignment results.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-79","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$remove_alignment()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-79","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-subset-analyses-","dir":"Reference","previous_headings":"","what":"Method subset_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Subsets MassSpecData object analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-80","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$subset_analyses(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-69","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-80","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"new cloned MassSpecData object analyses defined analyses argument.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-subset-features-","dir":"Reference","previous_headings":"","what":"Method subset_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Subsets MassSpecData object features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-81","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$subset_features(features = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-70","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-81","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"new cloned MassSpecData object features defined features argument.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-subset-groups-","dir":"Reference","previous_headings":"","what":"Method subset_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Subsets MassSpecData object groups correspondence features across analyses. Note sub-setting groups, features lose correspondence removed filtered \"grouping\" added filter category/tag. Filtered features can removed method remove_features(filtered = TRUE).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-82","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$subset_groups(groups = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-71","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-82","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"new cloned MassSpecData object groups defined groups argument.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-ion-mobility-","dir":"Reference","previous_headings":"","what":"Method has_ion_mobility()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks analyses drift time ion mobility.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-83","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_ion_mobility(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-72","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-83","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-analyses-","dir":"Reference","previous_headings":"","what":"Method has_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks analyses present.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-84","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_analyses()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-84","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-spectra-","dir":"Reference","previous_headings":"","what":"Method has_loaded_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded spectra given analyses names/indices.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-85","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_spectra(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-73","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-85","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-chromatograms-","dir":"Reference","previous_headings":"","what":"Method has_loaded_chromatograms()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded chromatograms given analyses names/indices.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-86","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_chromatograms(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-74","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-86","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-features-ms-","dir":"Reference","previous_headings":"","what":"Method has_loaded_features_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded features MS1 given analyses names/indices.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-87","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_features_ms1(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-75","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-87","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-features-ms--1","dir":"Reference","previous_headings":"","what":"Method has_loaded_features_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded features MS2 given analyses names/indices.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-88","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_features_ms2(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-76","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-88","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-groups-ms-","dir":"Reference","previous_headings":"","what":"Method has_loaded_groups_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded feature groups MS1.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-89","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_groups_ms1()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-89","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-loaded-groups-ms--1","dir":"Reference","previous_headings":"","what":"Method has_loaded_groups_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks loaded feature groups MS2.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-90","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_loaded_groups_ms2()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-90","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-settings-","dir":"Reference","previous_headings":"","what":"Method has_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks processing settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-91","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_settings(call = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-77","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"call string vector strings name/s processing method/s.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-91","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-features-eic-","dir":"Reference","previous_headings":"","what":"Method has_features_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks presence feature extracted ion chromatograms (EICs) given analyses names/indices.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-92","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_features_eic(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-78","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-92","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-features-","dir":"Reference","previous_headings":"","what":"Method has_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks given analyses features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-93","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_features(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-79","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-93","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-alignment-","dir":"Reference","previous_headings":"","what":"Method has_alignment()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks alignment retention time grouping features across analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-94","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_alignment()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-94","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-has-groups-","dir":"Reference","previous_headings":"","what":"Method has_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks feature groups grouping features across analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-95","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$has_groups()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-95","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Logical value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-spectra-","dir":"Reference","previous_headings":"","what":"Method plot_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots spectra given MS analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-96","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_spectra(   analyses = NULL,   levels = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   allTraces = TRUE,   isolationWindow = 1.3,   minIntensityMS1 = 0,   minIntensityMS2 = 0,   runParallel = FALSE,   legendNames = NULL,   colorBy = \"analyses\",   xVal = \"rt\",   yVal = \"mz\" )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-80","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. allTraces Logical, TRUE level 2 data returned. FALSE level 2, MS2 traces MS1 targets returned, using isolationWindow calculate mass window. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). minIntensityMS1 Numeric value minimum intensity level 1 data (.e., MS1 data). minIntensityMS2 Numeric value minimum intensity level 2 data (.e., MS2 data). runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. colorBy string length 1. One analyses (default), polarities, levels, targets replicates. xVal Character length one. Possible values \"mz\", \"rt\" \"drift\". yVal Character length one. Possible values \"mz\", \"rt\" \"drift\".","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-96","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"3D interactive plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-xic-","dir":"Reference","previous_headings":"","what":"Method plot_xic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots extract ion chromatograms (EIC) m/z vs retention time analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-97","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_xic(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   runParallel = FALSE,   legendNames = NULL,   plotTargetMark = TRUE,   targetsMark = NULL,   ppmMark = 5,   secMark = 10,   numberRows = 1 )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-81","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. plotTargetMark Logical, set TRUE plot target mark. targetsMark data.frame columns mz rt, defining m/z retention time values target. Note number rows match number targets. ppmMark numeric vector length one define mass deviation, ppm, target mark. default 5 ppm. secMark numeric vector length one define time deviation, seconds, target mark. default 10 ppm. numberRows integer vector length one define number rows grid plots. Note target always plotted one row selected analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-97","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"interactive plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-eic-","dir":"Reference","previous_headings":"","what":"Method plot_eic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots extract ion chromatograms (EIC) analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-98","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_eic(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   showLegend = TRUE,   xlim = NULL,   ylim = NULL,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-82","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-98","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-tic-","dir":"Reference","previous_headings":"","what":"Method plot_tic()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots total ion chromatogram (TIC) analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-99","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_tic(   analyses = NULL,   levels = c(1, 2),   title = NULL,   colorBy = \"analyses\",   legendNames = NULL,   showLegend = TRUE,   xlim = NULL,   ylim = NULL,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-83","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively. title string title. colorBy string length 1. One analyses, targets (default) replicates. legendNames character vector length targets. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-99","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-bpc-","dir":"Reference","previous_headings":"","what":"Method plot_bpc()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots base peak chromatogram (BPC) analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-100","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_bpc(   analyses = NULL,   levels = c(1, 2),   title = NULL,   colorBy = \"analyses\",   legendNames = NULL,   showLegend = TRUE,   xlim = NULL,   ylim = NULL,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-84","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. levels Integer value vector length one two levels MS data. Possible values 1 2 MS1 MS2 data, respectively. title string title. colorBy string length 1. One analyses, targets (default) replicates. legendNames character vector length targets. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-100","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-ms-","dir":"Reference","previous_headings":"","what":"Method plot_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS2 spectra analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-101","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_ms2(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   isolationWindow = 1.3,   mzClust = 0.005,   presence = 0.8,   verbose = FALSE,   minIntensity = 0,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-85","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. minIntensity Numeric value minimum intensity. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-101","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-ms--1","dir":"Reference","previous_headings":"","what":"Method plot_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS1 spectra analyses based targets.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-102","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_ms1(   analyses = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   id = NULL,   mzClust = 0.003,   presence = 0.8,   verbose = FALSE,   minIntensity = 1000,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-86","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. id Character length m/z retention time targets used identifier/s. given, id built combination m/z retention time ranges values. mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. minIntensity Numeric value minimum intensity. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-102","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-features-","dir":"Reference","previous_headings":"","what":"Method plot_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-103","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_features(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtExpand = 120,   mzExpand = NULL,   loaded = TRUE,   filtered = FALSE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   showLegend = TRUE,   xlim = NULL,   ylim = NULL,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-87","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtExpand Numeric value retention time values (seconds) expanding left right mass range. mzExpand Numeric value mass mass--charge ratio (m/z) (Da) expanding left right mass range. loaded Logical. TRUE available, previously loaded data used instead extraction raw data. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-103","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-map-features-","dir":"Reference","previous_headings":"","what":"Method map_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots map retention time vs m/z features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-104","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$map_features(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   showLegend = TRUE,   xlim = 30,   ylim = 0.05,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-88","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-104","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-features-ms-","dir":"Reference","previous_headings":"","what":"Method plot_features_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS1 spectra features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-105","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_features_ms1(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtWindow = c(-2, 2),   mzWindow = c(-5, 100),   mzClust = 0.003,   presence = 0.8,   minIntensity = 1000,   verbose = FALSE,   filtered = FALSE,   loadedMS1 = TRUE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-89","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtWindow Numeric vector length two retention time values (seconds) expanding left right retention time range. first element expands left second expands right. Note first element negative expand left. mzWindow Numeric vector length two mass mass--charge ratio (m/z) values (Da) expanding left right mass range. first element expands left second expands right. Note first element negative expand left. mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedMS1 Logical. TRUE available, previously loaded MS1 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-105","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-features-ms--1","dir":"Reference","previous_headings":"","what":"Method plot_features_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS2 spectra features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-106","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_features_ms2(   analyses = NULL,   features = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   isolationWindow = 1.3,   mzClust = 0.005,   presence = 0.8,   minIntensity = 0,   verbose = FALSE,   filtered = FALSE,   loadedMS2 = TRUE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-90","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedMS2 Logical. TRUE available, previously loaded MS2 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-106","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-alignment-","dir":"Reference","previous_headings":"","what":"Method plot_alignment()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots results retention time alignment across analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-107","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_alignment()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-107","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot retention time alignment differences sample.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-groups-","dir":"Reference","previous_headings":"","what":"Method plot_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots feature groups EIC.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-108","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_groups(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtExpand = 15,   mzExpand = 0.008,   filtered = FALSE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   showLegend = TRUE,   xlim = NULL,   ylim = NULL,   cex = 0.6,   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-91","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtExpand Numeric value retention time values (seconds) expanding left right mass range. mzExpand Numeric value mass mass--charge ratio (m/z) (Da) expanding left right mass range. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. showLegend Logical. Set TRUE show legend. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. cex length one numeric value defining scale legend non interactive plotting. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-108","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-groups-ms-","dir":"Reference","previous_headings":"","what":"Method plot_groups_ms1()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS1 spectra feature groups analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-109","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_groups_ms1(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtWindow = c(-2, 2),   mzWindow = c(-5, 90),   mzClustFeatures = 0.005,   presenceFeatures = 0.8,   minIntensityFeatures = 1000,   loadedFeaturesMS1 = TRUE,   mzClustGroups = 0.005,   presenceGroups = 0.8,   minIntensityGroups = 1000,   groupBy = \"groups\",   verbose = FALSE,   filtered = FALSE,   loadedGroupsMS1 = TRUE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-92","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtWindow Numeric vector length two retention time values (seconds) expanding left right retention time range. first element expands left second expands right. Note first element negative expand left. mzWindow Numeric vector length two mass mass--charge ratio (m/z) values (Da) expanding left right mass range. first element expands left second expands right. Note first element negative expand left. mzClustFeatures Numeric value mass deviation threshold (Da) cluster mass traces features. Highly dependent mass resolution MS data. presenceFeatures Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityFeatures Numeric value minimum intensity features. loadedFeaturesMS1 Logical. TRUE available, previously loaded features MS1 data used instead extraction raw data. mzClustGroups Numeric value mass deviation threshold (Da) cluster mass traces feature groups. Highly dependent mass resolution MS data. presenceGroups Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityGroups Numeric value minimum intensity feature groups. groupBy String way grouping. Possible values groups replicates groups feature groups feature groups replicates, respectively. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedGroupsMS1 Logical. TRUE available, previously loaded feature groups MS1 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-109","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-groups-ms--1","dir":"Reference","previous_headings":"","what":"Method plot_groups_ms2()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots MS1 spectra feature groups analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-110","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_groups_ms2(   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   isolationWindow = 1.3,   mzClustFeatures = 0.003,   presenceFeatures = 0.8,   minIntensityFeatures = 100,   loadedFeaturesMS2 = TRUE,   mzClustGroups = 0.003,   presenceGroups = TRUE,   minIntensityGroups = 100,   groupBy = \"groups\",   verbose = FALSE,   filtered = FALSE,   loadedGroupsMS2 = TRUE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-93","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClustFeatures Numeric value mass deviation threshold (Da) cluster mass traces features. Highly dependent mass resolution MS data. presenceFeatures Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityFeatures Numeric value minimum intensity features. loadedFeaturesMS2 Logical. TRUE available, previously loaded features MS2 data used instead extraction raw data. mzClustGroups Numeric value mass deviation threshold (Da) cluster mass traces feature groups. Highly dependent mass resolution MS data. presenceGroups Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensityGroups Numeric value minimum intensity feature groups. groupBy String way grouping. Possible values groups replicates groups feature groups feature groups replicates, respectively. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. loadedGroupsMS2 Logical. TRUE available, previously loaded feature groups MS2 data used instead extraction raw data. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-110","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-groups-overview-","dir":"Reference","previous_headings":"","what":"Method plot_groups_overview()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Method give overview EIC, alignment intensity variance features within target feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-111","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_groups_overview(   analyses = NULL,   groups = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   rtExpand = 120,   mzExpand = 0.005,   loaded = TRUE,   filtered = FALSE,   runParallel = FALSE,   legendNames = NULL,   title = NULL,   heights = c(0.35, 0.5, 0.15) )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-94","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. groups numeric/character vector number/id feature groups. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. rtExpand Numeric value retention time values (seconds) expanding left right mass range. mzExpand Numeric value mass mass--charge ratio (m/z) (Da) expanding left right mass range. loaded Logical. TRUE available, previously loaded data used instead extraction raw data. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. legendNames character vector length targets. title string title. heights numeric vector length 3 control height first, second third plot, respectively.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-111","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-plot-internal-standards-qc-","dir":"Reference","previous_headings":"","what":"Method plot_internal_standards_qc()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Plots quality control assessment internal standards.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-112","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$plot_internal_standards_qc()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-112","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-map-components-","dir":"Reference","previous_headings":"","what":"Method map_components()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Maps components (.e., isotope clusters adducts) analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-113","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$map_components(   analyses = NULL,   groups = NULL,   features = NULL,   components = NULL,   mass = NULL,   mz = NULL,   rt = NULL,   drift = NULL,   ppm = 20,   sec = 60,   millisec = 5,   filtered = FALSE,   xlim = 30,   ylim = 0.05,   showLegend = TRUE,   legendNames = NULL,   title = NULL,   colorBy = \"targets\",   interactive = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-95","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. groups numeric/character vector number/id feature groups. features character vector feature id/s data.frame data.table column named feature feature id/s. column named analysis can given specify analyses features returned. components numeric vector number/s feature component/s. mass vector target neutral mass value/s (Da) two columns data.table data.frame named min max minimum maximum neutral mass values (Da), respectively. Alternatively, neutral mass (Da) retention time (seconds) /drift time values (milliseconds) can given one data.table data.frame columns named mass rt /drift. , deviations given ppm, sec millisec  arguments used calculate ranges. Also works data.table data.frame minimum maximum values neutral mass, retention time drift time targets. case, column names must min, max, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. mz vector target m/z value/s (Da) two columns data.table data.frame named mzmin mzmax minimum maximum m/z values (Da), respectively. Alternatively, m/z (Da) retention time values (seconds) can given one data.table data.frame columns named mz rt /drift. , deviations given ppm, sec millisec arguments used calculate ranges. Also works data.table data.frame minimum maximum values m/z, retention time drift time targets. case, column names must mzmin, mzmax, rtmin, rtmax, driftmin driftmax. Note mass/time ranges given, ppm, sec millisec arguments used. rt vector target retention time values (seconds) two columns data.table data.frame minimum maximum retention time values (seconds). drift vector target drift time values (milliseconds) two columns data.table data.frame minimum maximum drift time values (milliseconds). ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. millisec Numeric length one drift time deviation, milliseconds. filtered Logical. TRUE, filtered features/groups considered. xlim length one two numeric vector setting x limits (seconds) plot. ylim length one two numeric vector setting m/z limits plot. showLegend Logical. Set TRUE show legend. legendNames character vector length targets. title string title. colorBy string length 1. One analyses, targets (default) replicates. interactive Logical. TRUE, data plotted interactively using plotly.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-113","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"plot.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-run-workflow-","dir":"Reference","previous_headings":"","what":"Method run_workflow()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Runs modules represented added ProcessingSettings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-114","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$run_workflow()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-114","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-centroid-spectra-","dir":"Reference","previous_headings":"","what":"Method centroid_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Centroids profile spectra data MS analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-115","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$centroid_spectra(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-96","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-115","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-bin-spectra-","dir":"Reference","previous_headings":"","what":"Method bin_spectra()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Bins centroided spectra MS analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-116","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$bin_spectra(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-97","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-116","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-find-features-","dir":"Reference","previous_headings":"","what":"Method find_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Finds features (.e., chromatographic peaks) spectra data analyses. Note, MS data structure requirements vary available processing settings finding features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-117","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$find_features(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-98","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-117","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-group-features-","dir":"Reference","previous_headings":"","what":"Method group_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Groups possibly aligns features across analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-118","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$group_features(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-99","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-118","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-filter-features-","dir":"Reference","previous_headings":"","what":"Method filter_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Filters features feature groups according defined settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-119","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$filter_features(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-100","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"MassSpecData R6 class and methods — MassSpecData","text":"filtered features feature groups entirely removed tagged filtered. See columns filtered filter features feature groups data.table obtained methods get_features() get_groups(), respectively.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-119","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-annotate-features-","dir":"Reference","previous_headings":"","what":"Method annotate_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Annotates isotopic features according defined settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-120","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$annotate_features(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-101","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"MassSpecData R6 class and methods — MassSpecData","text":"Extra columns added features data.table analysis.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-120","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-find-internal-standards-","dir":"Reference","previous_headings":"","what":"Method find_internal_standards()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Finds internal standards features according defined settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-121","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$find_internal_standards(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-102","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-suspect-screening-","dir":"Reference","previous_headings":"","what":"Method suspect_screening()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Screens suspect targets features according defined settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-122","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$suspect_screening(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-103","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-calculate-quality-","dir":"Reference","previous_headings":"","what":"Method calculate_quality()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Calculates quality parameters features can used filtering/prioritization.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-123","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$calculate_quality(settings = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-104","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"settings ProcessingSettings S3 class object call name applicable processing method. Alternatively, named list call, algorithm parameters transformed used ProcessingSettings S3 class object. given, settings processing method searched within MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-as-patroon-features-","dir":"Reference","previous_headings":"","what":"Method as_patRoon_features()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Creates object S4 class features package patRoon features analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-124","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$as_patRoon_features(filtered = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-105","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-121","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"object S4 class features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-as-patroon-featuregroups-","dir":"Reference","previous_headings":"","what":"Method as_patRoon_featureGroups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Creates object S4 class featureGroups package patRoon features analyses feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-125","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$as_patRoon_featureGroups(filtered = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-106","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"filtered Logical. TRUE, filtered features/groups considered.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-122","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"object S4 class featureGroups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-as-patroon-mspeaklists-","dir":"Reference","previous_headings":"","what":"Method as_patRoon_MSPeakLists()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Creates object S4 class MSPeakLists package patRoon MS MSMS data features analyses. Note feature groups required. MS MSMS spectra feature average patRoon produce feature group spectra using parameters function getDefAvgPListParams. arguments described taken documentation available patRoon.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-126","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$as_patRoon_MSPeakLists(   filtered = FALSE,   clusterMzWindow = 0.005,   topMost = 100,   minIntensityPre = 50,   minIntensityPost = 50,   avgFun = mean,   method = \"hclust\",   retainPrecursorMSMS = TRUE )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-107","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"filtered Logical. TRUE, filtered features/groups considered. clusterMzWindow m/z window (Da) used clustering m/z values spectra averaged. method=\"hclust\" corresponds cluster height, method=\"distance\" value used find nearby masses (+/- window). small windows prevent clustering m/z values (thus erroneously treating equal masses along spectra different), whereas big windows may cluster unrelated m/z values different even spectrum together. topMost retain maximum number MS peaks generating averaged spectra. Lowering number may exclude irrelevant (noisy) MS peaks decrease processing time, whereas higher values may avoid excluding lower intense MS peaks may still interest. minIntensityPre MS peaks intensities value removed (applied prior selection topMost) averaging. minIntensityPost MS peaks intensities value removed averaging. avgFun Function used calculate average m/z values. method Method used producing averaged MS spectra. Valid values \"hclust\", used hierarchical clustering (using fastcluster package), \"distance\", use peak distance. latter method may reduces processing time memory requirements, potential cost reduced accuracy. retainPrecursorMSMS MS/MS data : TRUE always retain precursor mass peak even among topMost peaks. Note MS precursor mass peaks always kept. Furthermore, note precursor peaks MS MS/MS data may still removed intensity thresholds (unlike filter method function). pruneMissingPrecursorMS MS data : TRUE peak lists without precursor peak removed. Note even set FALSE, functionality relies MS (MS/MS) peak lists (e.g. formulae calculation) still skip calculation precursor found.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-123","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"object S4 class MSPeakLists.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-check-correspondence-","dir":"Reference","previous_headings":"","what":"Method check_correspondence()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Checks correspondence features within feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-127","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$check_correspondence()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-124","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"TRUE FALSE.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-save-headers-","dir":"Reference","previous_headings":"","what":"Method save_headers()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves headers list.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-128","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$save_headers(format = \"json\", name = \"headers\", path = getwd())"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-108","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-125","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves headers list defined format path returns invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-save-settings-","dir":"Reference","previous_headings":"","what":"Method save_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves settings.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-129","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$save_settings(   call = NULL,   format = \"json\",   name = \"settings\",   path = getwd() )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-109","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"call string vector strings name/s processing method/s saved. call NULL settings saved. format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-126","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves settings list defined format path returns invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-save-analyses-","dir":"Reference","previous_headings":"","what":"Method save_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-130","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$save_analyses(   analyses = NULL,   format = \"json\",   name = \"analyses\",   path = getwd() )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-110","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"analyses numeric/character vector number/name analyses. format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-127","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves list analyses defined format path returns invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-save-groups-","dir":"Reference","previous_headings":"","what":"Method save_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves feature groups data.table.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-131","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$save_groups(format = \"json\", name = \"groups\", path = getwd())"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-111","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-128","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves groups data.table defined format path returns invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-save-","dir":"Reference","previous_headings":"","what":"Method save()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves private fields (.e., headers, settings, analyses, groups alignment) MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-132","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$save(format = \"json\", name = \"MassSpecData\", path = getwd())"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-112","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-129","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves private fields msdata defined format path returns invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-import-headers-","dir":"Reference","previous_headings":"","what":"Method import_headers()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Imports headers rds json file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-133","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$import_headers(file = NA_character_)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-113","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"file json rds file obtained MassSpecData method save().","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-130","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-import-settings-","dir":"Reference","previous_headings":"","what":"Method import_settings()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Imports processing settings rds json file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-134","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$import_settings(file = NA_character_, replace = TRUE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-114","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"file json rds file obtained MassSpecData method save(). replace Logical. TRUE, existing settings replaced new settings call name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-131","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-import-analyses-","dir":"Reference","previous_headings":"","what":"Method import_analyses()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Imports analyses rds json file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-135","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$import_analyses(file = NA_character_)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-115","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"file json rds file obtained MassSpecData method save().","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-132","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-import-groups-","dir":"Reference","previous_headings":"","what":"Method import_groups()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Imports feature groups rds json file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-136","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$import_groups(file = NA_character_)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-116","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"file json rds file obtained MassSpecData method save().","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-133","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-import-all-","dir":"Reference","previous_headings":"","what":"Method import_all()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Imports fields MassSpecData object saved json.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-137","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$import_all(file = NA_character_)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-117","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"file json file representing MassSpecData object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-134","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-patroon-report-","dir":"Reference","previous_headings":"","what":"Method patRoon_report()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Saves HTML report function report package patRoon. interface exactly arguments description taken documentation patRoon. Therefore, information, recommend consult directly function report patRoon.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-138","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$patRoon_report(   path = paste0(getwd(), \"/report\"),   filtered = FALSE,   settingsFile = system.file(\"report\", \"settings.yml\", package = \"patRoon\"),   EICParams = patRoon::getDefEICParams(topMost = 1, topMostByRGroup = TRUE),   specSimParams = patRoon::getDefSpecSimParams(),   clearPath = FALSE,   openReport = TRUE,   parallel = TRUE,   overrideSettings = list() )"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-118","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"path String directory file saved. filtered Logical. TRUE, filtered features/groups considered. settingsFile path report settings file used report configuration (see Report settings report). EICParams named list parameters used extracted ion chromatogram (EIC) creation. See getDefEICParams. specSimParams named list parameters influence calculation MS spectra similarities. See getDefSpecSimParams. clearPath TRUE report destination path (recursively) removed prior reporting. openReport set TRUE output report file opened system browser. parallel set TRUE code executed parallel. overrideSettings list settings override report settings file. See report.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-135","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"interactive HTML report package patRoon.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-processing-function-calls-","dir":"Reference","previous_headings":"","what":"Method processing_function_calls()","title":"MassSpecData R6 class and methods — MassSpecData","text":"Possible processing function calls.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-139","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$processing_function_calls()"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"returns-136","dir":"Reference","previous_headings":"","what":"Returns","title":"MassSpecData R6 class and methods — MassSpecData","text":"character vector ordered possible function calls data pre post-processing.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MassSpecData R6 class and methods — MassSpecData","text":"objects class cloneable method.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"usage-140","dir":"Reference","previous_headings":"","what":"Usage","title":"MassSpecData R6 class and methods — MassSpecData","text":"","code":"MassSpecData$clone(deep = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/MassSpecData.html","id":"arguments-119","dir":"Reference","previous_headings":"","what":"Arguments","title":"MassSpecData R6 class and methods — MassSpecData","text":"deep Whether make deep clone.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://odea-project.github.io/StreamFind/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"Creates ProcessingSettings S3 class object. ProcessingSettings used StreamFind processing data given data class method.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"","code":"ProcessingSettings(   call = NA_character_,   algorithm = NA_character_,   parameters = NULL,   version = NA_character_,   software = NA_character_,   developer = NA_character_,   contact = NA_character_,   link = NA_character_,   doi = NA_character_ )  # S3 method for ProcessingSettings validate(x)  # S3 method for ProcessingSettings print(x, ...)  # S3 method for ProcessingSettings asJSON(x)  # S3 method for ProcessingSettings export(x, format = \"json\", name = \"settings\", path = getwd(), ...)  as.ProcessingSettings(value)"},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"call Character length one name method processing settings applied. algorithm Character length one name algorithm used. parameters List parameters specific method call algorithm. version Character length one version processing settings. software Character length one name software package. developer Character length one name developer/s. contact Character length one email developer. link Character length one web link. doi Character length one DOI algorithm. x ProcessingSettings S3 class object. ... used. format string. Possible values json rds saving JSON RDS formats, respectively. name String name file saved. path String directory file saved. value list checked /converted ProcessingSettings S3 class.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"ProcessingSettings S3 class","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"See documentation method processing settings applied information applicable algorithms parameters.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":"validate(ProcessingSettings): Validates ProcessingSettings S3 class object, returning logical value length one. print(ProcessingSettings): Prints ProcessingSettings S3 class object console. asJSON(ProcessingSettings): Converts ProcessingSettings S3 class object JSON string. export(ProcessingSettings): Exports ProcessingSettings S3 class object JSON RDS file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProcessingSettings.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"ProcessingSettings S3 class constructor, methods and functions — ProcessingSettings","text":".ProcessingSettings(): Converts argument ProcessingSettings S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":null,"dir":"Reference","previous_headings":"","what":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"Creates ProjectHeaders S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"","code":"ProjectHeaders(...)  # S3 method for ProjectHeaders validate(x)  # S3 method for ProjectHeaders asJSON(x)  as.ProjectHeaders(value)"},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"... Arguments added headers. Note given arguments must length one. type limitations. name argument becomes name header entry. Alternatively, single list argument headers (length one) can given. x ProjectHeaders S3 class object. value List checked converted ProjectHeaders S3 class.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"ProjectHeaders S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"validate(ProjectHeaders): Validates ProjectHeaders S3 class object, returning logical value length one. asJSON(ProjectHeaders): Converts ProjectHeaders S3 class object JSON string.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":".ProjectHeaders(): Converts argument value ProjectHeaders S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/ProjectHeaders.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ProjectHeaders S3 class constructor, methods and functions — ProjectHeaders","text":"argument element name given, must type character. argument element path given, must type character exist. argument element date given, must class POSIXct POSIXt. given date character, conversion class POSIXct POSIXt attempted.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":null,"dir":"Reference","previous_headings":"","what":"RamanData R6 class and methods — RamanData","title":"RamanData R6 class and methods — RamanData","text":"RamanData R6 class framework methods parsing, processing, inspecting storing RAMAN data.","code":""},{"path":[]},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"RamanData R6 class and methods — RamanData","text":"RamanData$new() RamanData$print() RamanData$get_headers() RamanData$get_analyses() RamanData$get_number_analyses() RamanData$get_analysis_names() RamanData$get_files() RamanData$get_spectra() RamanData$get_overview() RamanData$add_headers() RamanData$clone()","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"RamanData R6 class and methods — RamanData","text":"Creates R6 RamanData class object. headers given (.e., NULL), default Headers S3 class object generated name NA_character, path get_wd() date Sys.time(). See ?Headers information.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$new(files = NULL, headers = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"files Full file paths Raman analyses. headers named list headers ProjectHeaders S3 class object. list element must length one. type restrictions except name (must type character length 1), author (must type character length 1), path (must type character length 1) date (must class POSIXct class POSIXt length 1). See information ?ProjectHeaders.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"RamanData R6 class and methods — RamanData","text":"Prints summary RamanData object console.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$print()"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"Console text.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-headers-","dir":"Reference","previous_headings":"","what":"Method get_headers()","title":"RamanData R6 class and methods — RamanData","text":"Gets headers.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_headers(value = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"value character vector name/s header elements. NULL, entire headers list returned.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"headers list header elements defined value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-analyses-","dir":"Reference","previous_headings":"","what":"Method get_analyses()","title":"RamanData R6 class and methods — RamanData","text":"Gets analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_analyses()"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"list analyses analyses defined analyses argument.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-number-analyses-","dir":"Reference","previous_headings":"","what":"Method get_number_analyses()","title":"RamanData R6 class and methods — RamanData","text":"Gets number analyses present.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_number_analyses()"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"integer value.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-analysis-names-","dir":"Reference","previous_headings":"","what":"Method get_analysis_names()","title":"RamanData R6 class and methods — RamanData","text":"Gets analysis names.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_analysis_names(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"analyses X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-files-","dir":"Reference","previous_headings":"","what":"Method get_files()","title":"RamanData R6 class and methods — RamanData","text":"Gets full file paths analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_files(analyses = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"analyses X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"character vector.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-spectra-","dir":"Reference","previous_headings":"","what":"Method get_spectra()","title":"RamanData R6 class and methods — RamanData","text":"Gets spectra analyses.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_spectra(analyses = NULL, shift = NULL)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"analyses X. shift X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-get-overview-","dir":"Reference","previous_headings":"","what":"Method get_overview()","title":"RamanData R6 class and methods — RamanData","text":"Gets overview data.frame analysis types, names, replicates, associated blank replicates full file paths.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$get_overview()"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"data.frame columns type, analysis, replicate, blank file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-add-headers-","dir":"Reference","previous_headings":"","what":"Method add_headers()","title":"RamanData R6 class and methods — RamanData","text":"Adds headers. argument element \"name\" given, must type character. argument element path given, must type character exist. argument element date given, must class POSIXct POSIXt. given date character, conversion class POSIXct POSIXt attempted. See ?Headers information.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$add_headers(...)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"... Arguments added headers. Note given arguments must length one. type limitations. name argument becomes name header entry. Alternatively, single list argument headers (length one) can given.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"RamanData R6 class and methods — RamanData","text":"Invisible.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"RamanData R6 class and methods — RamanData","text":"objects class cloneable method.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"RamanData R6 class and methods — RamanData","text":"","code":"RamanData$clone(deep = FALSE)"},{"path":"https://odea-project.github.io/StreamFind/reference/RamanData.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"RamanData R6 class and methods — RamanData","text":"deep Whether make deep clone.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/save_default_ProcessingSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"save_default_ProcessingSettings — save_default_ProcessingSettings","title":"save_default_ProcessingSettings — save_default_ProcessingSettings","text":"Saves disk ProcessingSettings S3 class object defined format, path name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/save_default_ProcessingSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save_default_ProcessingSettings — save_default_ProcessingSettings","text":"","code":"save_default_ProcessingSettings(   call = NA_character_,   algorithm = NA_character_,   format = \"json\",   name = \"settings\",   path = getwd() )"},{"path":"https://odea-project.github.io/StreamFind/reference/save_default_ProcessingSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save_default_ProcessingSettings — save_default_ProcessingSettings","text":"call Character (length 1) method call name. algorithm Character (length 1) algorithm name. format Character (length 1) format saved file. Possible \"json\" \"rds\". name Character (length 1) name file without extension. path Character (length 1) saving path. default getwd() path.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/save_default_ProcessingSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"save_default_ProcessingSettings — save_default_ProcessingSettings","text":"Creates json/rds files defined path.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_annotate_features_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","title":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","text":"Settings annotation isotopic features. method uses maxIsotopes define maximum length isotopic chain. list candidate features build rtWindowAlignment maximum mass increment match maximum chain length. , mass difference  natural isotopes defined elements given monoisotopic ion (.e., feature) targeted. candidate evaluated according mass error expected relative intensity range defined mode.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_annotate_features_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","text":"","code":"Settings_annotate_features_StreamFind(   maxIsotopes = 5,   elements = c(\"C\", \"H\", \"N\", \"O\", \"S\", \"Cl\", \"Br\"),   mode = \"small molecules\",   maxCharge = 1,   rtWindowAlignment = 0.3,   maxGaps = 1,   runParallel = FALSE )  # S3 method for Settings_annotate_features_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_annotate_features_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","text":"maxIsotopes Numeric (length 1) maximum number isotopic steps. elements Character vector elements target isotopic annotation. Possible elements C, H, N, O, S, Cl, Br. mode Character (length 1) type molecules targeted. now, \"small molecules\" possible. maxCharge Numeric (length 1) maximum charge ions can ionized find isotopes. rtWindowAlignment Numeric (length 1) proportion monoisotopic feature time window used retrieving isotopic candidates. maxGaps Numeric (length 1) maximum allowed gaps isotopic chains. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. x Settings_annotate_features_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_annotate_features_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_annotate_features_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_annotate_features_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_annotate_features_StreamFind — Settings_annotate_features_StreamFind","text":"validate(Settings_annotate_features_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_bin_spectra_qBinning.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","title":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","text":"yet implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_bin_spectra_qBinning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","text":"","code":"Settings_bin_spectra_qBinning()  # S3 method for Settings_bin_spectra_qBinning validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_bin_spectra_qBinning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","text":"x Settings_bin_spectra_qBinning S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_bin_spectra_qBinning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","text":"X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_bin_spectra_qBinning.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_bin_spectra_qBinning — Settings_bin_spectra_qBinning","text":"validate(Settings_bin_spectra_qBinning): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_calculate_quality_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","title":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","text":"Settings calculating quality parameters features (e.g., signal--noise (sn) ratio).","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_calculate_quality_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","text":"","code":"Settings_calculate_quality_StreamFind(filtered = FALSE, runParallel = TRUE)  # S3 method for Settings_calculate_quality_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_calculate_quality_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","text":"filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. x Settings_calculate_quality_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_calculate_quality_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_calculate_quality_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_calculate_quality_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_calculate_quality_StreamFind — Settings_calculate_quality_StreamFind","text":"validate(Settings_calculate_quality_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"Centroids profile spectra using qCentroids algorithm, part qAlgorithms library.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"","code":"Settings_centroid_spectra_qCentroids(runParallel = FALSE)  # S3 method for Settings_centroid_spectra_qCentroids validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. x Settings_centroid_spectra_qCentroids S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"ProcessingSettings S3 class object subclass Settings_centroid_spectra_qCentroids.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"validate(Settings_centroid_spectra_qCentroids): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_centroid_spectra_qCentroids.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_centroid_spectra_qCentroids — Settings_centroid_spectra_qCentroids","text":"Reuschenbach M, Hohrenk-Danzouma LL, Schmidt TC, Renner G (2022). “Development scoring parameter characterize data quality centroids high-resolution mass spectra.”  Analytical Bioanalytical Chemistry, 414, 6635--6645. doi:10.1007/s00216-022-04224-y .","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"Settings filtering features feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"","code":"Settings_filter_features_StreamFind(...)  # S3 method for Settings_filter_features_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"... Ordered filters applied. Possible filter arguments : minIntensity  Numeric (length 1) minimum intensity. minSnRatio  Numeric (length 1) minimum signal--noise ratio. maxGroupSd  Numeric (length 1) maximum intensity deviation within analysis replicate (percentage). blank  Numeric (length 1) intensity threshold blank subtraction. features/feature groups higher blank * intensity filtered. minGroupAbundance  Numeric (length 1) minimum presence feature given analysis replicate. excludeIsotopes  Logical (length 1) TRUE filtering annotated isotopes (prevails monoisotopic features). rtFilter  Numeric (length 2) min max retention time (seconds) values filter features. Features within retention time range filtered . massFilter  Numeric (length 2) min max mass (Da) values filter features. Features within mass range filtered . x Settings_filter_features_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_filter_features_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"feature groups exist filtering done feature groups, meaning filters applied per feature group individual features. instance, feature groups exist minimum intensity applied maximum intensity observed feature group intensity individual feature.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_filter_features_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_filter_features_StreamFind — Settings_filter_features_StreamFind","text":"validate(Settings_filter_features_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_features_kpic2 — Settings_find_features_kpic2","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"Settings finding features (.e., chromatographic peaks) mzML/mzXML files using package KPIC. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"","code":"Settings_find_features_kpic2(   level = 500,   mztol = 0.01,   gap = 2,   width = 5,   min_snr = 4,   kmeans = TRUE,   alpha = 0.3 )  # S3 method for Settings_find_features_kpic2 validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"level Mass traces retained maximum values level. mztol initial m/z tolerance. gap number gap points mass trace. width minimum length mass trace. min_snr Minimum signal noise ratio. kmeans TRUE, getPIC.kmeans used obtain PICs (.e., features). FALSE, getPIC used. alpha kmeans TRUE, alpha parameter forecasting. kmeans FALSE, alpha used. x Settings_find_features_kpic2 S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"ProcessingSettings S3 class object subclass Settings_find_features_kpic2.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"See findFeaturesKPIC2 function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"validate(Settings_find_features_kpic2): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_kpic2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_find_features_kpic2 — Settings_find_features_kpic2","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Ji H, Zeng F, Xu Y, Lu H, Zhang Z (2017). “KPIC2: Effective Framework Mass Spectrometry-Based Metabolomics Using Pure Ion Chromatograms.” Anal Chem., 14(89), 7631--7640. doi:10.1021/acs.analchem.7b01547 , https://pubs.acs.org/doi/10.1021/acs.analchem.7b01547.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_features_openms — Settings_find_features_openms","title":"Settings_find_features_openms — Settings_find_features_openms","text":"Settings finding features (.e., chromatographic peaks) mzML/mzXML files using OpenMS (https://abibuilder.cs.uni-tuebingen.de/archive/openms/) software algorithm FeatureFinderMetabo. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_features_openms — Settings_find_features_openms","text":"","code":"Settings_find_features_openms(   noiseThrInt = 500,   chromSNR = 3,   chromFWHM = 10,   mzPPM = 12,   reEstimateMTSD = FALSE,   traceTermCriterion = \"sample_rate\",   traceTermOutliers = 5,   minSampleRate = 1,   minTraceLength = 5,   maxTraceLength = -1,   widthFiltering = \"fixed\",   minFWHM = 5,   maxFWHM = 40,   traceSNRFiltering = TRUE,   localRTRange = 0,   localMZRange = 0,   isotopeFilteringModel = \"none\",   MZScoring13C = FALSE,   useSmoothedInts = FALSE,   extraOpts = NULL,   intSearchRTWindow = 3,   useFFMIntensities = FALSE,   verbose = FALSE )  # S3 method for Settings_find_features_openms validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_features_openms — Settings_find_features_openms","text":"noiseThrInt Intensity threshold peaks regarded noise. chromSNR Minimum signal--noise mass trace . chromFWHM Expected chromatographic peak width (seconds). mzPPM Allowed mass deviation (ppm). reEstimateMTSD Enables dynamic re-estimation m/z variance mass trace collection stage. traceTermCriterion Termination criterion extension mass traces. 'outlier' mode, trace extension cancels predefined number consecutive outliers found (see trace_termination_outliers parameter). 'sample_rate' mode, trace extension directions stops ratio found peaks versus visited spectra falls 'min_sample_rate' threshold. traceTermOutliers Mass trace extension one direction cancels number consecutive spectra detectable peaks reached. minSampleRate Minimum fraction scans along mass trace must contain peak. minTraceLength Minimum expected length mass trace (seconds). maxTraceLength Maximum expected length mass trace (seconds). Set negative value disable maximal length check mass trace detection. widthFiltering Enable filtering unlikely peak widths. fixed setting filters mass traces outside min_fwhm, max_fwhm interval (set parameters accordingly!). auto setting filters 5 95% quantiles peak width distribution. minFWHM Minimum full-width--half-maximum chromatographic peaks (seconds). Ignored parameter width_filtering auto. maxFWHM Maximum full-width--half-maximum chromatographic peaks (seconds). Ignored parameter width_filtering auto. traceSNRFiltering Apply post-filtering signal--noise ratio smoothing. localRTRange RT range look coeluting mass traces. localMZRange MZ range look isotopic mass traces. isotopeFilteringModel Remove/score candidate assemblies based isotope intensities. SVM isotope models metabolites trained either 2% 5% RMS error. peptides, averagine cosine scoring used. Select appropriate noise model according quality measurement MS device. MZScoring13C Use 13C isotope peak position (~1.003355 Da) expected shift m/z isotope mass traces (highly recommended lipidomics!). Disable general metabolites (described Kenar et al. 2014, MCP.). useSmoothedInts Use LOWESS intensities instead raw intensities. extraOpts = NULL, intSearchRTWindow Retention time window (seconds, +/- feature retention time) used find closest data point retention time obtain intensity feature (needed since OpenMS provide data). useFFMIntensities TRUE peak intensities directly loaded FeatureFinderMetabo output. Otherwise, intensities loaded afterwards input ‘mzML’ files, potentially much slower, especially many analyses files. However, useFFMIntensities=TRUE still somewhat experimental, may less accurate requires recent version OpenMS (>=2.7). verbose Logical length one. TRUE adds processing information console. x Settings_find_features_openms S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_features_openms — Settings_find_features_openms","text":"ProcessingSettings S3 class object subclass Settings_find_features_openms.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_find_features_openms — Settings_find_features_openms","text":"See findFeaturesOpenMS function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_features_openms — Settings_find_features_openms","text":"validate(Settings_find_features_openms): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_openms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_find_features_openms — Settings_find_features_openms","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Röst HL, Sachsenberg T, Aiche S, Bielow C, Weisser H, Aicheler F, Andreotti S, Ehrlich H, Gutenbrunner P, Kenar E, Liang X, Nahnsen S, Nilse L, Pfeuffer J, Rosenberger G, Rurik M, Schmitt U, Veit J, Walzer M, Wojnar D, Wolski , Schilling O, Choudhary JS, Malmström L, Aebersold R, Reinert K, Kohlbacher O (2016). “OpenMS: flexible open-source software platform mass spectrometry data analysis.” Nature Methods, 13(9), 741--748. doi:10.1038/nmeth.3959 .","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_qPeaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","title":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","text":"yet implemented.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_qPeaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","text":"","code":"Settings_find_features_qPeaks()  # S3 method for Settings_find_features_qPeaks validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_qPeaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","text":"x Settings_find_features_qPeaks S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_qPeaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","text":"X.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_qPeaks.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_features_qPeaks — Settings_find_features_qPeaks","text":"validate(Settings_find_features_qPeaks): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"Settings finding features (.e., chromatographic peaks) mzML/mzXML files using package xcms (version 3) algorithm centWave. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"","code":"Settings_find_features_xcms3_centwave(   ppm = 12,   peakwidth = c(5, 60),   snthresh = 15,   prefilter = c(5, 1500),   mzCenterFun = \"wMean\",   integrate = 1,   mzdiff = -2e-04,   fitgauss = TRUE,   noise = 500,   verboseColumns = TRUE,   firstBaselineCheck = FALSE,   extendLengthMSW = FALSE )  # S3 method for Settings_find_features_xcms3_centwave validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"ppm numeric(1) defining maximal tolerated m/z deviation consecutive scans parts per million (ppm) initial ROI definition. peakwidth numeric(2) expected approximate feature width chromatographic space. Given range (min, max) seconds. snthresh numeric(1) defining signal noise ratio cutoff. prefilter numeric(2): c(k, ) specifying prefilter step first analysis step (ROI detection). Mass traces retained contain least k peaks intensity >= . mzCenterFun Name function calculate m/z center chromatographic peak (feature). Allowed : \"wMean\": intensity weighted mean peak's m/z values, \"mean\": mean peak's m/z values, \"apex\": use m/z value peak apex, \"wMeanApex3\": intensity weighted mean m/z value peak apex m/z values left right \"meanApex3\": mean m/z value peak apex m/z values left right . integrate Integration method. integrate = 1 peak limits found descent mexican hat filtered data, integrate = 2 descent done real data. latter method accurate prone noise, former robust, less exact. mzdiff numeric(1) representing minimum difference m/z dimension required peaks overlapping retention times; can negative allow overlap. peak post-processing, peaks defined overlapping reduced one peak largest signal. fitgauss logical(1) whether Gaussian fitted peak. affects mostly retention time position peak. noise numeric(1) allowing set minimum intensity required centroids considered first analysis step (centroids intensity < noise omitted ROI detection). verboseColumns logical(1) whether additional peak meta data columns returned. firstBaselineCheck logical(1). TRUE continuous data within regions interest checked first baseline. extendLengthMSW Option force centWave use scales running centWave rather truncating EIC length. Uses \"open\" method extend EIC integer base-2 length prior passed convolve rather default \"reflect\" method. See https://github.com/sneumann/xcms/issues/445 information. x Settings_find_features_xcms3_centwave S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"ProcessingSettings S3 class object subclass Settings_find_features_xcms3_centwave.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"See findFeaturesXCMS3 function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"validate(Settings_find_features_xcms3_centwave): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_centwave.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_find_features_xcms3_centwave — Settings_find_features_xcms3_centwave","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Smith, C.., Want, E.J., O'Maille, G., Abagyan,R., Siuzdak, G. (2006). “XCMS: Processing mass spectrometry data metabolite profiling using nonlinear peak alignment, matching identification.” Analytical Chemistry, 78, 779--787. Tautenhahn R, Boettcher C, Neumann S (2008). “Highly sensitive feature detection high resolution LC/MS.” BMC Bioinformatics, 9, 504. Benton HP, Want EJ, Ebbels TMD (2010). “Correction mass calibration gaps liquid chromatography-mass spectrometry metabolomics data.” BIOINFORMATICS, 26, 2488.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"Settings finding features (.e., chromatographic peaks) mzML/mzXML files using package xcms (version 3) algorithm MatchedFilter, optimal/preferred low resolution LC-MS data. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"","code":"Settings_find_features_xcms3_matchedfilter(   binSize = 0.5,   impute = \"none\",   baseValue = 0,   distance = 0,   fwhm = 30,   max = 5,   snthresh = 20,   steps = 2,   mzdiff = 0.5,   index = FALSE )  # S3 method for Settings_find_features_xcms3_matchedfilter validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"binSize numeric(1) specifying width bins/slices m/z dimension. impute Character string specifying method used missing value imputation. Allowed values \"none\" (linear interpolation), \"lin\" (linear interpolation), \"linbase\" (linear interpolation within certain bin-neighborhood) \"intlin\". baseValue base value empty elements set. considered impute \"linbase\" corresponds profBinLinBase's baselevel argument. distance impute \"linbase\": number non-empty neighboring element empty element considered linear interpolation. See details section information. fwhm numeric(1) specifying full width half maximum matched filtration gaussian model peak. used calculate actual sigma, see . max numeric(1) representing maximum number peaks expected/identified per slice. snthresh numeric(1) defining signal noise ratio cutoff. steps numeric(1) defining number bins merged filtration (.e. number neighboring bins joined slice filtration peak detection performed). mzdiff numeric(1) representing minimum difference m/z dimension required peaks overlapping retention times; can negative allow overlap. peak post-processing, peaks defined overlapping reduced one peak largest signal. index logical(1) specifying whether indicies returned instead values m/z retention times. x Settings_find_features_xcms3_matchedfilter S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"ProcessingSettings S3 class object subclass Settings_find_features_xcms3_matchedfilter.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"See findFeaturesXCMS3 function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"validate(Settings_find_features_xcms3_matchedfilter): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_features_xcms3_matchedfilter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_find_features_xcms3_matchedfilter — Settings_find_features_xcms3_matchedfilter","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Smith, C.., Want, E.J., O'Maille, G., Abagyan,R., Siuzdak, G. (2006). “XCMS: Processing mass spectrometry data metabolite profiling using nonlinear peak alignment, matching identification.” Analytical Chemistry, 78, 779--787. Tautenhahn R, Boettcher C, Neumann S (2008). “Highly sensitive feature detection high resolution LC/MS.” BMC Bioinformatics, 9, 504. Benton HP, Want EJ, Ebbels TMD (2010). “Correction mass calibration gaps liquid chromatography-mass spectrometry metabolomics data.” BIOINFORMATICS, 26, 2488.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_internal_standards_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","title":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","text":"Settings finding internal standards using data.frame.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_internal_standards_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","text":"","code":"Settings_find_internal_standards_StreamFind(database = NULL, ppm = 5, sec = 10)  # S3 method for Settings_find_internal_standards_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_internal_standards_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","text":"database data.frame least columns name, mass, rt indicating name, neutral monoisotopic mass retention time internal standards, respectively. ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. x Settings_find_internal_standards_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_internal_standards_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_find_internal_standards_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_find_internal_standards_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_find_internal_standards_StreamFind — Settings_find_internal_standards_StreamFind","text":"validate(Settings_find_internal_standards_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_group_features_openms — Settings_group_features_openms","title":"Settings_group_features_openms — Settings_group_features_openms","text":"Settings grouping features (.e., chromatographic peaks) mzML/mzXML files using OpenMS (https://abibuilder.cs.uni-tuebingen.de/archive/openms/) software algorithm FeatureLinkerUnlabeled. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_group_features_openms — Settings_group_features_openms","text":"","code":"Settings_group_features_openms(   rtalign = FALSE,   QT = FALSE,   maxAlignRT = 5,   maxAlignMZ = 0.008,   maxGroupRT = 5,   maxGroupMZ = 0.008,   extraOptsRT = NULL,   extraOptsGroup = NULL,   verbose = FALSE )  # S3 method for Settings_group_features_openms validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_group_features_openms — Settings_group_features_openms","text":"rtalign Logical length one. Set TRUE enable retention time alignment. QT Logical length one. TRUE FeatureLinkerUnlabeledQT used instead FeatureLinkerUnlabeled grouping features. maxAlignRT Numeric length one. Maximum retention time (seconds) feature pairing performing retention time alignment. maxAlignMZ Numeric length one. Maximum m/z (Da) feature pairing performing retention time alignment. maxGroupRT Numeric length one. Maximum retention time (seconds) feature pairing performing grouping. maxGroupMZ Numeric length one. Maximum m/z (Da) feature pairing performing grouping. extraOptsRT Named list containing extra options passed MapAlignerPoseClustering. extraOptsGroup Named list containing extra options passed FeatureLinkerUnlabeledQT/FeatureLinkerUnlabeled. verbose Logical length one. TRUE adds processing information console. x Settings_group_features_openms S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_group_features_openms — Settings_group_features_openms","text":"ProcessingSettings S3 class object subclass Settings_group_features_openms.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_group_features_openms — Settings_group_features_openms","text":"See groupFeaturesOpenMS function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_group_features_openms — Settings_group_features_openms","text":"validate(Settings_group_features_openms): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_openms.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_group_features_openms — Settings_group_features_openms","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Röst HL, Sachsenberg T, Aiche S, Bielow C, Weisser H, Aicheler F, Andreotti S, Ehrlich H, Gutenbrunner P, Kenar E, Liang X, Nahnsen S, Nilse L, Pfeuffer J, Rosenberger G, Rurik M, Schmitt U, Veit J, Walzer M, Wojnar D, Wolski , Schilling O, Choudhary JS, Malmström L, Aebersold R, Reinert K, Kohlbacher O (2016). “OpenMS: flexible open-source software platform mass spectrometry data analysis.” Nature Methods, 13(9), 741--748. doi:10.1038/nmeth.3959 .","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"Settings grouping features (.e., chromatographic peaks) across mzML/mzXML files using package xcms (version 3) algorithm peakDensity. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"","code":"Settings_group_features_xcms3_peakdensity(   bw = 5,   minFraction = 1,   minSamples = 1,   binSize = 0.008,   maxFeatures = 100 )  # S3 method for Settings_group_features_xcms3_peakdensity validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"bw numeric(1) defining bandwidth (standard deviation smoothing kernel) used. argument passed density() method. minFraction numeric(1) defining minimum fraction analyses least one analysis replicate group features present considered feature group. minSamples numeric(1) minimum number analyses least one analysis replicate group features detected considered feature group. binSize numeric(1) defining size overlapping slices mz dimension. maxFeatures numeric(1) maximum number feature groups identified single mz slice. x Settings_group_features_xcms3_peakdensity S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"ProcessingSettings S3 class object subclass Settings_group_features_xcms3_peakdensity.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"See groupFeaturesXCMS3 function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"validate(Settings_group_features_xcms3_peakdensity): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_group_features_xcms3_peakdensity — Settings_group_features_xcms3_peakdensity","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Smith, C.., Want, E.J., O'Maille, G., Abagyan,R., Siuzdak, G. (2006). “XCMS: Processing mass spectrometry data metabolite profiling using nonlinear peak alignment, matching identification.” Analytical Chemistry, 78, 779--787. Tautenhahn R, Boettcher C, Neumann S (2008). “Highly sensitive feature detection high resolution LC/MS.” BMC Bioinformatics, 9, 504. Benton HP, Want EJ, Ebbels TMD (2010). “Correction mass calibration gaps liquid chromatography-mass spectrometry metabolomics data.” BIOINFORMATICS, 26, 2488.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"Settings aligning grouping features (.e., chromatographic peaks) across mzML/mzXML files using package xcms (version 3) algorithm peakGroups retention time alignment algorithm peakdensity grouping. function uses package patRoon background.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"","code":"Settings_group_features_xcms3_peakdensity_peakgroups(   bw = 5,   minFraction = 1,   minSamples = 1,   binSize = 0.008,   pre_bw = 5,   pre_minFraction = 1,   pre_minSamples = 1,   pre_binSize = 0.008,   maxFeatures = 100,   rtAlignMinFraction = 0.9,   extraPeaks = 1,   smooth = \"loess\",   span = 0.2,   family = \"gaussian\",   peakGroupsMatrix = matrix(nrow = 0, ncol = 0),   subset = integer(),   subsetAdjust = \"average\" )  # S3 method for Settings_group_features_xcms3_peakdensity_peakgroups validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"bw numeric(1) defining bandwidth (standard deviation smoothing kernel) used. argument passed density() method. minFraction numeric(1) defining minimum fraction analyses least one analysis replicate group features present considered feature group. minSamples numeric(1) minimum number analyses least one analysis replicate group features detected considered feature group. binSize numeric(1) defining size overlapping slices mz dimension. pre_bw bw applied retention time alignment. pre_minFraction minFraction applied retention time alignment. pre_minSamples minSamples applied retention time alignment. pre_binSize binSize applied retention time alignment. maxFeatures numeric(1) maximum number feature groups identified single mz slice. rtAlignMinFraction numeric(1) 0 1 defining minimum required fraction samples peaks peak group identified. Peak groups passing criteria aligned across samples retention times individual spectra adjusted based alignment. minFraction = 1 peak group contain peaks samples experiment. Note subset provided, specified fraction relative defined subset samples total number samples within experiment (.e. peak present specified proportion subset samples). extraPeaks numeric(1) defining maximal number additional peaks samples assigned peak group (.e. feature) retention time correction. data set 6 samples, extraPeaks = 1 uses peak groups total peak count <= 6 + 1. total peak count total number peaks assigned peak group considers also multiple peaks within sample assigned group. smooth character defining function used, interpolate corrected retention times peak groups. Either \"loess\" \"linear\". span numeric(1) defining degree smoothing (smooth = \"loess\"). parameter passed internal call loess. family character defining method used loess smoothing. Allowed values \"gaussian\" \"symmetric\".See loess information. peakGroupsMatrix optional matrix (raw) retention times peak groups alignment performed. column represents sample, row feature/peak group. matrix example returned adjustRtimePeakGroups method. subset integer indices samples within experiment alignment models estimated. Samples part subset adjusted based closest subset sample. See description details. subsetAdjust character specifying method non-subset samples adjusted. Supported options \"previous\" \"average\" (default). See description information. x Settings_group_features_xcms3_peakdensity_peakgroups S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"ProcessingSettings S3 class object subclass Settings_group_features_xcms3_peakdensity_peakgroups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"See groupFeaturesXCMS3 function patRoon package information requirements.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"validate(Settings_group_features_xcms3_peakdensity_peakgroups): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_group_features_xcms3_peakdensity_peakgroups.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Settings_group_features_xcms3_peakdensity_peakgroups — Settings_group_features_xcms3_peakdensity_peakgroups","text":"Helmus R, ter Laak TL, van Wezel AP, de Voogt P, Schymanski EL (2021). “patRoon: open source software platform environmental mass spectrometry based non-target screening.” Journal Cheminformatics, 13(1). doi:10.1186/s13321-020-00477-w . Helmus R, van de Velde B, Brunner , ter Laak TL, van Wezel AP, Schymanski EL (2022). “patRoon 2.0: Improved non-target analysis workflows including automated transformation product screening.” Journal Open Source Software, 7(71), 4029. doi:10.21105/joss.04029 . Smith, C.., Want, E.J., O'Maille, G., Abagyan,R., Siuzdak, G. (2006). “XCMS: Processing mass spectrometry data metabolite profiling using nonlinear peak alignment, matching identification.” Analytical Chemistry, 78, 779--787. Tautenhahn R, Boettcher C, Neumann S (2008). “Highly sensitive feature detection high resolution LC/MS.” BMC Bioinformatics, 9, 504. Benton HP, Want EJ, Ebbels TMD (2010). “Correction mass calibration gaps liquid chromatography-mass spectrometry metabolomics data.” BIOINFORMATICS, 26, 2488.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_eic_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","title":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","text":"Settings loading MS2 spectra feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_eic_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","text":"","code":"Settings_load_features_eic_StreamFind(   rtExpand = 120,   mzExpand = 0,   filtered = FALSE,   runParallel = TRUE )  # S3 method for Settings_load_features_eic_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_eic_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","text":"rtExpand Numeric value retention time values (seconds) expanding left right mass range. mzExpand Numeric value mass mass--charge ratio (m/z) (Da) expanding left right mass range. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. x Settings_load_features_eic_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_eic_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_load_features_eic_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_eic_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_load_features_eic_StreamFind — Settings_load_features_eic_StreamFind","text":"validate(Settings_load_features_eic_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms1_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","title":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","text":"Settings loading MS1 spectra features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms1_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","text":"","code":"Settings_load_features_ms1_StreamFind(   rtWindow = c(-2, 2),   mzWindow = c(-1, 6),   mzClust = 0.003,   presence = 0.8,   minIntensity = 250,   filtered = FALSE,   runParallel = TRUE,   verbose = FALSE )  # S3 method for Settings_load_features_ms1_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms1_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","text":"rtWindow Numeric vector length two retention time values (seconds) expanding left right retention time range. first element expands left second expands right. Note first element negative expand left. mzWindow Numeric vector length two mass mass--charge ratio (m/z) values (Da) expanding left right mass range. first element expands left second expands right. Note first element negative expand left. mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. x Settings_load_features_ms1_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms1_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_load_features_ms1_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms1_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_load_features_ms1_StreamFind — Settings_load_features_ms1_StreamFind","text":"validate(Settings_load_features_ms1_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms2_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","title":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","text":"Settings loading MS2 spectra features.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms2_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","text":"","code":"Settings_load_features_ms2_StreamFind(   isolationWindow = 1.3,   mzClust = 0.01,   presence = 0.8,   minIntensity = 0,   filtered = FALSE,   runParallel = TRUE,   verbose = FALSE )  # S3 method for Settings_load_features_ms2_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms2_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","text":"isolationWindow Numeric value isolation window (Da) applied ion isolation fragmentation acquisition tandem data (.e., MS2 data). mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. x Settings_load_features_ms2_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms2_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_load_features_ms2_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_features_ms2_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_load_features_ms2_StreamFind — Settings_load_features_ms2_StreamFind","text":"validate(Settings_load_features_ms2_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms1_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","title":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","text":"Settings loading MS1 spectra feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms1_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","text":"","code":"Settings_load_groups_ms1_StreamFind(   mzClust = 0.003,   presence = 0.8,   minIntensity = 1000,   verbose = FALSE,   filtered = FALSE,   runParallel = TRUE )  # S3 method for Settings_load_groups_ms1_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms1_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","text":"mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. x Settings_load_groups_ms1_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms1_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_load_groups_ms1_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms1_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_load_groups_ms1_StreamFind — Settings_load_groups_ms1_StreamFind","text":"validate(Settings_load_groups_ms1_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms2_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","title":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","text":"Settings loading MS2 spectra feature groups.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms2_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","text":"","code":"Settings_load_groups_ms2_StreamFind(   mzClust = 0.01,   presence = 0.8,   minIntensity = 250,   filtered = FALSE,   runParallel = TRUE,   verbose = FALSE )  # S3 method for Settings_load_groups_ms2_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms2_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","text":"mzClust Numeric value mass deviation threshold (Da) cluster mass traces. Highly dependent mass resolution MS data. presence Numeric length one required presence ratio 0 (.e., need present spectra) 1 (.e., must present spectra) traces clustering spectra. minIntensity Numeric value minimum intensity. filtered Logical. TRUE, filtered features/groups considered. runParallel Logical length one. Set TRUE parallel processing. Note parallel processing always faster due overhead. verbose Logical length one. Set TRUE output diagnostic result messages. FALSE, messages omitted. x Settings_load_groups_ms2_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms2_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_load_groups_ms2_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_load_groups_ms2_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_load_groups_ms2_StreamFind — Settings_load_groups_ms2_StreamFind","text":"validate(Settings_load_groups_ms2_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"Settings performing suspect screening using -IDENT platform.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"","code":"Settings_suspect_screening_forident(   addMS2 = FALSE,   useNeutralMass = TRUE,   path = getwd(),   name = \"feature_list\" )  # S3 method for Settings_suspect_screening_forident validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"addMS2 Logical length 1. TRUE MS2 data available, fragments pattern (.e., MS2 averaged spectra) added .txt file import -IDENT platform. Note addMS2 TRUE m/z values used instead neutral mass even useNeutralMass set TRUE. useNeutralMass Logical length 1. TRUE neutral mass available, neutral mass features/feature groups used instead m/z. path Character length 1 path save .txt file list features identification. name Character length 1 name file (without extension) saved path. x Settings_suspect_screening_forident S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"ProcessingSettings S3 class object subclass Settings_suspect_screening_forident.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"validate(Settings_suspect_screening_forident): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_forident.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Settings_suspect_screening_forident — Settings_suspect_screening_forident","text":"processing, .txt file defined name path created list features feature groups imported -IDENT platform (https://water.-ident.org/). Note log credentials needed.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_StreamFind.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","title":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","text":"Settings performing suspect screening using data.frame target compounds.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_StreamFind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","text":"","code":"Settings_suspect_screening_StreamFind(database = NULL, ppm = 4, sec = 10)  # S3 method for Settings_suspect_screening_StreamFind validate(x)"},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_StreamFind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","text":"database data.frame least columns name mass, indicating name neutral monoisotopic mass suspect targets. ppm Numeric length one mass deviation, ppm. sec Numeric length one time deviation, seconds. x Settings_suspect_screening_StreamFind S3 class object.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_StreamFind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","text":"ProcessingSettings S3 class object subclass Settings_suspect_screening_StreamFind.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/Settings_suspect_screening_StreamFind.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Settings_suspect_screening_StreamFind — Settings_suspect_screening_StreamFind","text":"validate(Settings_suspect_screening_StreamFind): Validates object structure, returning logical value length one.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/StreamFind-package.html","id":null,"dir":"Reference","previous_headings":"","what":"StreamFind: Framework and workflows for data analysis in the water cycle — StreamFind-package","title":"StreamFind: Framework and workflows for data analysis in the water cycle — StreamFind-package","text":"StreamFind R package framework spectrometric spectroscopic data processing focus environmental quality studies water cycle. StreamFind R package aims stimulate use advanced data analysis (e.g., non-target screening (NTS) statistical analysis) routine studies, promoting standardization data processing easing retrospective inclusion data.","code":""},{"path":[]},{"path":"https://odea-project.github.io/StreamFind/reference/StreamFind-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"StreamFind: Framework and workflows for data analysis in the water cycle — StreamFind-package","text":"Maintainer: Ricardo Cunha cunha@iuta.de (ORCID)","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"Trim spectra mzML mzXML files based time (seconds)  m/z (Da) ranges, using mzR package.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"","code":"trim_ms_files_spectra(   files,   MS1 = TRUE,   MS2 = TRUE,   rtWindow = NULL,   mzWindow = NULL,   mzWindow_ms2 = NULL,   intensityThreshold = NULL,   copyMetadata = TRUE,   path = NULL,   prefix = \"trim_\" )"},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"files character vector full path file/s trim. MS1 Set TRUE trimming MS level 1 data. MS2 Set TRUE trimming MS level 2 data. rtWindow numeric vector length 2 minimum maximum time range trim files, seconds. mzWindow numeric vector length 2 minimum maximum m/z range trim files, Da. mzWindow_ms2 numeric vector length 2 minimum maximum m/z range trim MS2 data files, Da. NULL MS2 TRUE mzWindow argument used instead. intensityThreshold numeric vector length one minimum intensity threshold. Traces given intensity threshold removed. length two vector given, first value applied MS1 data second MS2 data. copyMetadata Set TRUE copy metadata original file. path character string path save files. NULL, file directory used instead. prefix character string name prefix new trimmed file.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"Saves trimmed mzML mzXML files given path, adding pre-defined prefix file name.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"giving paths make sure single backslash changed double backslash single forward slash.","code":""},{"path":"https://odea-project.github.io/StreamFind/reference/trim_ms_files_spectra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to trim spectra in mzML or mzXML files — trim_ms_files_spectra","text":"Pedrioli PGA, Eng JK, Hubley R, Vogelzang M, Deutsch EW, Raught B, Pratt B, Nilsson E, Angeletti RH, Apweiler R, Cheung K, Costello CE, Hermjakob H, Huang S, Julian RK, Kapp E, McComb , Oliver SG, Omenn G, Paton NW, Simpson R, Smith R, Taylor CF, Zhu W, Aebersold R (2004). “common open representation mass spectrometry data application proteomics research.” Nat Biotechnol, 22(11), 1459--1466. doi:10.1038/nbt1031 , http://www.ncbi.nlm.nih.gov/pubmed/15529173. Keller , Eng J, Zhang N, Li X, Aebersold R (2005). “uniform proteomics MS/MS analysis platform utilizing open XML file formats.” Mol Syst Biol. Martens L, Chambers M, Sturm M, Kessner D, Levander F, Shofstahl J, Tang WH, Rompp , Neumann S, Pizarro AD, Montecchi-Palazzi L, Tasman N, Coleman M, Reisinger F, Souda P, Hermjakob H, Binz P, Deutsch EW (2010). “mzML - Community Standard Mass Spectrometry Data.” Mol Cell Proteomics. doi:10.1074/mcp.R110.000133 , http://www.ncbi.nlm.nih.gov/pubmed/20716697. Chambers, C. M, Maclean, Brendan, Burke, Robert, Amodei, Dario, Ruderman, L. D, Neumann, Steffen, Gatto, Laurent, Fischer, Bernd, Pratt, Brian, Egertson, Jarrett, Hoff, Katherine, Kessner, Darren, Tasman, Natalie, Shulman, Nicholas, Frewen, Barbara, Baker, . T, Brusniak, Mi-Youn, Paulse, Christopher, Creasy, David, Flashner, Lisa, Kani, Kian, Moulding, Chris, Seymour, L. S, Nuwaysir, M. L, Lefebvre, Brent, Kuhlmann, Frank, Roark, Joe, Rainer, Paape, Detlev, Suckau, Hemenway, Tina, Huhmer, Andreas, Langridge, James, Connolly, Brian, Chadick, Trey, Holly, Krisztina, Eckels, Josh, Deutsch, W. E, Moritz, L. R, Katz, E. J, Agus, B. D, MacCoss, Michael, Tabb, L. D, Mallick, Parag (2012). “cross-platform toolkit mass spectrometry proteomics.” Nat Biotech, 30(10), 918--920. doi:10.1038/nbt.2377 , http://dx.doi.org/10.1038/nbt.2377.","code":""}]
