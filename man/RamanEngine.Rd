% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/engine_RamanEngine.R
\name{RamanEngine}
\alias{RamanEngine}
\title{\strong{RamanEngine} R6 class and methods}
\description{
The \emph{RamanEngine} R6 class is a framework for parsing, processing, inspecting and storing Raman spectroscopic data.
}
\section{Super class}{
\code{\link[StreamFind:CoreEngine]{StreamFind::CoreEngine}} -> \code{RamanEngine}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{raw_spectra}}{Named list of raw spectra \code{data.table} objects for each analysis.}

\item{\code{spectra}}{Named list of spectra \code{data.table} objects for each analysis or replicate.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RamanEngine-new}{\code{RamanEngine$new()}}
\item \href{#method-RamanEngine-get_analysis_names}{\code{RamanEngine$get_analysis_names()}}
\item \href{#method-RamanEngine-get_replicate_names}{\code{RamanEngine$get_replicate_names()}}
\item \href{#method-RamanEngine-get_blank_names}{\code{RamanEngine$get_blank_names()}}
\item \href{#method-RamanEngine-get_files}{\code{RamanEngine$get_files()}}
\item \href{#method-RamanEngine-get_overview}{\code{RamanEngine$get_overview()}}
\item \href{#method-RamanEngine-get_spectra}{\code{RamanEngine$get_spectra()}}
\item \href{#method-RamanEngine-get_spectra_matrix}{\code{RamanEngine$get_spectra_matrix()}}
\item \href{#method-RamanEngine-add_analyses}{\code{RamanEngine$add_analyses()}}
\item \href{#method-RamanEngine-remove_analyses}{\code{RamanEngine$remove_analyses()}}
\item \href{#method-RamanEngine-has_spectra}{\code{RamanEngine$has_spectra()}}
\item \href{#method-RamanEngine-plot_spectra}{\code{RamanEngine$plot_spectra()}}
\item \href{#method-RamanEngine-plot_spectra_baseline}{\code{RamanEngine$plot_spectra_baseline()}}
\item \href{#method-RamanEngine-plot_spectra_peaks}{\code{RamanEngine$plot_spectra_peaks()}}
\item \href{#method-RamanEngine-plot_chromatograms}{\code{RamanEngine$plot_chromatograms()}}
\item \href{#method-RamanEngine-plot_chromatograms_peaks}{\code{RamanEngine$plot_chromatograms_peaks()}}
\item \href{#method-RamanEngine-clone}{\code{RamanEngine$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="export"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-export'><code>StreamFind::CoreEngine$export()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="export_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-export_analyses'><code>StreamFind::CoreEngine$export_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="export_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-export_headers'><code>StreamFind::CoreEngine$export_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="export_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-export_workflow'><code>StreamFind::CoreEngine$export_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_analyses'><code>StreamFind::CoreEngine$has_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_results"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_results'><code>StreamFind::CoreEngine$has_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_settings'><code>StreamFind::CoreEngine$has_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_analyses'><code>StreamFind::CoreEngine$import_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_headers'><code>StreamFind::CoreEngine$import_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_workflow'><code>StreamFind::CoreEngine$import_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="load"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-load'><code>StreamFind::CoreEngine$load()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print'><code>StreamFind::CoreEngine$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_analyses'><code>StreamFind::CoreEngine$print_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_headers'><code>StreamFind::CoreEngine$print_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_workflow'><code>StreamFind::CoreEngine$print_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="run"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-run'><code>StreamFind::CoreEngine$run()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="run_app"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-run_app'><code>StreamFind::CoreEngine$run_app()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="run_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-run_workflow'><code>StreamFind::CoreEngine$run_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="save"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-save'><code>StreamFind::CoreEngine$save()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-new"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-new}{}}}
\subsection{Method \code{new()}}{
Creates an R6 class \emph{RamanEngine}. Child of \emph{CoreEngine} R6 class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$new(file = NULL, headers = NULL, workflow = NULL, analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{Character of length one with the full path to the \code{sqlite} save file of the engine.}

\item{\code{headers}}{A \code{ProjectHeaders} S7 class object.}

\item{\code{workflow}}{A \code{Workflow} S7 class object.}

\item{\code{analyses}}{A \code{RamanAnalyses} S7 class object or a \verb{character vector} with full file paths to raman files or
a \code{data.frame} as described in \code{?RamanAnalyses}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_analysis_names"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_analysis_names}{}}}
\subsection{Method \code{get_analysis_names()}}{
Gets the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_analysis_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_replicate_names}{}}}
\subsection{Method \code{get_replicate_names()}}{
Gets the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_replicate_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_blank_names}{}}}
\subsection{Method \code{get_blank_names()}}{
Gets the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_blank_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_files"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_files}{}}}
\subsection{Method \code{get_files()}}{
Gets the full file paths of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_files(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_overview"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_overview}{}}}
\subsection{Method \code{get_overview()}}{
Gets an overview data.frame of all the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_overview()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_spectra}{}}}
\subsection{Method \code{get_spectra()}}{
Gets a \code{data.table} with spectra from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_spectra(
  analyses = NULL,
  rt = NULL,
  shift = NULL,
  minIntensity = 0,
  useRawData = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{rt}}{Numeric of length two with the minimum and maximum retention time, in seconds.}

\item{\code{shift}}{Numeric of length two with the minimum and maximum shift, in cm\if{html}{\out{<sup>}}-1\if{html}{\out{</sup>}}.}

\item{\code{minIntensity}}{Numeric (length 1) with the minimum intensity.}

\item{\code{useRawData}}{Logical of length one. Set to \code{TRUE} for parsing raw spectra not spectra results/processed.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-get_spectra_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-get_spectra_matrix}{}}}
\subsection{Method \code{get_spectra_matrix()}}{
Gets a matrix with spectra from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$get_spectra_matrix(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-add_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-add_analyses}{}}}
\subsection{Method \code{add_analyses()}}{
Adds analyses based on asc files. Note that when adding new files, any existing results are removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$add_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A RamanAnalysis S3 class object or a list with RamanAnalysis S3 class objects as
elements (see \code{?RamanAnalysis} for more information) or a character vector with with full paths of \strong{.asc} files
from Raman analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-remove_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-remove_analyses}{}}}
\subsection{Method \code{remove_analyses()}}{
Removes analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$remove_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-has_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-has_spectra}{}}}
\subsection{Method \code{has_spectra()}}{
Checks if there are spectra results, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$has_spectra()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-plot_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-plot_spectra}{}}}
\subsection{Method \code{plot_spectra()}}{
Plots spectra for given \emph{RamanAnalyses}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$plot_spectra(
  analyses = NULL,
  rt = NULL,
  shift = NULL,
  minIntensity = 0,
  useRawData = FALSE,
  xVal = "shift",
  xLab = NULL,
  yLab = NULL,
  title = NULL,
  cex = 0.6,
  showLegend = TRUE,
  colorBy = "analyses",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{rt}}{Numeric of length two with the minimum and maximum retention time, in seconds.}

\item{\code{shift}}{Numeric of length two with the minimum and maximum shift, in cm\if{html}{\out{<sup>}}-1\if{html}{\out{</sup>}}.}

\item{\code{minIntensity}}{Numeric (length 1) with the minimum intensity.}

\item{\code{useRawData}}{Logical of length one. Set to \code{TRUE} for parsing raw spectra not spectra results/processed.}

\item{\code{xVal}}{Character of length one. Possible are "rt" or "shift" for using the retention time or the shift
as x axis, respectively.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{title}}{A string with the title.}

\item{\code{cex}}{Numeric (length 1) defining the scale of the legend for non interactive plotting.}

\item{\code{showLegend}}{Logical (length 1). Set to \code{TRUE} to show legend.}

\item{\code{colorBy}}{A string defining how to legend the plot. Possible values are \code{analyses}, \code{targets} (the default) or
\code{replicates}.}

\item{\code{interactive}}{Logical (length 1). When \code{TRUE}, the data is plotted interactively using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-plot_spectra_baseline"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-plot_spectra_baseline}{}}}
\subsection{Method \code{plot_spectra_baseline()}}{
Plots spectra corrected for given \emph{RamanAnalyses}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$plot_spectra_baseline(
  analyses = NULL,
  rt = NULL,
  shift = NULL,
  minIntensity = 0,
  xVal = "shift",
  xLab = NULL,
  yLab = NULL,
  title = NULL,
  cex = 0.6,
  showLegend = TRUE,
  colorBy = "analyses",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{rt}}{Numeric of length two with the minimum and maximum retention time, in seconds.}

\item{\code{shift}}{Numeric of length two with the minimum and maximum shift, in cm\if{html}{\out{<sup>}}-1\if{html}{\out{</sup>}}.}

\item{\code{minIntensity}}{Numeric (length 1) with the minimum intensity.}

\item{\code{xVal}}{Character of length one. Possible are "rt" or "shift" for using the retention time or the shift
as x axis, respectively.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{title}}{A string with the title.}

\item{\code{cex}}{Numeric (length 1) defining the scale of the legend for non interactive plotting.}

\item{\code{showLegend}}{Logical (length 1). Set to \code{TRUE} to show legend.}

\item{\code{colorBy}}{A string defining how to legend the plot. Possible values are \code{analyses}, \code{targets} (the default) or
\code{replicates}.}

\item{\code{interactive}}{Logical (length 1). When \code{TRUE}, the data is plotted interactively using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-plot_spectra_peaks"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-plot_spectra_peaks}{}}}
\subsection{Method \code{plot_spectra_peaks()}}{
Plots peaks from spectra from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$plot_spectra_peaks(
  analyses = NULL,
  legendNames = NULL,
  title = NULL,
  colorBy = "analyses",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  xLab = NULL,
  yLab = NULL,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{legendNames}}{A character vector with the same length as the targets or \code{TRUE} or \code{FALSE} for using the name in
the added targets as legend of the plot.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string defining how to legend the plot. Possible values are \code{analyses}, \code{targets} (the default) or
\code{replicates}.}

\item{\code{showLegend}}{Logical (length 1). Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x} limits of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{y} limits of the plot.}

\item{\code{cex}}{Numeric (length 1) defining the scale of the legend for non interactive plotting.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{interactive}}{Logical (length 1). When \code{TRUE}, the data is plotted interactively using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-plot_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-plot_chromatograms}{}}}
\subsection{Method \code{plot_chromatograms()}}{
Plots chromatograms from analyses with spectra coupled to LC.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$plot_chromatograms(
  analyses = NULL,
  rt = NULL,
  shift = NULL,
  minIntensity = 0,
  useRawData = FALSE,
  xLab = NULL,
  yLab = NULL,
  title = NULL,
  cex = 0.6,
  showLegend = TRUE,
  colorBy = "analyses",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{rt}}{Numeric of length two with the minimum and maximum retention time, in seconds.}

\item{\code{shift}}{Numeric of length two with the minimum and maximum shift, in cm\if{html}{\out{<sup>}}-1\if{html}{\out{</sup>}}.}

\item{\code{minIntensity}}{Numeric (length 1) with the minimum intensity.}

\item{\code{useRawData}}{Logical of length one. Set to \code{TRUE} for parsing raw spectra not spectra results/processed.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{title}}{A string with the title.}

\item{\code{cex}}{Numeric (length 1) defining the scale of the legend for non interactive plotting.}

\item{\code{showLegend}}{Logical (length 1). Set to \code{TRUE} to show legend.}

\item{\code{colorBy}}{A string defining how to legend the plot. Possible values are \code{analyses}, \code{targets} (the default) or
\code{replicates}.}

\item{\code{interactive}}{Logical (length 1). When \code{TRUE}, the data is plotted interactively using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-plot_chromatograms_peaks"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-plot_chromatograms_peaks}{}}}
\subsection{Method \code{plot_chromatograms_peaks()}}{
Plots peaks from chromatograms from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$plot_chromatograms_peaks(
  analyses = NULL,
  chromatograms = NULL,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  xLab = NULL,
  yLab = NULL,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{chromatograms}}{A character or integer vector with the ID (i.e. name) or the index of the chromatograms.}

\item{\code{legendNames}}{A character vector with the same length as the targets or \code{TRUE} or \code{FALSE} for using the name in
the added targets as legend of the plot.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string defining how to legend the plot. Possible values are \code{analyses}, \code{targets} (the default) or
\code{replicates}.}

\item{\code{showLegend}}{Logical (length 1). Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x} limits of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{y} limits of the plot.}

\item{\code{cex}}{Numeric (length 1) defining the scale of the legend for non interactive plotting.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{interactive}}{Logical (length 1). When \code{TRUE}, the data is plotted interactively using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RamanEngine-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RamanEngine-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RamanEngine$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
