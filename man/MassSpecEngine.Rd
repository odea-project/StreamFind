% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_R6_MassSpecEngine.R
\name{MassSpecEngine}
\alias{MassSpecEngine}
\title{\strong{MassSpecEngine} R6 class and methods}
\description{
The MassSpecEngine R6 class is a framework for parsing, processing, inspecting and storing
mass spectrometry (MS) data. The MassSpecEngine is using \href{https://github.com/rickhelmus/patRoon}{patRoon} for
assembly of Non-Target Screening data processing workflows.
}
\references{
\insertRef{patroon01}{StreamFind}

\insertRef{patroon02}{StreamFind}

\insertRef{pugixml01}{StreamFind}
}
\section{Super class}{
\code{\link[StreamFind:CoreEngine]{StreamFind::CoreEngine}} -> \code{MassSpecEngine}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{help}}{(\code{list()})\cr
List of function elements to access specific reference help pages.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{analysisInfo}}{The analysisInfo data.frame with the list of analyses.}

\item{\code{features}}{The features S4 class object from patRoon.}

\item{\code{filtered_features}}{The filtered features as list of data.table objects for each analysis.}

\item{\code{feature_list}}{List of features data.table objects for each analysis.}

\item{\code{featureGroups}}{The featureGroups S4 class object from patRoon.}

\item{\code{MSPeakLists}}{The MSPeakLists S4 class object from patRoon.}

\item{\code{formulas}}{The formulas S4 class object from patRoon.}

\item{\code{compounds}}{The compounds S4 class object from patRoon.}

\item{\code{chromatograms}}{\code{data.table} with processed chromatograms for each analyses.}

\item{\code{chromatograms_peaks}}{\code{data.table} with integrated peaks from chromatograms for each analyses.}

\item{\code{spectra}}{List of spectra \code{data.table} objects for each analysis.}

\item{\code{averaged_spectra}}{List of averaged spectra \code{data.table} each analysis/replicate.}

\item{\code{spectra_peaks}}{\code{data.table} with integrated spectra peaks for each analysis.}

\item{\code{spectra_charges}}{\code{data.table} with charges assigned to spectra for each analyses.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MassSpecEngine-new}{\code{MassSpecEngine$new()}}
\item \href{#method-MassSpecEngine-get_overview}{\code{MassSpecEngine$get_overview()}}
\item \href{#method-MassSpecEngine-get_time_stamps}{\code{MassSpecEngine$get_time_stamps()}}
\item \href{#method-MassSpecEngine-get_spectra_number}{\code{MassSpecEngine$get_spectra_number()}}
\item \href{#method-MassSpecEngine-get_spectra_mode}{\code{MassSpecEngine$get_spectra_mode()}}
\item \href{#method-MassSpecEngine-get_spectra_levels}{\code{MassSpecEngine$get_spectra_levels()}}
\item \href{#method-MassSpecEngine-get_mz_low}{\code{MassSpecEngine$get_mz_low()}}
\item \href{#method-MassSpecEngine-get_mz_high}{\code{MassSpecEngine$get_mz_high()}}
\item \href{#method-MassSpecEngine-get_rt_start}{\code{MassSpecEngine$get_rt_start()}}
\item \href{#method-MassSpecEngine-get_rt_end}{\code{MassSpecEngine$get_rt_end()}}
\item \href{#method-MassSpecEngine-get_polarities}{\code{MassSpecEngine$get_polarities()}}
\item \href{#method-MassSpecEngine-get_chromatograms_number}{\code{MassSpecEngine$get_chromatograms_number()}}
\item \href{#method-MassSpecEngine-get_instrument_info}{\code{MassSpecEngine$get_instrument_info()}}
\item \href{#method-MassSpecEngine-get_software_info}{\code{MassSpecEngine$get_software_info()}}
\item \href{#method-MassSpecEngine-get_run}{\code{MassSpecEngine$get_run()}}
\item \href{#method-MassSpecEngine-get_tic}{\code{MassSpecEngine$get_tic()}}
\item \href{#method-MassSpecEngine-get_bpc}{\code{MassSpecEngine$get_bpc()}}
\item \href{#method-MassSpecEngine-get_metadata}{\code{MassSpecEngine$get_metadata()}}
\item \href{#method-MassSpecEngine-get_spectra}{\code{MassSpecEngine$get_spectra()}}
\item \href{#method-MassSpecEngine-get_chromatograms}{\code{MassSpecEngine$get_chromatograms()}}
\item \href{#method-MassSpecEngine-get_eic}{\code{MassSpecEngine$get_eic()}}
\item \href{#method-MassSpecEngine-get_ms1}{\code{MassSpecEngine$get_ms1()}}
\item \href{#method-MassSpecEngine-get_ms2}{\code{MassSpecEngine$get_ms2()}}
\item \href{#method-MassSpecEngine-get_feature_list}{\code{MassSpecEngine$get_feature_list()}}
\item \href{#method-MassSpecEngine-get_features}{\code{MassSpecEngine$get_features()}}
\item \href{#method-MassSpecEngine-get_features_eic}{\code{MassSpecEngine$get_features_eic()}}
\item \href{#method-MassSpecEngine-get_features_ms1}{\code{MassSpecEngine$get_features_ms1()}}
\item \href{#method-MassSpecEngine-get_features_ms2}{\code{MassSpecEngine$get_features_ms2()}}
\item \href{#method-MassSpecEngine-get_groups}{\code{MassSpecEngine$get_groups()}}
\item \href{#method-MassSpecEngine-get_groups_ms1}{\code{MassSpecEngine$get_groups_ms1()}}
\item \href{#method-MassSpecEngine-get_groups_ms2}{\code{MassSpecEngine$get_groups_ms2()}}
\item \href{#method-MassSpecEngine-get_MSPeakLists}{\code{MassSpecEngine$get_MSPeakLists()}}
\item \href{#method-MassSpecEngine-get_isotopes}{\code{MassSpecEngine$get_isotopes()}}
\item \href{#method-MassSpecEngine-get_suspects}{\code{MassSpecEngine$get_suspects()}}
\item \href{#method-MassSpecEngine-get_internal_standards}{\code{MassSpecEngine$get_internal_standards()}}
\item \href{#method-MassSpecEngine-add_analyses}{\code{MassSpecEngine$add_analyses()}}
\item \href{#method-MassSpecEngine-add_files}{\code{MassSpecEngine$add_files()}}
\item \href{#method-MassSpecEngine-add_replicate_names}{\code{MassSpecEngine$add_replicate_names()}}
\item \href{#method-MassSpecEngine-add_blank_names}{\code{MassSpecEngine$add_blank_names()}}
\item \href{#method-MassSpecEngine-add_spectra}{\code{MassSpecEngine$add_spectra()}}
\item \href{#method-MassSpecEngine-add_results}{\code{MassSpecEngine$add_results()}}
\item \href{#method-MassSpecEngine-load_spectra}{\code{MassSpecEngine$load_spectra()}}
\item \href{#method-MassSpecEngine-load_chromatograms}{\code{MassSpecEngine$load_chromatograms()}}
\item \href{#method-MassSpecEngine-remove_analyses}{\code{MassSpecEngine$remove_analyses()}}
\item \href{#method-MassSpecEngine-remove_features}{\code{MassSpecEngine$remove_features()}}
\item \href{#method-MassSpecEngine-remove_features_ms1}{\code{MassSpecEngine$remove_features_ms1()}}
\item \href{#method-MassSpecEngine-remove_features_ms2}{\code{MassSpecEngine$remove_features_ms2()}}
\item \href{#method-MassSpecEngine-remove_groups}{\code{MassSpecEngine$remove_groups()}}
\item \href{#method-MassSpecEngine-subset_analyses}{\code{MassSpecEngine$subset_analyses()}}
\item \href{#method-MassSpecEngine-subset_features}{\code{MassSpecEngine$subset_features()}}
\item \href{#method-MassSpecEngine-subset_groups}{\code{MassSpecEngine$subset_groups()}}
\item \href{#method-MassSpecEngine-has_ion_mobility}{\code{MassSpecEngine$has_ion_mobility()}}
\item \href{#method-MassSpecEngine-has_loaded_spectra}{\code{MassSpecEngine$has_loaded_spectra()}}
\item \href{#method-MassSpecEngine-has_loaded_chromatograms}{\code{MassSpecEngine$has_loaded_chromatograms()}}
\item \href{#method-MassSpecEngine-has_features}{\code{MassSpecEngine$has_features()}}
\item \href{#method-MassSpecEngine-has_groups}{\code{MassSpecEngine$has_groups()}}
\item \href{#method-MassSpecEngine-has_loaded_features_ms1}{\code{MassSpecEngine$has_loaded_features_ms1()}}
\item \href{#method-MassSpecEngine-has_loaded_features_ms2}{\code{MassSpecEngine$has_loaded_features_ms2()}}
\item \href{#method-MassSpecEngine-has_features_eic}{\code{MassSpecEngine$has_features_eic()}}
\item \href{#method-MassSpecEngine-has_suspects}{\code{MassSpecEngine$has_suspects()}}
\item \href{#method-MassSpecEngine-has_MSPeakLists}{\code{MassSpecEngine$has_MSPeakLists()}}
\item \href{#method-MassSpecEngine-has_formulas}{\code{MassSpecEngine$has_formulas()}}
\item \href{#method-MassSpecEngine-has_compounds}{\code{MassSpecEngine$has_compounds()}}
\item \href{#method-MassSpecEngine-has_chromatograms}{\code{MassSpecEngine$has_chromatograms()}}
\item \href{#method-MassSpecEngine-has_chromatograms_peaks}{\code{MassSpecEngine$has_chromatograms_peaks()}}
\item \href{#method-MassSpecEngine-has_spectra}{\code{MassSpecEngine$has_spectra()}}
\item \href{#method-MassSpecEngine-has_spectra_peaks}{\code{MassSpecEngine$has_spectra_peaks()}}
\item \href{#method-MassSpecEngine-has_averaged_spectra}{\code{MassSpecEngine$has_averaged_spectra()}}
\item \href{#method-MassSpecEngine-has_spectra_charges}{\code{MassSpecEngine$has_spectra_charges()}}
\item \href{#method-MassSpecEngine-plot_raw_spectra}{\code{MassSpecEngine$plot_raw_spectra()}}
\item \href{#method-MassSpecEngine-plot_spectra}{\code{MassSpecEngine$plot_spectra()}}
\item \href{#method-MassSpecEngine-plot_chromatograms}{\code{MassSpecEngine$plot_chromatograms()}}
\item \href{#method-MassSpecEngine-plot_xic}{\code{MassSpecEngine$plot_xic()}}
\item \href{#method-MassSpecEngine-plot_eic}{\code{MassSpecEngine$plot_eic()}}
\item \href{#method-MassSpecEngine-plot_tic}{\code{MassSpecEngine$plot_tic()}}
\item \href{#method-MassSpecEngine-plot_bpc}{\code{MassSpecEngine$plot_bpc()}}
\item \href{#method-MassSpecEngine-plot_ms2}{\code{MassSpecEngine$plot_ms2()}}
\item \href{#method-MassSpecEngine-plot_ms1}{\code{MassSpecEngine$plot_ms1()}}
\item \href{#method-MassSpecEngine-plot_features}{\code{MassSpecEngine$plot_features()}}
\item \href{#method-MassSpecEngine-map_features}{\code{MassSpecEngine$map_features()}}
\item \href{#method-MassSpecEngine-plot_features_ms1}{\code{MassSpecEngine$plot_features_ms1()}}
\item \href{#method-MassSpecEngine-plot_features_ms2}{\code{MassSpecEngine$plot_features_ms2()}}
\item \href{#method-MassSpecEngine-plot_alignment}{\code{MassSpecEngine$plot_alignment()}}
\item \href{#method-MassSpecEngine-plot_groups}{\code{MassSpecEngine$plot_groups()}}
\item \href{#method-MassSpecEngine-plot_groups_ms1}{\code{MassSpecEngine$plot_groups_ms1()}}
\item \href{#method-MassSpecEngine-plot_groups_ms2}{\code{MassSpecEngine$plot_groups_ms2()}}
\item \href{#method-MassSpecEngine-plot_groups_overview}{\code{MassSpecEngine$plot_groups_overview()}}
\item \href{#method-MassSpecEngine-plot_internal_standards_qc}{\code{MassSpecEngine$plot_internal_standards_qc()}}
\item \href{#method-MassSpecEngine-plot_suspects}{\code{MassSpecEngine$plot_suspects()}}
\item \href{#method-MassSpecEngine-map_isotopes}{\code{MassSpecEngine$map_isotopes()}}
\item \href{#method-MassSpecEngine-plot_spectra_charges}{\code{MassSpecEngine$plot_spectra_charges()}}
\item \href{#method-MassSpecEngine-load_features_eic}{\code{MassSpecEngine$load_features_eic()}}
\item \href{#method-MassSpecEngine-load_features_ms1}{\code{MassSpecEngine$load_features_ms1()}}
\item \href{#method-MassSpecEngine-load_features_ms2}{\code{MassSpecEngine$load_features_ms2()}}
\item \href{#method-MassSpecEngine-load_MSPeakLists}{\code{MassSpecEngine$load_MSPeakLists()}}
\item \href{#method-MassSpecEngine-centroid_spectra}{\code{MassSpecEngine$centroid_spectra()}}
\item \href{#method-MassSpecEngine-bin_spectra}{\code{MassSpecEngine$bin_spectra()}}
\item \href{#method-MassSpecEngine-find_features}{\code{MassSpecEngine$find_features()}}
\item \href{#method-MassSpecEngine-group_features}{\code{MassSpecEngine$group_features()}}
\item \href{#method-MassSpecEngine-filter_features}{\code{MassSpecEngine$filter_features()}}
\item \href{#method-MassSpecEngine-annotate_features}{\code{MassSpecEngine$annotate_features()}}
\item \href{#method-MassSpecEngine-find_internal_standards}{\code{MassSpecEngine$find_internal_standards()}}
\item \href{#method-MassSpecEngine-suspect_screening}{\code{MassSpecEngine$suspect_screening()}}
\item \href{#method-MassSpecEngine-calculate_quality}{\code{MassSpecEngine$calculate_quality()}}
\item \href{#method-MassSpecEngine-generate_formulas}{\code{MassSpecEngine$generate_formulas()}}
\item \href{#method-MassSpecEngine-generate_compounds}{\code{MassSpecEngine$generate_compounds()}}
\item \href{#method-MassSpecEngine-integrate_chromatograms}{\code{MassSpecEngine$integrate_chromatograms()}}
\item \href{#method-MassSpecEngine-deconvolute_spectra_charges}{\code{MassSpecEngine$deconvolute_spectra_charges()}}
\item \href{#method-MassSpecEngine-as_patRoon_features}{\code{MassSpecEngine$as_patRoon_features()}}
\item \href{#method-MassSpecEngine-as_patRoon_featureGroups}{\code{MassSpecEngine$as_patRoon_featureGroups()}}
\item \href{#method-MassSpecEngine-as_patRoon_MSPeakLists}{\code{MassSpecEngine$as_patRoon_MSPeakLists()}}
\item \href{#method-MassSpecEngine-check_correspondence}{\code{MassSpecEngine$check_correspondence()}}
\item \href{#method-MassSpecEngine-save}{\code{MassSpecEngine$save()}}
\item \href{#method-MassSpecEngine-import}{\code{MassSpecEngine$import()}}
\item \href{#method-MassSpecEngine-report}{\code{MassSpecEngine$report()}}
\item \href{#method-MassSpecEngine-processing_methods}{\code{MassSpecEngine$processing_methods()}}
\item \href{#method-MassSpecEngine-clone}{\code{MassSpecEngine$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="add_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-add_headers'><code>StreamFind::CoreEngine$add_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="add_metadata"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-add_metadata'><code>StreamFind::CoreEngine$add_metadata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="add_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-add_settings'><code>StreamFind::CoreEngine$add_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_analyses'><code>StreamFind::CoreEngine$get_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_analysis_names"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_analysis_names'><code>StreamFind::CoreEngine$get_analysis_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_blank_names"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_blank_names'><code>StreamFind::CoreEngine$get_blank_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_files"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_files'><code>StreamFind::CoreEngine$get_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_formats"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_formats'><code>StreamFind::CoreEngine$get_formats()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_headers'><code>StreamFind::CoreEngine$get_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_history"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_history'><code>StreamFind::CoreEngine$get_history()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_number_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_number_analyses'><code>StreamFind::CoreEngine$get_number_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_replicate_names"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_replicate_names'><code>StreamFind::CoreEngine$get_replicate_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_results"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_results'><code>StreamFind::CoreEngine$get_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_results_names"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_results_names'><code>StreamFind::CoreEngine$get_results_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_settings'><code>StreamFind::CoreEngine$get_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_settings_names"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_settings_names'><code>StreamFind::CoreEngine$get_settings_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_types"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_types'><code>StreamFind::CoreEngine$get_types()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="get_workflow_overview"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-get_workflow_overview'><code>StreamFind::CoreEngine$get_workflow_overview()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_analyses'><code>StreamFind::CoreEngine$has_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_results"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_results'><code>StreamFind::CoreEngine$has_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="has_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-has_settings'><code>StreamFind::CoreEngine$has_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_analyses'><code>StreamFind::CoreEngine$import_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_headers'><code>StreamFind::CoreEngine$import_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="import_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-import_settings'><code>StreamFind::CoreEngine$import_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="plot_chromatograms_peaks"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-plot_chromatograms_peaks'><code>StreamFind::CoreEngine$plot_chromatograms_peaks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="plot_spectra_peaks"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-plot_spectra_peaks'><code>StreamFind::CoreEngine$plot_spectra_peaks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print'><code>StreamFind::CoreEngine$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_analyses'><code>StreamFind::CoreEngine$print_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_headers'><code>StreamFind::CoreEngine$print_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_results"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_results'><code>StreamFind::CoreEngine$print_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="print_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-print_workflow'><code>StreamFind::CoreEngine$print_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="remove_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-remove_headers'><code>StreamFind::CoreEngine$remove_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="remove_results"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-remove_results'><code>StreamFind::CoreEngine$remove_results()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="remove_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-remove_settings'><code>StreamFind::CoreEngine$remove_settings()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="run_workflow"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-run_workflow'><code>StreamFind::CoreEngine$run_workflow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="save_analyses"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-save_analyses'><code>StreamFind::CoreEngine$save_analyses()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="save_headers"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-save_headers'><code>StreamFind::CoreEngine$save_headers()</code></a></span></li>
<li><span class="pkg-link" data-pkg="StreamFind" data-topic="CoreEngine" data-id="save_settings"><a href='../../StreamFind/html/CoreEngine.html#method-CoreEngine-save_settings'><code>StreamFind::CoreEngine$save_settings()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-new"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-new}{}}}
\subsection{Method \code{new()}}{
Creates an R6 MassSpecEngine class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$new(
  files = NULL,
  headers = NULL,
  settings = NULL,
  analyses = NULL,
  results = NULL,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{files}}{A character vector with full file path/s of \emph{mzML}
or \emph{mzXML} file/s or a data.frame with the columns \emph{file}, \emph{replicate}
and \emph{blank} with the full file path of \emph{mzML} or \emph{mzXML} file/s
(character), the replicate group name (character) and the associated blank
replicate group name (character). Note the file paths must have the extension
\emph{.mzML} or \emph{.mzXML}.}

\item{\code{headers}}{A named list with headers or a ProjectHeaders S3 class object.
Each list element must have length one. There is no type restrictions
except for name (must be type character length 1), author (must be type
character length 1), path (must be type character length 1) and date (must
be class POSIXct or class POSIXt length 1). See more information in
\code{?ProjectHeaders}.}

\item{\code{settings}}{A named list of ProcessingSettings objects or a single ProcessingSettings object. The list
names should match the call name of each ProcessingSettings object. Alternatively, a named list with call name,
algorithm and parameters to be transformed and added as ProcessingSettings object.}

\item{\code{analyses}}{A MassSpecAnalysis S3 class object or a list with MassSpecAnalysis S3 class objects as
elements (see \code{?MassSpecAnalysis} for more information).}

\item{\code{results}}{A named list of objects from processing methods.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new MassSpecEngine class object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_overview"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_overview}{}}}
\subsection{Method \code{get_overview()}}{
Gets an overview data.frame of all the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_overview()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_time_stamps"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_time_stamps}{}}}
\subsection{Method \code{get_time_stamps()}}{
Gets the time stamp of the each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_time_stamps(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_spectra_number"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_spectra_number}{}}}
\subsection{Method \code{get_spectra_number()}}{
Gets the number of spectra in each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_spectra_number(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_spectra_mode"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_spectra_mode}{}}}
\subsection{Method \code{get_spectra_mode()}}{
Gets the spectra mode of each analysis (i.e., profile or centroided).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_spectra_mode(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_spectra_levels"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_spectra_levels}{}}}
\subsection{Method \code{get_spectra_levels()}}{
Gets the spectra levels of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_spectra_levels(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list for each analysis with an integer vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_mz_low"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_mz_low}{}}}
\subsection{Method \code{get_mz_low()}}{
Gets the lower \emph{m/z} value of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_mz_low(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_mz_high"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_mz_high}{}}}
\subsection{Method \code{get_mz_high()}}{
Gets the higher \emph{m/z} value of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_mz_high(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_rt_start"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_rt_start}{}}}
\subsection{Method \code{get_rt_start()}}{
Gets the start retention time value of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_rt_start(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_rt_end"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_rt_end}{}}}
\subsection{Method \code{get_rt_end()}}{
Gets the end retention time value of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_rt_end(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_polarities"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_polarities}{}}}
\subsection{Method \code{get_polarities()}}{
Gets the polarity of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_polarities(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_chromatograms_number"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_chromatograms_number}{}}}
\subsection{Method \code{get_chromatograms_number()}}{
Gets the number of chromatograms in each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_chromatograms_number(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_instrument_info"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_instrument_info}{}}}
\subsection{Method \code{get_instrument_info()}}{
Gets the instrument information of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_instrument_info(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_software_info"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_software_info}{}}}
\subsection{Method \code{get_software_info()}}{
Gets the software information of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_software_info(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_run"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_run}{}}}
\subsection{Method \code{get_run()}}{
Gets the run summary data.table of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_run(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_tic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_tic}{}}}
\subsection{Method \code{get_tic()}}{
Gets the total ion chromatogram (TIC) of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_tic(analyses = NULL, levels = c(1, 2))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with the TIC chromatogram.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_bpc"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_bpc}{}}}
\subsection{Method \code{get_bpc()}}{
Gets the base peak chromatogram (BPC) of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_bpc(analyses = NULL, levels = c(1, 2))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_metadata}{}}}
\subsection{Method \code{get_metadata()}}{
Gets metadata from each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_metadata(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_spectra}{}}}
\subsection{Method \code{get_spectra()}}{
Gets spectra from each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_spectra(
  analyses = NULL,
  levels = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  allTraces = TRUE,
  isolationWindow = 1.3,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{allTraces}}{Logical, when \code{TRUE} all level 2 data is returned.
When \code{FALSE} and level has 2, only the MS2 traces of MS1 targets
are returned, using the \code{isolationWindow} to calculate the mass window.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{minIntensityMS1}}{Numeric value with the minimum intensity of level 1
data (i.e., MS1 data).}

\item{\code{minIntensityMS2}}{Numeric value with the minimum intensity of level 2
data (i.e., MS2 data).}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with spectra for each analyses and targets, when defined.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_chromatograms}{}}}
\subsection{Method \code{get_chromatograms()}}{
Gets chromatograms from each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_chromatograms(
  analyses = NULL,
  chromatograms = NA_integer_,
  minIntensity = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{chromatograms}}{A character or integer vector with the ID name or the index of the chromatograms to extract.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with chromatogram/s.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_eic}{}}}
\subsection{Method \code{get_eic()}}{
Gets extract ion chromatograms (EIC) from the analyses based on targets as a data.table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_eic(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_ms1}{}}}
\subsection{Method \code{get_ms1()}}{
Gets MS1 data from the analyses based on targets as a data.frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_ms1(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  mzClust = 0.003,
  presence = 0.8,
  verbose = FALSE,
  minIntensity = 1000,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_ms2}{}}}
\subsection{Method \code{get_ms2()}}{
Gets MS2 data from the analyses based on targets as a data.frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_ms2(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  isolationWindow = 1.3,
  mzClust = 0.005,
  presence = 0.8,
  verbose = FALSE,
  minIntensity = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_feature_list"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_feature_list}{}}}
\subsection{Method \code{get_feature_list()}}{
Gets the list of features for each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_feature_list(analyses = NULL, filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of data.table objects for each analysis.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_features}{}}}
\subsection{Method \code{get_features()}}{
Gets a data.table with all features in analyses or as selected by the arguments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  filtered = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_features_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_features_eic}{}}}
\subsection{Method \code{get_features_eic()}}{
Gets a data.table with feature EICs following the targets from the arguments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_features_eic(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtExpand = 120,
  mzExpand = NULL,
  filtered = FALSE,
  loaded = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loaded}}{Logical. When \code{TRUE} and if available, previously
loaded data will be used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_features_ms1}{}}}
\subsection{Method \code{get_features_ms1()}}{
Gets a data.table of averaged MS1 spectrum for features in the analyses or as selected from the
arguments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_features_ms1(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 100),
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 1000,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS1 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS1}}{Logical. When \code{TRUE} and if available, previously loaded MS1
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_features_ms2}{}}}
\subsection{Method \code{get_features_ms2()}}{
Gets a data.table of averaged MS2 spectrum for features in the analyses or as selected from the
arguments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_features_ms2(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  isolationWindow = 1.3,
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 0,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS2 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS2}}{Logical. When \code{TRUE} and if available, previously loaded MS2
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_groups}{}}}
\subsection{Method \code{get_groups()}}{
Gets a data.table with feature groups from the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_groups(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  filtered = FALSE,
  intensities = TRUE,
  average = FALSE,
  sdValues = FALSE,
  metadata = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{intensities}}{Logical. When \code{TRUE}, feature intensity values
are returned.}

\item{\code{average}}{Logical. When \code{TRUE}, feature intensities from each group are
averaged and returned for each analysis replicate group.}

\item{\code{sdValues}}{Logical length 1. Set to \code{TRUE} for returning the sd values when averaging the intensity
within analysis replicates.}

\item{\code{metadata}}{Logical length 1. Set to \code{TRUE} for returning extra metadata from feature groups
(e.g., presence in each analysis replicate and mass and time widths).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_groups_ms1}{}}}
\subsection{Method \code{get_groups_ms1()}}{
Gets a data.table of averaged MS1 spectrum for feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_groups_ms1(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 90),
  mzClustFeatures = 0.003,
  presenceFeatures = 0.8,
  minIntensityFeatures = 1000,
  loadedFeaturesMS1 = TRUE,
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 1000,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{presenceFeatures}}{Numeric of length one with the required presence
ratio from 0 (i.e., doesn't need to be present in any spectra) to 1 (i.e.,
must be present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS1}}{Logical. When \code{TRUE} and if available, previously
loaded features MS1 data is used instead of extraction from raw data.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_groups_ms2}{}}}
\subsection{Method \code{get_groups_ms2()}}{
Gets a data.table of averaged MS2 spectrum for feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_groups_ms2(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  isolationWindow = 1.3,
  mzClustFeatures = 0.003,
  presenceFeatures = 0.8,
  minIntensityFeatures = 100,
  loadedFeaturesMS2 = TRUE,
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 100,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{presenceFeatures}}{Numeric of length one with the required presence
ratio from 0 (i.e., doesn't need to be present in any spectra) to 1 (i.e.,
must be present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS2}}{Logical. When \code{TRUE} and if available, previously
loaded features MS2 data is used instead of extraction from raw data.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_MSPeakLists"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_MSPeakLists}{}}}
\subsection{Method \code{get_MSPeakLists()}}{
Creates S4 class \code{MSPeakLists}. Note that feature groups are required. The MS and MSMS spectra
of each feature are then average by \pkg{patRoon} to produce the feature group spectra using the parameters
of the function \link[patRoon]{getDefAvgPListParams}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_MSPeakLists(
  useLoaded = TRUE,
  maxMSRtWindow = 10,
  precursorMzWindow = 4,
  clusterMzWindow = 0.005,
  topMost = 100,
  minIntensityPre = 10,
  minIntensityPost = 10,
  avgFun = mean,
  method = "distance",
  retainPrecursorMSMS = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{useLoaded}}{Logical of length one. When \code{TRUE} and both MS1 and MS2 are loaded to features,
these are used otherwise the native function \code{generateMSPeakLists} from \pkg{patRoon} is used instead.}

\item{\code{maxMSRtWindow}}{Maximum chromatographic peak window used for spectrum
averaging (in seconds, +/- retention time). If NULL all spectra from a feature
will be taken into account. Lower to decrease processing time.}

\item{\code{precursorMzWindow}}{The m/z window (in Da) to find MS/MS spectra of a precursor.
This is typically used for Data-Dependent like MS/MS data and should correspond to the
isolation m/z window (i.e. +/- the precursor m/z) that was used to collect the data.
For Data-Independent MS/MS experiments, where precursor ions are not isolated prior to
fragmentation (e.g. bbCID, MSe, all-ion, ...) the value should be NULL.}

\item{\code{clusterMzWindow}}{m/z window (in Da) used for clustering m/z values
when spectra are averaged. For method="hclust" this corresponds to the
cluster height, while for method="distance" this value is used to find
nearby masses (+/- window). Too small windows will prevent clustering
m/z values (thus erroneously treating equal masses along spectra as
different), whereas too big windows may cluster unrelated m/z values
from different or even the same spectrum together.}

\item{\code{topMost}}{Only retain this maximum number of MS peaks when generating
averaged spectra. Lowering this number may exclude more irrelevant (noisy)
MS peaks and decrease processing time, whereas higher values may avoid
excluding lower intense MS peaks that may still be of interest.}

\item{\code{minIntensityPre}}{MS peaks with intensities below this value will
be removed (applied prior to selection by \code{topMost}) before averaging.}

\item{\code{minIntensityPost}}{MS peaks with intensities below this value will
be removed after averaging.}

\item{\code{avgFun}}{Function that is used to calculate average m/z values.}

\item{\code{method}}{Method used for producing averaged MS spectra. Valid
values are "hclust", used for hierarchical clustering (using the
fastcluster package), and "distance", to use the between peak distance.
The latter method may reduces processing time and memory requirements,
at the potential cost of reduced accuracy.}

\item{\code{retainPrecursorMSMS}}{For MS/MS data only: if TRUE then always
retain the precursor mass peak even if is not among the \code{topMost} peaks.
Note that MS precursor mass peaks are always kept. Furthermore, note
that precursor peaks in both MS and MS/MS data may still be removed by
intensity thresholds (this is unlike the filter method function).}

\item{\code{pruneMissingPrecursorMS}}{For MS data only: if TRUE then peak lists
without a precursor peak are removed. Note that even when this is set to
FALSE, functionality that relies on MS (not MS/MS) peak lists (e.g.
formulae calculation) will still skip calculation if a precursor is not
found.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_isotopes"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_isotopes}{}}}
\subsection{Method \code{get_isotopes()}}{
Gets a data.table of feature isotopes (i.e., isotope clusters) in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_isotopes(
  analyses = NULL,
  groups = NULL,
  features = NULL,
  clusters = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  filtered = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{clusters}}{A numeric vector with the number/s of feature cluster/s.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_suspects"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_suspects}{}}}
\subsection{Method \code{get_suspects()}}{
Gets a data.table of suspects from features according to a defined database and mass (\code{ppm})
and time (\code{sec}) deviations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_suspects(
  analyses = NULL,
  database = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 5,
  sec = 10,
  millisec = 5,
  ppmMS2 = 10,
  minFragments = 3,
  isolationWindow = 1.3,
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 0,
  runParallel = FALSE,
  filtered = FALSE,
  onGroups = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{database}}{A data.frame with at least the columns name and mass, indicating the name and neutral
monoisotopic mass of the suspect targets.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{ppmMS2}}{Numeric of length one with the mass deviation, in ppm for MS2.}

\item{\code{minFragments}}{Integer of length 1 with the minimum number of fragments.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{onGroups}}{Logical of length one. When TRUE results are return based on
feature groups not individual features.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The \code{ppm} and \code{sec} which indicate the mass (im ppm) and time (in seconds) deviations applied during
the screening.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-get_internal_standards"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-get_internal_standards}{}}}
\subsection{Method \code{get_internal_standards()}}{
Gets a data.table with internal standards found by the \code{find_internal_standards} module.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$get_internal_standards(average = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{average}}{Logical of length one. When \code{TRUE} and groups are present, internal standards are averaged per
analysis replicate group.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_analyses}{}}}
\subsection{Method \code{add_analyses()}}{
Adds analyses. Note that when adding new analyses, any existing grouping of features are removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A MassSpecAnalysis S3 class object or a list with MassSpecAnalysis S3 class objects as
elements (see \code{?MassSpecAnalysis} for more information).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_files"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_files}{}}}
\subsection{Method \code{add_files()}}{
Adds analyses based on mzML/mzXML files. Note that when adding new mzML/mzXML
files, any existing grouping or features are removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_files(files = NULL, runParallel = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{files}}{A character vector with full file path/s of \emph{mzML}
or \emph{mzXML} file/s or a data.frame with the columns \emph{file}, \emph{replicate}
and \emph{blank} with the full file path of \emph{mzML} or \emph{mzXML} file/s
(character), the replicate group name (character) and the associated blank
replicate group name (character). Note the file paths must have the extension
\emph{.mzML} or \emph{.mzXML}.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_replicate_names}{}}}
\subsection{Method \code{add_replicate_names()}}{
Adds or redefines the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_replicate_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis replicate names.
Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_blank_names}{}}}
\subsection{Method \code{add_blank_names()}}{
Adds or redefines the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_blank_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis blank replicate names.
Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_spectra}{}}}
\subsection{Method \code{add_spectra()}}{
Adds spectra to analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_spectra(spectra = NULL, replace = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{spectra}}{A data.table with spectra from MS analyses as obtained
by the method \code{get_spectra()} with columns "scan", "mz" and "intensity".
Other columns might be added from specific processing algorithms!}

\item{\code{replace}}{Logical. When \code{TRUE}, existing spectra are replaced by
the new features.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-add_results"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-add_results}{}}}
\subsection{Method \code{add_results()}}{
Adds data from results to the engine.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$add_results(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A named list with data from results.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_spectra}{}}}
\subsection{Method \code{load_spectra()}}{
Loads all spectra from all analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_spectra(runParallel = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_chromatograms}{}}}
\subsection{Method \code{load_chromatograms()}}{
Loads all chromatograms from all analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_chromatograms(runParallel = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-remove_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-remove_analyses}{}}}
\subsection{Method \code{remove_analyses()}}{
Removes analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$remove_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-remove_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-remove_features}{}}}
\subsection{Method \code{remove_features()}}{
Removes features. Note that feature groups are also removed when features is set to \code{NULL}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$remove_features(features = NULL, filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-remove_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-remove_features_ms1}{}}}
\subsection{Method \code{remove_features_ms1()}}{
Removes loaded MS1 spectra from features in the analyses. In practice, the column \emph{ms1} in
the features data.table of each analysis object is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$remove_features_ms1()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-remove_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-remove_features_ms2}{}}}
\subsection{Method \code{remove_features_ms2()}}{
Removes loaded MS2 spectra from features in the analyses. In practice, the column \emph{ms2} in
the features data.table of each analysis object is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$remove_features_ms2()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-remove_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-remove_groups}{}}}
\subsection{Method \code{remove_groups()}}{
Removes feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$remove_groups(groups = NULL, filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-subset_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-subset_analyses}{}}}
\subsection{Method \code{subset_analyses()}}{
Subsets a MassSpecEngine object on analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$subset_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned MassSpecEngine object with only the analyses as defined by the analyses argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-subset_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-subset_features}{}}}
\subsection{Method \code{subset_features()}}{
Subsets a MassSpecEngine object on features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$subset_features(features = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned MassSpecEngine object with only the features as defined by the features argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-subset_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-subset_groups}{}}}
\subsection{Method \code{subset_groups()}}{
Subsets a MassSpecEngine object on feature groups. Note that when sub-setting groups, features
that lose correspondence are removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$subset_groups(groups = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned MassSpecEngine object with only the groups as defined by the \code{groups} argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_ion_mobility"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_ion_mobility}{}}}
\subsection{Method \code{has_ion_mobility()}}{
Checks if analyses have have drift time from ion mobility, returning \code{TRUE} or \code{FALSE} for
each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_ion_mobility(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_loaded_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_loaded_spectra}{}}}
\subsection{Method \code{has_loaded_spectra()}}{
Checks for loaded spectra in given analyses names/indices, returning \code{TRUE} or \code{FALSE} for each
analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_loaded_spectra(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_loaded_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_loaded_chromatograms}{}}}
\subsection{Method \code{has_loaded_chromatograms()}}{
Checks for loaded chromatograms in given analyses names/indices, returning \code{TRUE} or \code{FALSE} for
each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_loaded_chromatograms(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_features}{}}}
\subsection{Method \code{has_features()}}{
Checks if given analyses have features, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_features(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_groups}{}}}
\subsection{Method \code{has_groups()}}{
Checks if there are feature groups from grouping features across analyses, returning \code{TRUE}
or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_groups(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_loaded_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_loaded_features_ms1}{}}}
\subsection{Method \code{has_loaded_features_ms1()}}{
Checks for loaded features MS1 in given analyses names/indices, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_loaded_features_ms1(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_loaded_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_loaded_features_ms2}{}}}
\subsection{Method \code{has_loaded_features_ms2()}}{
Checks for loaded features MS2 in given analyses names/indices, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_loaded_features_ms2(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_features_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_features_eic}{}}}
\subsection{Method \code{has_features_eic()}}{
Checks for presence of feature extracted ion chromatograms (EICs) in given analyses names/indices,
returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_features_eic(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_suspects"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_suspects}{}}}
\subsection{Method \code{has_suspects()}}{
Checks for presence of suspects in given analyses names/indices, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_suspects(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_MSPeakLists"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_MSPeakLists}{}}}
\subsection{Method \code{has_MSPeakLists()}}{
Checks if there are MSPeakLists for analyses, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_MSPeakLists(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_formulas"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_formulas}{}}}
\subsection{Method \code{has_formulas()}}{
Checks if there are formulas assigned to feature groups, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_formulas()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_compounds"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_compounds}{}}}
\subsection{Method \code{has_compounds()}}{
Checks if there are compounds assigned to feature groups, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_compounds()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_chromatograms}{}}}
\subsection{Method \code{has_chromatograms()}}{
Checks if there are chromatograms, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_chromatograms()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_chromatograms_peaks"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_chromatograms_peaks}{}}}
\subsection{Method \code{has_chromatograms_peaks()}}{
Checks if there are integrated peaks from chromatograms, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_chromatograms_peaks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_spectra}{}}}
\subsection{Method \code{has_spectra()}}{
Checks if there are spectra, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_spectra()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_spectra_peaks"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_spectra_peaks}{}}}
\subsection{Method \code{has_spectra_peaks()}}{
Checks if there are spectra peaks, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_spectra_peaks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_averaged_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_averaged_spectra}{}}}
\subsection{Method \code{has_averaged_spectra()}}{
Checks if there are average spectra, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_averaged_spectra()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-has_spectra_charges"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-has_spectra_charges}{}}}
\subsection{Method \code{has_spectra_charges()}}{
Checks if there are charges assigned to spectra, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$has_spectra_charges()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_raw_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_raw_spectra}{}}}
\subsection{Method \code{plot_raw_spectra()}}{
Plots raw spectra in 3D for given MS analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_raw_spectra(
  analyses = NULL,
  levels = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  allTraces = TRUE,
  isolationWindow = 1.3,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  runParallel = FALSE,
  legendNames = TRUE,
  colorBy = "analyses",
  xVal = "rt",
  yVal = "mz",
  xLab = NULL,
  yLab = NULL,
  zLab = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{allTraces}}{Logical, when \code{TRUE} all level 2 data is returned.
When \code{FALSE} and level has 2, only the MS2 traces of MS1 targets
are returned, using the \code{isolationWindow} to calculate the mass window.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{minIntensityMS1}}{Numeric value with the minimum intensity of level 1
data (i.e., MS1 data).}

\item{\code{minIntensityMS2}}{Numeric value with the minimum intensity of level 2
data (i.e., MS2 data).}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses} (the default), \code{polarities}, \code{levels}, \code{targets} or \code{replicates}.}

\item{\code{xVal}}{Character length one. Possible values are "mz", "rt" or "drift".}

\item{\code{yVal}}{Character length one. Possible values are "mz", "rt" or "drift".}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{zLab}}{A string with the title for the z axis.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_spectra}{}}}
\subsection{Method \code{plot_spectra()}}{
Plots spectra given MS analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_spectra(
  analyses = NULL,
  levels = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  allTraces = TRUE,
  isolationWindow = 1.3,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  runParallel = FALSE,
  results = TRUE,
  averaged = TRUE,
  baseline = FALSE,
  smoothed = TRUE,
  legendNames = TRUE,
  colorBy = "analyses",
  xVal = "mass",
  xLab = NULL,
  yLab = NULL,
  title = NULL,
  cex = 0.6,
  showLegend = TRUE,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{allTraces}}{Logical, when \code{TRUE} all level 2 data is returned.
When \code{FALSE} and level has 2, only the MS2 traces of MS1 targets
are returned, using the \code{isolationWindow} to calculate the mass window.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{minIntensityMS1}}{Numeric value with the minimum intensity of level 1
data (i.e., MS1 data).}

\item{\code{minIntensityMS2}}{Numeric value with the minimum intensity of level 2
data (i.e., MS2 data).}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{results}}{Logical of length one. Set to \code{TRUE} for plotting the spectra in results not the raw spectra.}

\item{\code{averaged}}{Logical of length one. Set to \code{TRUE} for plotting the averaged spectra.}

\item{\code{baseline}}{Logical of length one. Set to \code{TRUE} for plotting the spectra with baseline corrected.}

\item{\code{smoothed}}{Logical of length one. Set to \code{TRUE} for plotting the smoothed spectra.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses} (the default), \code{polarities}, \code{levels}, \code{targets} or \code{replicates}.}

\item{\code{xVal}}{Character length one. Possible values are "mz", "rt", "drift" or "mass".}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{title}}{A string with the title.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_chromatograms}{}}}
\subsection{Method \code{plot_chromatograms()}}{
Plots chromatograms in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_chromatograms(
  analyses = NULL,
  chromatograms = NA_integer_,
  title = NULL,
  colorBy = "targets",
  legendNames = NULL,
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{chromatograms}}{A character or integer vector with the ID name or the index of the chromatograms to extract.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_xic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_xic}{}}}
\subsection{Method \code{plot_xic()}}{
Plots extract ion chromatograms (EIC) and \emph{m/z} vs retention time from the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_xic(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  runParallel = FALSE,
  legendNames = NULL,
  plotTargetMark = TRUE,
  targetsMark = NULL,
  ppmMark = 5,
  secMark = 10,
  numberRows = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{plotTargetMark}}{Logical, set to \code{TRUE} to plot a target mark.}

\item{\code{targetsMark}}{A data.frame with columns \code{mz} and \code{rt}, defining the
\emph{m/z} and retention time values of each target. Note that the number
of rows should match with the number of targets.}

\item{\code{ppmMark}}{A numeric vector of length one to define the mass deviation,
in ppm, of the target mark. The default is 5 ppm.}

\item{\code{secMark}}{A numeric vector of length one to define the time deviation,
in seconds, of the target mark. The default is 10 ppm.}

\item{\code{numberRows}}{An integer vector of length one to define the number of
rows to grid the plots. Note that each target is always plotted in one row
for all selected analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_eic}{}}}
\subsection{Method \code{plot_eic()}}{
Plots extract ion chromatograms (EIC) from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_eic(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_tic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_tic}{}}}
\subsection{Method \code{plot_tic()}}{
Plots the total ion chromatogram (TIC) of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_tic(
  analyses = NULL,
  levels = c(1, 2),
  title = NULL,
  colorBy = "analyses",
  legendNames = NULL,
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_bpc"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_bpc}{}}}
\subsection{Method \code{plot_bpc()}}{
Plots the base peak chromatogram (BPC) of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_bpc(
  analyses = NULL,
  levels = c(1, 2),
  title = NULL,
  colorBy = "analyses",
  legendNames = NULL,
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_ms2}{}}}
\subsection{Method \code{plot_ms2()}}{
Plots MS2 spectra from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_ms2(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  isolationWindow = 1.3,
  mzClust = 0.005,
  presence = 0.8,
  verbose = FALSE,
  minIntensity = 0,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_ms1}{}}}
\subsection{Method \code{plot_ms1()}}{
Plots MS1 spectra from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_ms1(
  analyses = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  id = NULL,
  mzClust = 0.003,
  presence = 0.8,
  verbose = FALSE,
  minIntensity = 1000,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showText = TRUE,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showText}}{X.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_features}{}}}
\subsection{Method \code{plot_features()}}{
Plots features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtExpand = 120,
  mzExpand = NULL,
  loaded = TRUE,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{loaded}}{Logical. When \code{TRUE} and if available, previously
loaded data will be used instead of extraction from raw data.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-map_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-map_features}{}}}
\subsection{Method \code{map_features()}}{
Plots a map of the retention time vs \emph{m/z} of features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$map_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  filtered = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showLegend = TRUE,
  xlim = 30,
  ylim = 0.05,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_features_ms1}{}}}
\subsection{Method \code{plot_features_ms1()}}{
Plots MS1 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_features_ms1(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 100),
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 1000,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS1 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS1}}{Logical. When \code{TRUE} and if available, previously loaded MS1
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_features_ms2}{}}}
\subsection{Method \code{plot_features_ms2()}}{
Plots MS2 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_features_ms2(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  isolationWindow = 1.3,
  mzClust = 0.005,
  presence = 0.8,
  minIntensity = 0,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS2 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS2}}{Logical. When \code{TRUE} and if available, previously loaded MS2
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_alignment}{}}}
\subsection{Method \code{plot_alignment()}}{
Plots the results from the retention time alignment across analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_alignment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A plot with the retention time alignment differences
for each sample.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_groups}{}}}
\subsection{Method \code{plot_groups()}}{
Plots feature groups EIC.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_groups(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtExpand = 15,
  mzExpand = 0.005,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_groups_ms1}{}}}
\subsection{Method \code{plot_groups_ms1()}}{
Plots MS1 spectra from feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_groups_ms1(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 90),
  mzClustFeatures = 0.005,
  presenceFeatures = 0.8,
  minIntensityFeatures = 1000,
  loadedFeaturesMS1 = TRUE,
  mzClust = 0.005,
  presence = 0.8,
  minIntensity = 1000,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{presenceFeatures}}{Numeric of length one with the required presence
ratio from 0 (i.e., doesn't need to be present in any spectra) to 1 (i.e.,
must be present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS1}}{Logical. When \code{TRUE} and if available, previously
loaded features MS1 data is used instead of extraction from raw data.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_groups_ms2}{}}}
\subsection{Method \code{plot_groups_ms2()}}{
Plots MS1 spectra from feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_groups_ms2(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  isolationWindow = 1.3,
  mzClustFeatures = 0.003,
  presenceFeatures = 0.8,
  minIntensityFeatures = 100,
  loadedFeaturesMS2 = TRUE,
  mzClust = 0.003,
  presence = TRUE,
  minIntensity = 100,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{presenceFeatures}}{Numeric of length one with the required presence
ratio from 0 (i.e., doesn't need to be present in any spectra) to 1 (i.e.,
must be present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS2}}{Logical. When \code{TRUE} and if available, previously
loaded features MS2 data is used instead of extraction from raw data.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_groups_overview"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_groups_overview}{}}}
\subsection{Method \code{plot_groups_overview()}}{
Method to give an overview of the EIC, alignment and intensity variance
from features within target feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_groups_overview(
  analyses = NULL,
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  rtExpand = 120,
  mzExpand = 0.005,
  loaded = TRUE,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  heights = c(0.35, 0.5, 0.15)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{loaded}}{Logical. When \code{TRUE} and if available, previously
loaded data will be used instead of extraction from raw data.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{heights}}{A numeric vector of length 3 to control the height of
the first, second and third plot, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_internal_standards_qc"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_internal_standards_qc}{}}}
\subsection{Method \code{plot_internal_standards_qc()}}{
Plots the quality control assessment of internal standards.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_internal_standards_qc()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_suspects"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_suspects}{}}}
\subsection{Method \code{plot_suspects()}}{
Plots suspects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_suspects(
  analyses = NULL,
  database = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 4,
  sec = 10,
  millisec = 5,
  ppmMS2 = 10,
  minFragments = 3,
  isolationWindow = 1.3,
  mzClust = 0.003,
  presence = 0.8,
  minIntensity = 0,
  filtered = FALSE,
  rtExpand = 120,
  mzExpand = 0.005,
  loaded = TRUE,
  runParallel = FALSE,
  colorBy = "targets"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{database}}{A data.frame with at least the columns name
and mass, indicating the name and neutral monoisotopic
mass of the suspect targets.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{ppmMS2}}{Numeric of length one with the mass deviation, in ppm for MS2.}

\item{\code{minFragments}}{Integer of length 1 with the minimum number of fragments.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{presence}}{Numeric of length one with the required presence ratio from
0 (i.e., doesn't need to be present in any spectra) to 1 (i.e., must be
present in all spectra) for traces during clustering of spectra.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{loaded}}{Logical. When \code{TRUE} and if available, previously
loaded data will be used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The \code{ppm} and \code{sec} which indicate the
mass (im ppm) and time (in seconds) deviations applied during the
screening.
}

\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-map_isotopes"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-map_isotopes}{}}}
\subsection{Method \code{map_isotopes()}}{
Maps isotopic clusters in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$map_isotopes(
  analyses = NULL,
  groups = NULL,
  features = NULL,
  clusters = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  drift = NULL,
  ppm = 20,
  sec = 60,
  millisec = 5,
  filtered = FALSE,
  xlim = 30,
  ylim = 0.05,
  showLegend = TRUE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned/removed.}

\item{\code{clusters}}{A numeric vector with the number/s of feature cluster/s.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time (in seconds) and/or drift time values (in milliseconds)
can be given as one data.table or data.frame with columns named \code{mass} and
\code{rt} and/or \code{drift}. Then, the deviations given in the \code{ppm}, \code{sec}
and \code{millisec}  arguments are used to calculate the ranges. Also works
with a data.table or data.frame with minimum and maximum values of neutral
mass, retention time and drift time targets. In this case, the column names
must be \code{min}, \code{max}, \code{rtmin}, \code{rtmax}, \code{driftmin} and \code{driftmax}. Note that
when mass/time ranges are given, the \code{ppm}, \code{sec} and \code{millisec}
arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt} and/or \code{drift}. Then, the
deviations given in the \code{ppm}, \code{sec} and \code{millisec} arguments
are used to calculate the ranges. Also works with a data.table or data.frame
with minimum and maximum values of \emph{m/z}, retention time and drift time
targets. In this case, the column names must be \code{mzmin}, \code{mzmax}, \code{rtmin},
\code{rtmax}, \code{driftmin} and \code{driftmax}. Note that when mass/time ranges
are given, the \code{ppm}, \code{sec} and \code{millisec} arguments are
not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{drift}}{A vector with target drift time values (in milliseconds) or
a two columns data.table or data.frame with minimum and maximum drift
time values (in milliseconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{millisec}}{Numeric of length one with the drift time deviation,
in milliseconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-plot_spectra_charges"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-plot_spectra_charges}{}}}
\subsection{Method \code{plot_spectra_charges()}}{
Plots charge assignment of deconvoluted spectra from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$plot_spectra_charges(
  analyses = NULL,
  legendNames = NULL,
  title = NULL,
  colorBy = "analyses",
  showLegend = TRUE,
  xlim = NULL,
  ylim = NULL,
  cex = 0.6,
  xLab = NULL,
  yLab = NULL,
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{cex}}{A length one numeric value defining the scale of the legend for
non interactive plotting.}

\item{\code{xLab}}{A string with the title for the x axis.}

\item{\code{yLab}}{A string with the title for the y axis.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_features_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_features_eic}{}}}
\subsection{Method \code{load_features_eic()}}{
Loads features EICs in each analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_features_eic(settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_features_ms1}{}}}
\subsection{Method \code{load_features_ms1()}}{
Loads and average MS1 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_features_ms1(settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_features_ms2}{}}}
\subsection{Method \code{load_features_ms2()}}{
Loads and average MS2 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_features_ms2(settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-load_MSPeakLists"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-load_MSPeakLists}{}}}
\subsection{Method \code{load_MSPeakLists()}}{
Loads MS1 and MS2 spectra and converts to a \code{MSPeakLists} object from patRoon.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$load_MSPeakLists(settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-centroid_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-centroid_spectra}{}}}
\subsection{Method \code{centroid_spectra()}}{
Centroids profile spectra data for each MS analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$centroid_spectra(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-bin_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-bin_spectra}{}}}
\subsection{Method \code{bin_spectra()}}{
Bins centroided spectra for each MS analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$bin_spectra(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-find_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-find_features}{}}}
\subsection{Method \code{find_features()}}{
Finds features (i.e. chromatographic peaks) in the spectra
data of the analyses. Note, MS data structure requirements vary between
the available processing algorithm for finding features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$find_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-group_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-group_features}{}}}
\subsection{Method \code{group_features()}}{
Groups and possibly aligns features across analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$group_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-filter_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-filter_features}{}}}
\subsection{Method \code{filter_features()}}{
Filters features and feature groups according to defined settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$filter_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The features are not entirely removed but tagged as filtered.
See columns \code{filtered} and \code{filter} of the features data.table as
obtained with the method \code{get_features()}.
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-annotate_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-annotate_features}{}}}
\subsection{Method \code{annotate_features()}}{
Annotates isotopic features according to defined settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$annotate_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Extra columns are added to the features data.table in each analysis.
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-find_internal_standards"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-find_internal_standards}{}}}
\subsection{Method \code{find_internal_standards()}}{
Finds internal standards in features according to defined settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$find_internal_standards(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-suspect_screening"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-suspect_screening}{}}}
\subsection{Method \code{suspect_screening()}}{
Screens for suspect targets in features according to defined settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$suspect_screening(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-calculate_quality"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-calculate_quality}{}}}
\subsection{Method \code{calculate_quality()}}{
Calculates quality parameters of features that can be used for filtering/prioritization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$calculate_quality(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-generate_formulas"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-generate_formulas}{}}}
\subsection{Method \code{generate_formulas()}}{
Generates formulas from feature groups using the package patRoon.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$generate_formulas(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-generate_compounds"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-generate_compounds}{}}}
\subsection{Method \code{generate_compounds()}}{
Generates compounds from feature groups using the package patRoon.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$generate_compounds(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-integrate_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-integrate_chromatograms}{}}}
\subsection{Method \code{integrate_chromatograms()}}{
Integrates chromatograms, returning a peak list for each chromatogram for each analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$integrate_chromatograms(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-deconvolute_spectra_charges"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-deconvolute_spectra_charges}{}}}
\subsection{Method \code{deconvolute_spectra_charges()}}{
Deconvolutes spectra with multi-charged compounds, such as monoclonal antibodies.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$deconvolute_spectra_charges(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the engine object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-as_patRoon_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-as_patRoon_features}{}}}
\subsection{Method \code{as_patRoon_features()}}{
Creates an object with S4 class \code{features} from the package \pkg{patRoon}
with the features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$as_patRoon_features(filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object with S4 class \code{features}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-as_patRoon_featureGroups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-as_patRoon_featureGroups}{}}}
\subsection{Method \code{as_patRoon_featureGroups()}}{
Creates an object with S4 class \code{featureGroups} from the package
\pkg{patRoon} with the features in the analyses and feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$as_patRoon_featureGroups(filtered = FALSE, addSuspects = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{addSuspects}}{Logical of length 1. Set to \code{TRUE} for adding suspects
when present.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object with S4 class \code{featureGroups}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-as_patRoon_MSPeakLists"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-as_patRoon_MSPeakLists}{}}}
\subsection{Method \code{as_patRoon_MSPeakLists()}}{
Creates an object with S4 class \code{MSPeakLists} from the package
\pkg{patRoon} with MS and MSMS data from features in the analyses.
Note that feature groups are required. The MS and MSMS spectra of each
feature are then average by \pkg{patRoon} to produce the feature group
spectra using the parameters of the function
\link[patRoon]{getDefAvgPListParams}. The arguments described below are
taken from the documentation available in \pkg{patRoon}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$as_patRoon_MSPeakLists(
  filtered = FALSE,
  clusterMzWindow = 0.005,
  topMost = 100,
  minIntensityPre = 50,
  minIntensityPost = 50,
  avgFun = mean,
  method = "hclust",
  retainPrecursorMSMS = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{clusterMzWindow}}{m/z window (in Da) used for clustering m/z values
when spectra are averaged. For method="hclust" this corresponds to the
cluster height, while for method="distance" this value is used to find
nearby masses (+/- window). Too small windows will prevent clustering
m/z values (thus erroneously treating equal masses along spectra as
different), whereas too big windows may cluster unrelated m/z values
from different or even the same spectrum together.}

\item{\code{topMost}}{Only retain this maximum number of MS peaks when generating
averaged spectra. Lowering this number may exclude more irrelevant (noisy)
MS peaks and decrease processing time, whereas higher values may avoid
excluding lower intense MS peaks that may still be of interest.}

\item{\code{minIntensityPre}}{MS peaks with intensities below this value will
be removed (applied prior to selection by \code{topMost}) before averaging.}

\item{\code{minIntensityPost}}{MS peaks with intensities below this value will
be removed after averaging.}

\item{\code{avgFun}}{Function that is used to calculate average m/z values.}

\item{\code{method}}{Method used for producing averaged MS spectra. Valid
values are "hclust", used for hierarchical clustering (using the
fastcluster package), and "distance", to use the between peak distance.
The latter method may reduces processing time and memory requirements,
at the potential cost of reduced accuracy.}

\item{\code{retainPrecursorMSMS}}{For MS/MS data only: if TRUE then always
retain the precursor mass peak even if is not among the \code{topMost} peaks.
Note that MS precursor mass peaks are always kept. Furthermore, note
that precursor peaks in both MS and MS/MS data may still be removed by
intensity thresholds (this is unlike the filter method function).}

\item{\code{pruneMissingPrecursorMS}}{For MS data only: if TRUE then peak lists
without a precursor peak are removed. Note that even when this is set to
FALSE, functionality that relies on MS (not MS/MS) peak lists (e.g.
formulae calculation) will still skip calculation if a precursor is not
found.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object with S4 class \code{MSPeakLists}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-check_correspondence"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-check_correspondence}{}}}
\subsection{Method \code{check_correspondence()}}{
Checks the correspondence of features within feature groups, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$check_correspondence()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-save"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-save}{}}}
\subsection{Method \code{save()}}{
Saves the private fields (i.e., headers, settings, analyses,
groups and alignment) of the MassSpecEngine object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$save(format = "json", name = "MassSpecEngine", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the private fields of the msdata as the defined \code{format}
in the \code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-import"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-import}{}}}
\subsection{Method \code{import()}}{
Imports a MassSpecEngine object saved as \emph{json}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$import(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} file representing a \code{MassSpecEngine} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-report"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-report}{}}}
\subsection{Method \code{report()}}{
Saves the HTML report from the function \link[patRoon]{report} from the
package \pkg{patRoon}. The interface is exactly the same and the
arguments description are taken from the documentation in \pkg{patRoon}.
Therefore, for further information, we recommend to consult directly the
function \link[patRoon]{report} in \pkg{patRoon}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$report(
  path = paste0(getwd(), "/report"),
  filtered = FALSE,
  settingsFile = system.file("report", "settings.yml", package = "patRoon"),
  EICParams = patRoon::getDefEICParams(topMost = 1, topMostByRGroup = TRUE),
  specSimParams = patRoon::getDefSpecSimParams(),
  clearPath = FALSE,
  openReport = TRUE,
  parallel = TRUE,
  overrideSettings = list()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{String with the directory of the file to be saved.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{settingsFile}}{The path to the report settings file used for report
configuration (see Report settings in \link[patRoon]{report}).}

\item{\code{EICParams}}{A named list with parameters used for extracted ion
chromatogram (EIC) creation. See \link[patRoon]{getDefEICParams}.}

\item{\code{specSimParams}}{A named list with parameters that influence the
calculation of MS spectra similarities. See \link[patRoon]{getDefSpecSimParams}.}

\item{\code{clearPath}}{If TRUE then the report destination path will be
(recursively) removed prior to reporting.}

\item{\code{openReport}}{If set to TRUE then the output report file will be
opened with the system browser.}

\item{\code{parallel}}{If set to TRUE then code is executed in parallel.}

\item{\code{overrideSettings}}{A list with settings that override those from
the report settings file. See \link[patRoon]{report}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An interactive HTML report from the package \pkg{patRoon}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-processing_methods"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-processing_methods}{}}}
\subsection{Method \code{processing_methods()}}{
A data.table with available data processing methods.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$processing_methods()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecEngine-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecEngine-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecEngine$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
