% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_R6_CoreEngine.R
\name{CoreEngine}
\alias{CoreEngine}
\title{\strong{CoreEngine} R6 class and methods}
\description{
The CoreEngine R6 class is a basic data processor with generic methods for handling data.
}
\note{
Removes all results if present in the engine as may be affected but modified correspondence.

Removes all results if present in the engine as may be affected but modified correspondence.

The engine data is saved in an \strong{sqlite} file and loaded in the app. If save file is defined in the engine
it is used, otherwise the save file name is automatically set to the engine class name and the date. Changes made
in the app can be saved in the \strong{sqlite} file and then loaded for scripting.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{help}}{(\code{list()})\cr
List of function elements to access specific reference help pages.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{headers}}{List of project headers.}

\item{\code{settings}}{List of processing settings.}

\item{\code{history}}{Audit trail of changes.}

\item{\code{analyses}}{List of analyses.}

\item{\code{results}}{List of results.}

\item{\code{save_file}}{Full path to the save file of the engine data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CoreEngine-new}{\code{CoreEngine$new()}}
\item \href{#method-CoreEngine-print}{\code{CoreEngine$print()}}
\item \href{#method-CoreEngine-print_headers}{\code{CoreEngine$print_headers()}}
\item \href{#method-CoreEngine-print_analyses}{\code{CoreEngine$print_analyses()}}
\item \href{#method-CoreEngine-print_workflow}{\code{CoreEngine$print_workflow()}}
\item \href{#method-CoreEngine-print_results}{\code{CoreEngine$print_results()}}
\item \href{#method-CoreEngine-get_headers}{\code{CoreEngine$get_headers()}}
\item \href{#method-CoreEngine-get_history}{\code{CoreEngine$get_history()}}
\item \href{#method-CoreEngine-get_analyses}{\code{CoreEngine$get_analyses()}}
\item \href{#method-CoreEngine-get_number_analyses}{\code{CoreEngine$get_number_analyses()}}
\item \href{#method-CoreEngine-get_overview}{\code{CoreEngine$get_overview()}}
\item \href{#method-CoreEngine-get_analysis_names}{\code{CoreEngine$get_analysis_names()}}
\item \href{#method-CoreEngine-get_replicate_names}{\code{CoreEngine$get_replicate_names()}}
\item \href{#method-CoreEngine-get_blank_names}{\code{CoreEngine$get_blank_names()}}
\item \href{#method-CoreEngine-get_files}{\code{CoreEngine$get_files()}}
\item \href{#method-CoreEngine-get_formats}{\code{CoreEngine$get_formats()}}
\item \href{#method-CoreEngine-get_types}{\code{CoreEngine$get_types()}}
\item \href{#method-CoreEngine-get_settings}{\code{CoreEngine$get_settings()}}
\item \href{#method-CoreEngine-get_settings_names}{\code{CoreEngine$get_settings_names()}}
\item \href{#method-CoreEngine-get_workflow_overview}{\code{CoreEngine$get_workflow_overview()}}
\item \href{#method-CoreEngine-get_results_names}{\code{CoreEngine$get_results_names()}}
\item \href{#method-CoreEngine-get_results}{\code{CoreEngine$get_results()}}
\item \href{#method-CoreEngine-add_headers}{\code{CoreEngine$add_headers()}}
\item \href{#method-CoreEngine-add_settings}{\code{CoreEngine$add_settings()}}
\item \href{#method-CoreEngine-add_analyses}{\code{CoreEngine$add_analyses()}}
\item \href{#method-CoreEngine-add_replicate_names}{\code{CoreEngine$add_replicate_names()}}
\item \href{#method-CoreEngine-add_blank_names}{\code{CoreEngine$add_blank_names()}}
\item \href{#method-CoreEngine-add_metadata}{\code{CoreEngine$add_metadata()}}
\item \href{#method-CoreEngine-add_results}{\code{CoreEngine$add_results()}}
\item \href{#method-CoreEngine-remove_headers}{\code{CoreEngine$remove_headers()}}
\item \href{#method-CoreEngine-remove_settings}{\code{CoreEngine$remove_settings()}}
\item \href{#method-CoreEngine-remove_analyses}{\code{CoreEngine$remove_analyses()}}
\item \href{#method-CoreEngine-remove_results}{\code{CoreEngine$remove_results()}}
\item \href{#method-CoreEngine-subset_analyses}{\code{CoreEngine$subset_analyses()}}
\item \href{#method-CoreEngine-has_settings}{\code{CoreEngine$has_settings()}}
\item \href{#method-CoreEngine-has_analyses}{\code{CoreEngine$has_analyses()}}
\item \href{#method-CoreEngine-has_results}{\code{CoreEngine$has_results()}}
\item \href{#method-CoreEngine-run_workflow}{\code{CoreEngine$run_workflow()}}
\item \href{#method-CoreEngine-save}{\code{CoreEngine$save()}}
\item \href{#method-CoreEngine-load}{\code{CoreEngine$load()}}
\item \href{#method-CoreEngine-export_headers}{\code{CoreEngine$export_headers()}}
\item \href{#method-CoreEngine-export_settings}{\code{CoreEngine$export_settings()}}
\item \href{#method-CoreEngine-export_analyses}{\code{CoreEngine$export_analyses()}}
\item \href{#method-CoreEngine-export}{\code{CoreEngine$export()}}
\item \href{#method-CoreEngine-import_headers}{\code{CoreEngine$import_headers()}}
\item \href{#method-CoreEngine-import_settings}{\code{CoreEngine$import_settings()}}
\item \href{#method-CoreEngine-import_analyses}{\code{CoreEngine$import_analyses()}}
\item \href{#method-CoreEngine-import}{\code{CoreEngine$import()}}
\item \href{#method-CoreEngine-run_app}{\code{CoreEngine$run_app()}}
\item \href{#method-CoreEngine-processing_methods}{\code{CoreEngine$processing_methods()}}
\item \href{#method-CoreEngine-clone}{\code{CoreEngine$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-new"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-new}{}}}
\subsection{Method \code{new()}}{
Creates an R6 CoreEngine class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$new(
  headers = NULL,
  settings = NULL,
  analyses = NULL,
  results = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{headers}}{A named list with headers or a ProjectHeaders S3 class object.
Each list element must have length one. There is no type restrictions
except for name (must be type character length 1), author (must be type
character length 1), file (must be type character length 1) and date (must
be class POSIXct or class POSIXt length 1). See more information in
\code{?ProjectHeaders}.}

\item{\code{settings}}{A named list of ProcessingSettings objects or a
single ProcessingSettings object. The list names should match
the call name of each ProcessingSettings object. Alternatively, a named
list with call name, algorithm and parameters to be transformed and added
as ProcessingSettings object.}

\item{\code{analyses}}{An Analysis S3 class object or a list with Analysis S3  class objects as elements
(see \code{?Analysis} for more information).}

\item{\code{results}}{A named list of objects from processing methods.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-print"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-print}{}}}
\subsection{Method \code{print()}}{
Prints a summary to the console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-print_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-print_headers}{}}}
\subsection{Method \code{print_headers()}}{
Prints the headers list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$print_headers()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-print_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-print_analyses}{}}}
\subsection{Method \code{print_analyses()}}{
Prints the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$print_analyses()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-print_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-print_workflow}{}}}
\subsection{Method \code{print_workflow()}}{
Prints the order of processing methods for all added processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$print_workflow()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-print_results"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-print_results}{}}}
\subsection{Method \code{print_results()}}{
Prints the data results added to the engine.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$print_results()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_headers}{}}}
\subsection{Method \code{get_headers()}}{
Gets the headers list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_headers(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the name/s of the header elements. When \code{NULL} (the default), the entire
headers list is returned.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_history"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_history}{}}}
\subsection{Method \code{get_history()}}{
Gets the object history (audit trail) as a data.table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_history()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_analyses}{}}}
\subsection{Method \code{get_analyses()}}{
Gets the list of analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_number_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_number_analyses}{}}}
\subsection{Method \code{get_number_analyses()}}{
Gets the number of analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_number_analyses()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_overview"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_overview}{}}}
\subsection{Method \code{get_overview()}}{
Gets an overview data.table with all the analysis names,replicates, associated blank replicates,
and full file paths.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_overview()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_analysis_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_analysis_names}{}}}
\subsection{Method \code{get_analysis_names()}}{
Gets the analysis names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_analysis_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_replicate_names}{}}}
\subsection{Method \code{get_replicate_names()}}{
Gets the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_replicate_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_blank_names}{}}}
\subsection{Method \code{get_blank_names()}}{
Gets the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_blank_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_files"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_files}{}}}
\subsection{Method \code{get_files()}}{
Gets the full file paths of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_files(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_formats"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_formats}{}}}
\subsection{Method \code{get_formats()}}{
Gets the file format of each analysis.'
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_formats(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_types"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_types}{}}}
\subsection{Method \code{get_types()}}{
Gets the type of each analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_types(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_settings}{}}}
\subsection{Method \code{get_settings()}}{
Gets the processing settings list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the processing method/s.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_settings_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_settings_names}{}}}
\subsection{Method \code{get_settings_names()}}{
Gets the names of all processing methods in added processing settings as a character vector.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_settings_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_workflow_overview"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_workflow_overview}{}}}
\subsection{Method \code{get_workflow_overview()}}{
A \code{data.table} with the overview of all processing methods from added processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_workflow_overview()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_results_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_results_names}{}}}
\subsection{Method \code{get_results_names()}}{
Gets names of present results data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_results_names()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-get_results"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-get_results}{}}}
\subsection{Method \code{get_results()}}{
Gets the list of results data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$get_results(results = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{results}}{A character vector with the name of the module/s.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_headers}{}}}
\subsection{Method \code{add_headers()}}{
Adds headers. If an argument or element "name" is given, it must be type character. If an argument
or element path is given, it must be type character and exist. If an argument or element date is  given, it must
be class POSIXct or POSIXt. If given date is character, conversion to class POSIXct or POSIXt is attempted.
See \code{?ProjectHeaders} for more information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_headers(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Arguments to be added as headers. Note that all given arguments
must be of length one. There is no type limitations. The name of the argument
becomes the name of the header entry. Alternatively, a single list argument
with the headers (all length one) can be given.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_settings}{}}}
\subsection{Method \code{add_settings()}}{
Adds processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_settings(settings = NULL, replace = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A named list of ProcessingSettings objects or a
single ProcessingSettings object. The list names should match
the call name of each ProcessingSettings object. Alternatively, a named
list with call name, algorithm and parameters to be transformed and added
as ProcessingSettings object.}

\item{\code{replace}}{Logical of length one. When \code{TRUE}, existing settings are
replaced by the new settings with the same call name, except settings for
methods that can be applied more than once.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_analyses}{}}}
\subsection{Method \code{add_analyses()}}{
Adds analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{An Analysis S3 class object or a list with Analysis S3 objects as elements.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_replicate_names}{}}}
\subsection{Method \code{add_replicate_names()}}{
Adds or redefines the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_replicate_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis replicate names. Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_blank_names}{}}}
\subsection{Method \code{add_blank_names()}}{
Adds or redefines the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_blank_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis blank replicate names. Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_metadata}{}}}
\subsection{Method \code{add_metadata()}}{
Adds metadata to analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_metadata(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A data.frame or data.table with metadata for the analyses.
The data.frame or data.table must have an analysis column and the same
number of rows as the number of analyses in the engine. Metadata is added
using any extra columns of the data.frame or data.table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-add_results"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-add_results}{}}}
\subsection{Method \code{add_results()}}{
Adds data from results to the engine.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$add_results(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A named list with data from results.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-remove_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-remove_headers}{}}}
\subsection{Method \code{remove_headers()}}{
Removes headers entries. Note that the name, path and date headers cannot be removed only changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$remove_headers(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the name/s of the elements in headers to be removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-remove_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-remove_settings}{}}}
\subsection{Method \code{remove_settings()}}{
Removes settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$remove_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the processing method/s to be removed.
Alternatively, an integer vector with the index/es of the settings to be removed. When \code{call} is
\code{NULL} all settings are removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-remove_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-remove_analyses}{}}}
\subsection{Method \code{remove_analyses()}}{
Removes analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$remove_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-remove_results"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-remove_results}{}}}
\subsection{Method \code{remove_results()}}{
Removes results data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$remove_results(results)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{results}}{A named list of objects from processing methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-subset_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-subset_analyses}{}}}
\subsection{Method \code{subset_analyses()}}{
Subsets on analyses returning a new cloned object with only the analyses to keep.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$subset_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-has_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-has_settings}{}}}
\subsection{Method \code{has_settings()}}{
Checks if there are processing settings, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$has_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the processing method/s.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-has_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-has_analyses}{}}}
\subsection{Method \code{has_analyses()}}{
Checks if analyses are present, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$has_analyses()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-has_results"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-has_results}{}}}
\subsection{Method \code{has_results()}}{
Checks if results are present, returning \code{TRUE} or \code{FALSE}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$has_results(names = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{names}}{A string or a vector of strings with the name/s of the
results data. The actual names depends of the applied algorithms. For
instance, when algorithms via patRoon are used, the name of the module
data is patRoon.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-run_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-run_workflow}{}}}
\subsection{Method \code{run_workflow()}}{
Runs all processing results represented by added processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$run_workflow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-save"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-save}{}}}
\subsection{Method \code{save()}}{
Saves the engine data as \strong{sqlite} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$save(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A string with the full file path of the \strong{sqlite} file. If \code{NA} (the default) and no file
header is defined in the engine, the file name is automatically created with the engine class name and the date.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-load"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-load}{}}}
\subsection{Method \code{load()}}{
Loads the engine data from an \strong{sqlite} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$load(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A string with the full file path of the \strong{sqlite} file. If \code{NA} (the default) and no file
header is defined in the engine, the file name is automatically created with the engine class name and the date.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-export_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-export_headers}{}}}
\subsection{Method \code{export_headers()}}{
Exports the headers as \emph{json} (the default) or \emph{rds}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$export_headers(format = "json", name = "headers", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-export_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-export_settings}{}}}
\subsection{Method \code{export_settings()}}{
Exports the settings as \emph{json} (the default) or \emph{rds}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$export_settings(
  call = NULL,
  format = "json",
  name = "settings",
  path = getwd()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the processing method/s to be exported.
When \code{call} is \code{NULL} all settings are saved.}

\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-export_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-export_analyses}{}}}
\subsection{Method \code{export_analyses()}}{
Exports the analyses as \emph{json} (the default) or \emph{rds}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$export_analyses(
  analyses = NULL,
  format = "json",
  name = "analyses",
  path = getwd()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name of the analyses.}

\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-export"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-export}{}}}
\subsection{Method \code{export()}}{
Exports the engine data as as \emph{json} (the default) or \emph{rds}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$export(format = "json", name = "EngineData", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-import_headers"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-import_headers}{}}}
\subsection{Method \code{import_headers()}}{
Imports headers from an \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$import_headers(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file to be imported.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-import_settings"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-import_settings}{}}}
\subsection{Method \code{import_settings()}}{
Imports settings from an \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$import_settings(file = NA_character_, replace = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file to be imported.}

\item{\code{replace}}{Logical. When \code{TRUE}, existing settings are replaced by the new settings with the same call name.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-import_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-import_analyses}{}}}
\subsection{Method \code{import_analyses()}}{
Imports analyses from an \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$import_analyses(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file to be imported.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-import"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-import}{}}}
\subsection{Method \code{import()}}{
Imports a CoreEngine saved as \emph{json} or \emph{rds}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$import(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file representing a CoreEngine.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-run_app"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-run_app}{}}}
\subsection{Method \code{run_app()}}{
Runs a Shiny app to explore and manage the engine.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$run_app()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-processing_methods"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-processing_methods}{}}}
\subsection{Method \code{processing_methods()}}{
Data.table with available data processing methods.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$processing_methods()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CoreEngine-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CoreEngine-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CoreEngine$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
