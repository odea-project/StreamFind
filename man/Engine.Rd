% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_Engine.R
\name{Engine}
\alias{Engine}
\title{Generic (top level) Engine class for project management}
\description{
The \link{Engine} R6 class is used to harmonize the interface across different data types for data management and processing.
}
\note{
The engine data is saved in an \strong{rds} file and loaded in the app. If save file is
defined in the engine it is used, otherwise the save file name is automatically set to the
engine class name and the date in the format \strong{rds}. Changes made in the app can be saved
in the \strong{rds} file and then loaded to continue working on the engine by scripting.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{Metadata}}{A \link{Metadata} object. When setting it can also be a named list with elements of length one.}

\item{\code{Workflow}}{A \link{Workflow} S3 class object. When settings can also be a list of \link{ProcessingStep} objects or a full path string to an \strong{rds} or \strong{json} file containing a \link{Workflow} object.}

\item{\code{Analyses}}{An \link{Analyses} S3 class object or a child for a specific data type.}

\item{\code{Results}}{A named list of \link{Results} S3 class objects or a child for specific results.}

\item{\code{AuditTrail}}{An \link{AuditTrail} S3 class object. Only getter method.}

\item{\code{Config}}{An \link{EngineConfig} S3 class object.}

\item{\code{type}}{A character string with the data type of the engine.
This is a read-only field.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Engine-new}{\code{Engine$new()}}
\item \href{#method-Engine-clear_cache}{\code{Engine$clear_cache()}}
\item \href{#method-Engine-clear_results}{\code{Engine$clear_results()}}
\item \href{#method-Engine-get_cache_info}{\code{Engine$get_cache_info()}}
\item \href{#method-Engine-get_cache_size}{\code{Engine$get_cache_size()}}
\item \href{#method-Engine-has_analyses}{\code{Engine$has_analyses()}}
\item \href{#method-Engine-has_results}{\code{Engine$has_results()}}
\item \href{#method-Engine-load}{\code{Engine$load()}}
\item \href{#method-Engine-print}{\code{Engine$print()}}
\item \href{#method-Engine-save}{\code{Engine$save()}}
\item \href{#method-Engine-run}{\code{Engine$run()}}
\item \href{#method-Engine-run_workflow}{\code{Engine$run_workflow()}}
\item \href{#method-Engine-report_quarto}{\code{Engine$report_quarto()}}
\item \href{#method-Engine-run_app}{\code{Engine$run_app()}}
\item \href{#method-Engine-clone}{\code{Engine$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-new"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-new}{}}}
\subsection{Method \code{new()}}{
Creates an \link{Engine} R6 class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$new(metadata = NULL, workflow = NULL, analyses = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metadata}}{A named list or a \code{Metadata} object. Each list element must have length one.
There is no type restrictions except for name (must be type character), author (must be type
character) and date (must be class POSIXct or POSIXt). A file entry must be a character string
with a full path to a file.}

\item{\code{workflow}}{A \code{Workflow} object, a list of \code{ProcessingStep} objects or a character string
with a full path to a \emph{rds} or \emph{json} file containing a \code{Workflow}.}

\item{\code{analyses}}{An \code{Analyses} child class or a data specific analyses input.
See each data specific engine for details.}

\item{\code{...}}{Additional arguments passed to the method, internal use only.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-clear_cache"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-clear_cache}{}}}
\subsection{Method \code{clear_cache()}}{
Clears the cache.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$clear_cache(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the names of the cache categories to clear. An integer
vector with the indices of the categories to clear can alternatively be given to remove
categories. If \code{NULL} (the default), the entire cache is cleared. Use the method
\code{get_cache_info} to get the cached categories.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-clear_results"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-clear_results}{}}}
\subsection{Method \code{clear_results()}}{
Clears all result objects in the \code{Analyses} field.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$clear_results()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-get_cache_info"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-get_cache_info}{}}}
\subsection{Method \code{get_cache_info()}}{
Gets a \code{data.table} with the cached data categories.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$get_cache_info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-get_cache_size"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-get_cache_size}{}}}
\subsection{Method \code{get_cache_size()}}{
Gets the current size of the cache file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$get_cache_size()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-has_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-has_analyses}{}}}
\subsection{Method \code{has_analyses()}}{
Checks if there are analyses files/objects in the \code{Analyses} field.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$has_analyses()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-has_results"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-has_results}{}}}
\subsection{Method \code{has_results()}}{
Checks if there are \link{Results} in the \code{Analyses} field.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$has_results(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A string or a vector of strings with the name/s of the \link{Results}
child/s for checking the presence.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-load"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-load}{}}}
\subsection{Method \code{load()}}{
Loads engine data from an \strong{sqlite} or \strong{rds} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$load(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A string with the full file path of the \strong{sqlite} or \strong{rds} file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-print"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-print}{}}}
\subsection{Method \code{print()}}{
Prints a summary to the console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-save"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-save}{}}}
\subsection{Method \code{save()}}{
Saves the engine data as an \strong{sqlite} or \strong{rds} file. If no file path is
given, the engine data is saved in the file of the \link{Metadata} field. If no file
is specified in the \code{Metadata} the engine data is saved as \strong{rds} format with the engine
class and date in the \code{Metadata} as file name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$save(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A string with the full file path of the \strong{sqlite} or \strong{rds} file.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-run"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-run}{}}}
\subsection{Method \code{run()}}{
Runs a processing method defined by the \link{ProcessingStep} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$run(step = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{step}}{A \link{ProcessingStep} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-run_workflow"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-run_workflow}{}}}
\subsection{Method \code{run_workflow()}}{
Runs all \link{ProcessingStep} objects in the \link{Workflow}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$run_workflow()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-report_quarto"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-report_quarto}{}}}
\subsection{Method \code{report_quarto()}}{
Generates a Quarto report from the analysis results based on a predefined template .qmd file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$report_quarto(
  template = NULL,
  output_file = NULL,
  output_dir = NULL,
  execute_dir = getwd(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{template}}{A string with the full file path to the Quarto (.qmd) template file.}

\item{\code{output_file}}{A string with the output file name (without extension). If NULL, uses the template name without extension.}

\item{\code{output_dir}}{A string with the directory where the final output files should be moved. If NULL, files remain in the QMD directory.}

\item{\code{execute_dir}}{A string with the directory where the report is executed. Default is the current working directory.}

\item{\code{...}}{Additional arguments passed to quarto::quarto_render().}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-run_app"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-run_app}{}}}
\subsection{Method \code{run_app()}}{
Runs the StreamFind Shiny app to explore, process and manage the engine data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$run_app()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Engine-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Engine-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Engine$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
