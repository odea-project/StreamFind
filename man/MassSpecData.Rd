% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_R6_MassSpecData.R
\name{MassSpecData}
\alias{MassSpecData}
\title{\strong{MassSpecData} R6 class and methods}
\description{
The MassSpecData R6 class is a framework with methods for parsing, processing,
visualizing and storing MS data.
}
\references{
\insertRef{patroon01}{streamFind}

\insertRef{patroon02}{streamFind}

\insertRef{mzr01}{streamFind}

\insertRef{mzr02}{streamFind}

\insertRef{mzr03}{streamFind}

\insertRef{mzr04}{streamFind}

\insertRef{proteo01}{streamFind}

\insertRef{proteo02}{streamFind}

\insertRef{xcms01}{streamFind}

\insertRef{xcms02}{streamFind}

\insertRef{xcms03}{streamFind}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MassSpecData-new}{\code{MassSpecData$new()}}
\item \href{#method-MassSpecData-print}{\code{MassSpecData$print()}}
\item \href{#method-MassSpecData-get_headers}{\code{MassSpecData$get_headers()}}
\item \href{#method-MassSpecData-get_analyses}{\code{MassSpecData$get_analyses()}}
\item \href{#method-MassSpecData-get_number_analyses}{\code{MassSpecData$get_number_analyses()}}
\item \href{#method-MassSpecData-get_overview}{\code{MassSpecData$get_overview()}}
\item \href{#method-MassSpecData-get_analysis_names}{\code{MassSpecData$get_analysis_names()}}
\item \href{#method-MassSpecData-get_replicate_names}{\code{MassSpecData$get_replicate_names()}}
\item \href{#method-MassSpecData-get_blank_names}{\code{MassSpecData$get_blank_names()}}
\item \href{#method-MassSpecData-get_files}{\code{MassSpecData$get_files()}}
\item \href{#method-MassSpecData-get_formats}{\code{MassSpecData$get_formats()}}
\item \href{#method-MassSpecData-get_types}{\code{MassSpecData$get_types()}}
\item \href{#method-MassSpecData-get_time_stamps}{\code{MassSpecData$get_time_stamps()}}
\item \href{#method-MassSpecData-get_spectra_number}{\code{MassSpecData$get_spectra_number()}}
\item \href{#method-MassSpecData-get_spectra_mode}{\code{MassSpecData$get_spectra_mode()}}
\item \href{#method-MassSpecData-get_spectra_levels}{\code{MassSpecData$get_spectra_levels()}}
\item \href{#method-MassSpecData-get_mz_low}{\code{MassSpecData$get_mz_low()}}
\item \href{#method-MassSpecData-get_mz_high}{\code{MassSpecData$get_mz_high()}}
\item \href{#method-MassSpecData-get_rt_start}{\code{MassSpecData$get_rt_start()}}
\item \href{#method-MassSpecData-get_rt_end}{\code{MassSpecData$get_rt_end()}}
\item \href{#method-MassSpecData-get_polarities}{\code{MassSpecData$get_polarities()}}
\item \href{#method-MassSpecData-get_chromatograms_number}{\code{MassSpecData$get_chromatograms_number()}}
\item \href{#method-MassSpecData-get_instrument_info}{\code{MassSpecData$get_instrument_info()}}
\item \href{#method-MassSpecData-get_software_info}{\code{MassSpecData$get_software_info()}}
\item \href{#method-MassSpecData-get_run}{\code{MassSpecData$get_run()}}
\item \href{#method-MassSpecData-get_tic}{\code{MassSpecData$get_tic()}}
\item \href{#method-MassSpecData-get_bpc}{\code{MassSpecData$get_bpc()}}
\item \href{#method-MassSpecData-get_spectra}{\code{MassSpecData$get_spectra()}}
\item \href{#method-MassSpecData-get_chromatograms}{\code{MassSpecData$get_chromatograms()}}
\item \href{#method-MassSpecData-get_eic}{\code{MassSpecData$get_eic()}}
\item \href{#method-MassSpecData-get_ms1}{\code{MassSpecData$get_ms1()}}
\item \href{#method-MassSpecData-get_ms2}{\code{MassSpecData$get_ms2()}}
\item \href{#method-MassSpecData-get_settings}{\code{MassSpecData$get_settings()}}
\item \href{#method-MassSpecData-get_features}{\code{MassSpecData$get_features()}}
\item \href{#method-MassSpecData-get_features_eic}{\code{MassSpecData$get_features_eic()}}
\item \href{#method-MassSpecData-get_features_ms1}{\code{MassSpecData$get_features_ms1()}}
\item \href{#method-MassSpecData-get_features_ms2}{\code{MassSpecData$get_features_ms2()}}
\item \href{#method-MassSpecData-get_alignment}{\code{MassSpecData$get_alignment()}}
\item \href{#method-MassSpecData-get_groups}{\code{MassSpecData$get_groups()}}
\item \href{#method-MassSpecData-get_groups_ms1}{\code{MassSpecData$get_groups_ms1()}}
\item \href{#method-MassSpecData-get_groups_ms2}{\code{MassSpecData$get_groups_ms2()}}
\item \href{#method-MassSpecData-add_headers}{\code{MassSpecData$add_headers()}}
\item \href{#method-MassSpecData-add_settings}{\code{MassSpecData$add_settings()}}
\item \href{#method-MassSpecData-add_analyses}{\code{MassSpecData$add_analyses()}}
\item \href{#method-MassSpecData-add_replicate_names}{\code{MassSpecData$add_replicate_names()}}
\item \href{#method-MassSpecData-add_blank_names}{\code{MassSpecData$add_blank_names()}}
\item \href{#method-MassSpecData-add_features}{\code{MassSpecData$add_features()}}
\item \href{#method-MassSpecData-add_groups}{\code{MassSpecData$add_groups()}}
\item \href{#method-MassSpecData-add_alignment}{\code{MassSpecData$add_alignment()}}
\item \href{#method-MassSpecData-load_spectra}{\code{MassSpecData$load_spectra()}}
\item \href{#method-MassSpecData-load_chromatograms}{\code{MassSpecData$load_chromatograms()}}
\item \href{#method-MassSpecData-load_features_ms1}{\code{MassSpecData$load_features_ms1()}}
\item \href{#method-MassSpecData-load_features_ms2}{\code{MassSpecData$load_features_ms2()}}
\item \href{#method-MassSpecData-load_groups_ms1}{\code{MassSpecData$load_groups_ms1()}}
\item \href{#method-MassSpecData-load_groups_ms2}{\code{MassSpecData$load_groups_ms2()}}
\item \href{#method-MassSpecData-remove_headers}{\code{MassSpecData$remove_headers()}}
\item \href{#method-MassSpecData-remove_settings}{\code{MassSpecData$remove_settings()}}
\item \href{#method-MassSpecData-remove_analyses}{\code{MassSpecData$remove_analyses()}}
\item \href{#method-MassSpecData-remove_features}{\code{MassSpecData$remove_features()}}
\item \href{#method-MassSpecData-remove_features_ms1}{\code{MassSpecData$remove_features_ms1()}}
\item \href{#method-MassSpecData-remove_features_ms2}{\code{MassSpecData$remove_features_ms2()}}
\item \href{#method-MassSpecData-remove_groups}{\code{MassSpecData$remove_groups()}}
\item \href{#method-MassSpecData-remove_groups_ms1}{\code{MassSpecData$remove_groups_ms1()}}
\item \href{#method-MassSpecData-remove_groups_ms2}{\code{MassSpecData$remove_groups_ms2()}}
\item \href{#method-MassSpecData-remove_alignment}{\code{MassSpecData$remove_alignment()}}
\item \href{#method-MassSpecData-subset_analyses}{\code{MassSpecData$subset_analyses()}}
\item \href{#method-MassSpecData-subset_features}{\code{MassSpecData$subset_features()}}
\item \href{#method-MassSpecData-subset_groups}{\code{MassSpecData$subset_groups()}}
\item \href{#method-MassSpecData-has_analyses}{\code{MassSpecData$has_analyses()}}
\item \href{#method-MassSpecData-has_loaded_spectra}{\code{MassSpecData$has_loaded_spectra()}}
\item \href{#method-MassSpecData-has_loaded_chromatograms}{\code{MassSpecData$has_loaded_chromatograms()}}
\item \href{#method-MassSpecData-has_loaded_features_ms1}{\code{MassSpecData$has_loaded_features_ms1()}}
\item \href{#method-MassSpecData-has_loaded_features_ms2}{\code{MassSpecData$has_loaded_features_ms2()}}
\item \href{#method-MassSpecData-has_loaded_groups_ms1}{\code{MassSpecData$has_loaded_groups_ms1()}}
\item \href{#method-MassSpecData-has_loaded_groups_ms2}{\code{MassSpecData$has_loaded_groups_ms2()}}
\item \href{#method-MassSpecData-has_settings}{\code{MassSpecData$has_settings()}}
\item \href{#method-MassSpecData-has_features}{\code{MassSpecData$has_features()}}
\item \href{#method-MassSpecData-has_alignment}{\code{MassSpecData$has_alignment()}}
\item \href{#method-MassSpecData-has_groups}{\code{MassSpecData$has_groups()}}
\item \href{#method-MassSpecData-plot_spectra}{\code{MassSpecData$plot_spectra()}}
\item \href{#method-MassSpecData-plot_xic}{\code{MassSpecData$plot_xic()}}
\item \href{#method-MassSpecData-plot_eic}{\code{MassSpecData$plot_eic()}}
\item \href{#method-MassSpecData-plot_tic}{\code{MassSpecData$plot_tic()}}
\item \href{#method-MassSpecData-plot_bpc}{\code{MassSpecData$plot_bpc()}}
\item \href{#method-MassSpecData-plot_ms2}{\code{MassSpecData$plot_ms2()}}
\item \href{#method-MassSpecData-plot_ms1}{\code{MassSpecData$plot_ms1()}}
\item \href{#method-MassSpecData-plot_features}{\code{MassSpecData$plot_features()}}
\item \href{#method-MassSpecData-map_features}{\code{MassSpecData$map_features()}}
\item \href{#method-MassSpecData-plot_features_ms1}{\code{MassSpecData$plot_features_ms1()}}
\item \href{#method-MassSpecData-plot_features_ms2}{\code{MassSpecData$plot_features_ms2()}}
\item \href{#method-MassSpecData-plot_alignment}{\code{MassSpecData$plot_alignment()}}
\item \href{#method-MassSpecData-plot_groups}{\code{MassSpecData$plot_groups()}}
\item \href{#method-MassSpecData-plot_groups_ms1}{\code{MassSpecData$plot_groups_ms1()}}
\item \href{#method-MassSpecData-plot_groups_ms2}{\code{MassSpecData$plot_groups_ms2()}}
\item \href{#method-MassSpecData-plot_groups_overview}{\code{MassSpecData$plot_groups_overview()}}
\item \href{#method-MassSpecData-find_features}{\code{MassSpecData$find_features()}}
\item \href{#method-MassSpecData-group_features}{\code{MassSpecData$group_features()}}
\item \href{#method-MassSpecData-as_features_patRoon}{\code{MassSpecData$as_features_patRoon()}}
\item \href{#method-MassSpecData-check_correspondence}{\code{MassSpecData$check_correspondence()}}
\item \href{#method-MassSpecData-save_headers}{\code{MassSpecData$save_headers()}}
\item \href{#method-MassSpecData-save_settings}{\code{MassSpecData$save_settings()}}
\item \href{#method-MassSpecData-save_analyses}{\code{MassSpecData$save_analyses()}}
\item \href{#method-MassSpecData-save_groups}{\code{MassSpecData$save_groups()}}
\item \href{#method-MassSpecData-save}{\code{MassSpecData$save()}}
\item \href{#method-MassSpecData-import_headers}{\code{MassSpecData$import_headers()}}
\item \href{#method-MassSpecData-import_settings}{\code{MassSpecData$import_settings()}}
\item \href{#method-MassSpecData-import_analyses}{\code{MassSpecData$import_analyses()}}
\item \href{#method-MassSpecData-import_groups}{\code{MassSpecData$import_groups()}}
\item \href{#method-MassSpecData-processing_function_calls}{\code{MassSpecData$processing_function_calls()}}
\item \href{#method-MassSpecData-clone}{\code{MassSpecData$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-new"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-new}{}}}
\subsection{Method \code{new()}}{
Checks the analyses argument as a character/integer vector to match
analyses names or indices from the \code{MassSpecData} object. Returns a valid
character vector with analysis names or \code{NULL} for non-matching.


Gets an entry from the analyses private field.


Creates an R6 MassSpecData class object. When \code{headers} are not given
(i.e., \code{NULL}), a default Headers S3 class object is generated with name
as \code{NA_character}, path as \code{get_wd()} and date as \code{Sys.time()}.
See \code{?Headers} for more information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$new(
  files = NULL,
  runParallel = FALSE,
  headers = NULL,
  settings = NULL,
  analyses = NULL,
  groups = NULL,
  alignment = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{files}}{A character vector with full file path/s of \emph{mzML}
or \emph{mzXML} file/s or a data.frame with the columns \emph{file}, \emph{replicate}
and \emph{blank} with the full file path of \emph{mzML} or \emph{mzXML} file/s
(character), the replicate group name (character) and the associated blank
replicate group name (character). Note the file paths must have the extension
\emph{.mzML} or \emph{.mzXML}.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{headers}}{A named list with headers or a Headers S3 class object.
Each list element must have length one. There is no type restrictions
except for name (must be type character), path (must be type
character) and date (must be class POSIXct or class POSIXt). See more
information in \code{?Headers}.}

\item{\code{settings}}{A named list of ProcessingSettings S3 class objects or a
single ProcessingSettings S3 class object. The list names should match
the call name of each ProcessingSettings object. Alternatively, a named
list with call name, algorithm and parameters to be transformed and added
as ProcessingSettings S3 class object.}

\item{\code{analyses}}{A MassSpecAnalysis S3 class object or a list with
MassSpecAnalysis S3 class objects as elements (see \code{?MassSpecAnalysis}
for more information).}

\item{\code{groups}}{A data.table with feature groups from correspondence across
MS analyses as obtained by the method \code{get_groups()}. Note that
correspondence of features across MS analyses is performed with the
method \code{group_features()}.}

\item{\code{alignment}}{A named list with a data.table for each analysis with the
results from alignment of features or correspondence of features across
analyses. The names of the list must match the names of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{MassSpecData} class object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-print"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-print}{}}}
\subsection{Method \code{print()}}{
Prints a summary of the \code{MassSpecData} object in the console.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Console text.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_headers"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_headers}{}}}
\subsection{Method \code{get_headers()}}{
Gets the headers.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_headers(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the name/s of the header elements.
When \code{NULL}, the entire headers list is returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The headers list or the header elements as defined by \code{value}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_analyses}{}}}
\subsection{Method \code{get_analyses()}}{
Gets analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The list of analyses or the analyses as defined by \code{analyses}
argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_number_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_number_analyses}{}}}
\subsection{Method \code{get_number_analyses()}}{
Gets the number of analyses present.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_number_analyses()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_overview"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_overview}{}}}
\subsection{Method \code{get_overview()}}{
Gets the overview data.frame with all the analysis types,
names, replicates, associated blank replicates, polarities and full
file paths.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_overview()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.frame with columns type, analysis, replicate, blank
polarity and file.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_analysis_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_analysis_names}{}}}
\subsection{Method \code{get_analysis_names()}}{
Gets the analysis names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_analysis_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_replicate_names}{}}}
\subsection{Method \code{get_replicate_names()}}{
Gets the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_replicate_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_blank_names}{}}}
\subsection{Method \code{get_blank_names()}}{
Gets the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_blank_names(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_files"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_files}{}}}
\subsection{Method \code{get_files()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_files(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_formats"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_formats}{}}}
\subsection{Method \code{get_formats()}}{
Gets the file format of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_formats(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_types"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_types}{}}}
\subsection{Method \code{get_types()}}{
Gets the type of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_types(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_time_stamps"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_time_stamps}{}}}
\subsection{Method \code{get_time_stamps()}}{
Gets the time stamp of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_time_stamps(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_spectra_number"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_spectra_number}{}}}
\subsection{Method \code{get_spectra_number()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_spectra_number(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_spectra_mode"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_spectra_mode}{}}}
\subsection{Method \code{get_spectra_mode()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_spectra_mode(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_spectra_levels"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_spectra_levels}{}}}
\subsection{Method \code{get_spectra_levels()}}{
Gets the spectra levels of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_spectra_levels(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list for each analysis with an integer vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_mz_low"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_mz_low}{}}}
\subsection{Method \code{get_mz_low()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_mz_low(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_mz_high"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_mz_high}{}}}
\subsection{Method \code{get_mz_high()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_mz_high(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_rt_start"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_rt_start}{}}}
\subsection{Method \code{get_rt_start()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_rt_start(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_rt_end"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_rt_end}{}}}
\subsection{Method \code{get_rt_end()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_rt_end(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_polarities"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_polarities}{}}}
\subsection{Method \code{get_polarities()}}{
Gets the polarity of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_polarities(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_chromatograms_number"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_chromatograms_number}{}}}
\subsection{Method \code{get_chromatograms_number()}}{
Gets the number of chromatograms in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_chromatograms_number(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_instrument_info"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_instrument_info}{}}}
\subsection{Method \code{get_instrument_info()}}{
Gets the instrument information for each analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_instrument_info(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_software_info"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_software_info}{}}}
\subsection{Method \code{get_software_info()}}{
Gets the software information for each analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_software_info(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_run"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_run}{}}}
\subsection{Method \code{get_run()}}{
Gets the run summary data.table for each analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_run(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_tic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_tic}{}}}
\subsection{Method \code{get_tic()}}{
Gets the total ion chromatogram (TIC) from the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_tic(analyses = NULL, levels = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with the TIC chromatogram.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_bpc"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_bpc}{}}}
\subsection{Method \code{get_bpc()}}{
Gets the base peak chromatogram (BPC) from the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_bpc(analyses = NULL, levels = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_spectra}{}}}
\subsection{Method \code{get_spectra()}}{
Gets spectra from the MS analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_spectra(
  analyses = NULL,
  levels = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  allTraces = TRUE,
  isolationWindow = 1.3,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{allTraces}}{Logical, when \code{TRUE} all level 2 data is returned.
When \code{FALSE} and level has 2, only the MS2 traces of MS1 targets
are returned, using the \code{isolationWindow} to calculate the mass window.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{minIntensityMS1}}{Numeric value with the minimum intensity of level 1
data (i.e., MS1 data).}

\item{\code{minIntensityMS2}}{Numeric value with the minimum intensity of level 2
data (i.e., MS2 data).}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with spectra for each analyses and
targets, when defined.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_chromatograms}{}}}
\subsection{Method \code{get_chromatograms()}}{
Gets chromatograms from the MS analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_chromatograms(
  analyses = NULL,
  index = NA_integer_,
  minIntensity = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{index}}{Integer value with the index.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table with chromatogram/s.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_eic}{}}}
\subsection{Method \code{get_eic()}}{
Gets extract ion chromatograms (EIC) from the analyses based
on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_eic(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_ms1}{}}}
\subsection{Method \code{get_ms1()}}{
Gets MS1 data from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_ms1(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  mzClust = 0.003,
  verbose = FALSE,
  minIntensity = 1000,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_ms2}{}}}
\subsection{Method \code{get_ms2()}}{
Gets MS2 data from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_ms2(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  isolationWindow = 1.3,
  mzClust = 0.005,
  verbose = FALSE,
  minIntensity = 0,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_settings}{}}}
\subsection{Method \code{get_settings()}}{
Gets processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the
processing method/s.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list with ProcessingSettings S3 class object/s.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_features}{}}}
\subsection{Method \code{get_features()}}{
Gets features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  filtered = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_features_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_features_eic}{}}}
\subsection{Method \code{get_features_eic()}}{
Gets EIC of features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_features_eic(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtExpand = 120,
  mzExpand = 0.005,
  filtered = FALSE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_features_ms1}{}}}
\subsection{Method \code{get_features_ms1()}}{
Gets an averaged MS1 spectrum for features in analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_features_ms1(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 100),
  mzClust = 0.003,
  minIntensity = 1000,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS1 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS1}}{Logical. When \code{TRUE} and if available, previously loaded MS1
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_features_ms2}{}}}
\subsection{Method \code{get_features_ms2()}}{
Gets an averaged MS2 spectrum for features in analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_features_ms2(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  isolationWindow = 1.3,
  mzClust = 0.003,
  minIntensity = 0,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS2 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS2}}{Logical. When \code{TRUE} and if available, previously loaded MS2
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_alignment}{}}}
\subsection{Method \code{get_alignment()}}{
Gets alignment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_alignment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data.frame.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_groups}{}}}
\subsection{Method \code{get_groups()}}{
Gets feature groups from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_groups(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  filtered = FALSE,
  onlyIntensities = FALSE,
  average = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{onlyIntensities}}{Logical. When \code{TRUE}, only feature intensity values
are returned. Feature metadata for each group is excluded.}

\item{\code{average}}{Logical. When \code{TRUE}, feature intensities from each group are
averaged and returned for each analysis replicate group.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_groups_ms1}{}}}
\subsection{Method \code{get_groups_ms1()}}{
Gets an averaged MS1 spectrum for feature groups in analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_groups_ms1(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 90),
  mzClustFeatures = 0.003,
  minIntensityFeatures = 1000,
  loadedFeaturesMS1 = TRUE,
  mzClustGroups = 0.003,
  minIntensityGroups = 1000,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  loadedGroupsMS1 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS1}}{Logical. When \code{TRUE} and if available, previously
loaded features MS1 data is used instead of extraction from raw data.}

\item{\code{mzClustGroups}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for feature groups. Highly dependent on the
mass resolution of the MS data.}

\item{\code{minIntensityGroups}}{Numeric value with the minimum intensity for
feature groups.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedGroupsMS1}}{Logical. When \code{TRUE} and if available, previously
loaded feature groups MS1 data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-get_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-get_groups_ms2}{}}}
\subsection{Method \code{get_groups_ms2()}}{
Gets an averaged MS2 spectrum for feature groups in analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$get_groups_ms2(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  isolationWindow = 1.3,
  mzClustFeatures = 0.003,
  minIntensityFeatures = 100,
  loadedFeaturesMS2 = TRUE,
  mzClustGroups = 0.003,
  minIntensityGroups = 100,
  groupBy = "groups",
  verbose = FALSE,
  filtered = FALSE,
  loadedGroupsMS2 = TRUE,
  runParallel = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS2}}{Logical. When \code{TRUE} and if available, previously
loaded features MS2 data is used instead of extraction from raw data.}

\item{\code{mzClustGroups}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for feature groups. Highly dependent on the
mass resolution of the MS data.}

\item{\code{minIntensityGroups}}{Numeric value with the minimum intensity for
feature groups.}

\item{\code{groupBy}}{String with the way of grouping. Possible values are \code{groups}
and \code{replicates} to groups by feature groups or feature groups and
replicates, respectively.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedGroupsMS2}}{Logical. When \code{TRUE} and if available, previously
loaded feature groups MS2 data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data.table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_headers"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_headers}{}}}
\subsection{Method \code{add_headers()}}{
Adds headers. If an argument or element "name" is given, it must
be type character. If an argument or element path is given, it must be
type character and exist. If an argument or element date is given, it
must be class POSIXct or POSIXt. If given date is character, conversion
to class POSIXct or POSIXt is attempted. See \code{?Headers} for more
information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_headers(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Arguments to be added as headers. Note that all given arguments
must be of length one. There is no type limitations. The name of the argument
becomes the name of the header entry. Alternatively, a single list argument
with the headers (all length one) can be given.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_settings}{}}}
\subsection{Method \code{add_settings()}}{
Adds processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_settings(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A named list of ProcessingSettings S3 class objects or a
single ProcessingSettings S3 class object. The list names should match
the call name of each ProcessingSettings object. Alternatively, a named
list with call name, algorithm and parameters to be transformed and added
as ProcessingSettings S3 class object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_analyses}{}}}
\subsection{Method \code{add_analyses()}}{
Adds analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A MassSpecAnalysis S3 class object or a list with
MassSpecAnalysis S3 class objects as elements (see \code{?MassSpecAnalysis} for
more information).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_replicate_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_replicate_names}{}}}
\subsection{Method \code{add_replicate_names()}}{
Adds or redefines the analysis replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_replicate_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis replicate names.
Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_blank_names"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_blank_names}{}}}
\subsection{Method \code{add_blank_names()}}{
Adds or redefines the analysis blank replicate names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_blank_names(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the analysis blank replicate names.
Must be of the same length as the number of analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_features}{}}}
\subsection{Method \code{add_features()}}{
Adds features to analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_features(features = NULL, replace = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{A data.table with features from MS analyses as obtained
by the method \code{get_features()}. Note that features are obtained with the
method \code{find_features()}.}

\item{\code{replace}}{Logical. When \code{TRUE}, existing features are replaced by
the new features.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_groups}{}}}
\subsection{Method \code{add_groups()}}{
Adds feature groups. Note that existing features groups are
replaced!
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_groups(groups = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A data.table with feature groups from correspondence across
MS analyses as obtained by the method \code{get_groups()}. Note that
correspondence of features across MS analyses is performed with the
method \code{group_features()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-add_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-add_alignment}{}}}
\subsection{Method \code{add_alignment()}}{
Adds time alignment results.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$add_alignment(alignment = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alignment}}{A named list with a data.table for each analysis with the
results from alignment of features or correspondence of features across
analyses. The names of the list must match the names of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_spectra}{}}}
\subsection{Method \code{load_spectra()}}{
Loads all spectra from all analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_spectra(runParallel = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_chromatograms}{}}}
\subsection{Method \code{load_chromatograms()}}{
Loads all chromatograms from all analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_chromatograms(runParallel = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_features_ms1}{}}}
\subsection{Method \code{load_features_ms1()}}{
Loads and average MS1 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_features_ms1(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_features_ms2}{}}}
\subsection{Method \code{load_features_ms2()}}{
Loads and average MS2 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_features_ms2(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_groups_ms1}{}}}
\subsection{Method \code{load_groups_ms1()}}{
Loads and average MS1 spectra from feature groups. If MS1
spectra from features are already loaded, the feature MS1 spectra are
used for averaging into the respective feature group. If features MS1
spectra are not present, settings for loading and averaging features MS1
spectra (i.e., settings with call name "load_features_ms1") must
be given in the \code{settingsFeatures} argument or added beforehand with the
\code{add_settings} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_groups_ms1(settings = NULL, settingsFeatures = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}

\item{\code{settingsFeatures}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method for features. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
features processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-load_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-load_groups_ms2}{}}}
\subsection{Method \code{load_groups_ms2()}}{
Loads and average MS2 spectra from feature groups. If MS2
spectra from features are already loaded, the feature MS2 spectra are
used for averaging into the respective feature group. If features MS2
spectra are not present, settings for loading and averaging features MS2
spectra (i.e., settings with call name "load_features_ms2") must
be given in the \code{settingsFeatures} argument or added beforehand with the
\code{add_settings} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$load_groups_ms2(settings = NULL, settingsFeatures = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}

\item{\code{settingsFeatures}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method for features. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
features processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_headers"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_headers}{}}}
\subsection{Method \code{remove_headers()}}{
Removes headers entries. Note that the name, path and date headers
cannot be removed only changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_headers(value = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{A character vector with the name/s of the elements in headers
to be removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_settings}{}}}
\subsection{Method \code{remove_settings()}}{
Removes settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the
processing method/s to be removed. When \code{call} is \code{NULL} all
settings are removed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_analyses}{}}}
\subsection{Method \code{remove_analyses()}}{
Removes analyses. Note that unique feature
groups from the removed analyses are also removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_features}{}}}
\subsection{Method \code{remove_features()}}{
Remove features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_features(features = NULL, filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_features_ms1}{}}}
\subsection{Method \code{remove_features_ms1()}}{
Removes loaded MS1 spectra from features in the analyses. In practice,
the column \emph{ms1} in the features data.table of each analysis object
is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_features_ms1()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_features_ms2}{}}}
\subsection{Method \code{remove_features_ms2()}}{
Removes loaded MS2 spectra from features in the analyses. In practice,
the column \emph{ms2} in the features data.table of each analysis object
is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_features_ms2()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_groups}{}}}
\subsection{Method \code{remove_groups()}}{
Removes feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_groups(groups = NULL, filtered = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_groups_ms1}{}}}
\subsection{Method \code{remove_groups_ms1()}}{
Removes loaded MS1 spectra from feature groups. In practice, the column
\emph{ms1} in the groups data.table is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_groups_ms1()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_groups_ms2}{}}}
\subsection{Method \code{remove_groups_ms2()}}{
Removes loaded MS2 spectra from feature groups. In practice, the column
\emph{ms2} in the groups data.table is removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_groups_ms2()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-remove_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-remove_alignment}{}}}
\subsection{Method \code{remove_alignment()}}{
Removes alignment results.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$remove_alignment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-subset_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-subset_analyses}{}}}
\subsection{Method \code{subset_analyses()}}{
Subsets a \code{MassSpecData} object on analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$subset_analyses(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned \code{MassSpecData} object with only the analyses as
defined by the \code{analyses} argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-subset_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-subset_features}{}}}
\subsection{Method \code{subset_features()}}{
Subsets a \code{MassSpecData} object on features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$subset_features(features = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned \code{MassSpecData} object with only the features as
defined by the \code{features} argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-subset_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-subset_groups}{}}}
\subsection{Method \code{subset_groups()}}{
Subsets a \code{MassSpecData} object on groups from correspondence of features
across analyses. Note that when sub-setting groups, features that lose
correspondence are not removed but filtered with "grouping" added as
filter category/tag. Filtered features can be removed with the method
\code{remove_features(filtered = TRUE)}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$subset_groups(groups = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new cloned \code{MassSpecData} object with only the groups as
defined by the \code{groups} argument.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_analyses}{}}}
\subsection{Method \code{has_analyses()}}{
Checks if analyses are present.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_analyses()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_spectra}{}}}
\subsection{Method \code{has_loaded_spectra()}}{
Checks for loaded spectra in given analyses names/indices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_spectra(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_chromatograms"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_chromatograms}{}}}
\subsection{Method \code{has_loaded_chromatograms()}}{
Checks for loaded chromatograms in given analyses names/indices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_chromatograms(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_features_ms1}{}}}
\subsection{Method \code{has_loaded_features_ms1()}}{
Checks for loaded features MS1 in given analyses names/indices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_features_ms1(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_features_ms2}{}}}
\subsection{Method \code{has_loaded_features_ms2()}}{
Checks for loaded features MS2 in given analyses names/indices.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_features_ms2(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_groups_ms1}{}}}
\subsection{Method \code{has_loaded_groups_ms1()}}{
Checks for loaded feature groups MS1.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_groups_ms1()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_loaded_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_loaded_groups_ms2}{}}}
\subsection{Method \code{has_loaded_groups_ms2()}}{
Checks for loaded feature groups MS2.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_loaded_groups_ms2()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_settings}{}}}
\subsection{Method \code{has_settings()}}{
Checks if there are processing settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_settings(call = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the
processing method/s.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_features}{}}}
\subsection{Method \code{has_features()}}{
Checks if given analyses have features.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_features(analyses = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_alignment}{}}}
\subsection{Method \code{has_alignment()}}{
Checks if there is alignment of retention time from grouping
features across analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_alignment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-has_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-has_groups}{}}}
\subsection{Method \code{has_groups()}}{
Checks if there are feature groups from grouping features
across analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$has_groups()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Logical value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_spectra"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_spectra}{}}}
\subsection{Method \code{plot_spectra()}}{
Plots spectra for given MS analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_spectra(
  analyses = NULL,
  levels = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  allTraces = TRUE,
  isolationWindow = 1.3,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  runParallel = FALSE,
  colorBy = "analyses"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{levels}}{Integer value or vector of length one or two with the levels of
MS data. Possible values are 1 and 2 for MS1 and MS2 data, respectively.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{allTraces}}{Logical, when \code{TRUE} all level 2 data is returned.
When \code{FALSE} and level has 2, only the MS2 traces of MS1 targets
are returned, using the \code{isolationWindow} to calculate the mass window.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{minIntensityMS1}}{Numeric value with the minimum intensity of level 1
data (i.e., MS1 data).}

\item{\code{minIntensityMS2}}{Numeric value with the minimum intensity of level 2
data (i.e., MS2 data).}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses} (the default),
\code{levels}, \code{targets} or \code{replicates}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A 3D interactive plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_xic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_xic}{}}}
\subsection{Method \code{plot_xic()}}{
Plots extract ion chromatograms (EIC) and \emph{m/z} vs
retention time from the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_xic(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  runParallel = FALSE,
  legendNames = NULL,
  plotTargetMark = TRUE,
  targetsMark = NULL,
  ppmMark = 5,
  secMark = 10,
  numberRows = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{plotTargetMark}}{Logical, set to \code{TRUE} to plot a target mark.}

\item{\code{targetsMark}}{A data.frame with columns \code{mz} and \code{rt}, defining the
\emph{m/z} and retention time values of each target. Note that the number
of rows should match with the number of targets.}

\item{\code{ppmMark}}{A numeric vector of length one to define the mass deviation,
in ppm, of the target mark. The default is 5 ppm.}

\item{\code{secMark}}{A numeric vector of length one to define the time deviation,
in seconds, of the target mark. The default is 10 ppm.}

\item{\code{numberRows}}{An integer vector of length one to define the number of
rows to grid the plots. Note that each target is always plotted in one row
for all selected analyses.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An interactive plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_eic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_eic}{}}}
\subsection{Method \code{plot_eic()}}{
Plots extract ion chromatograms (EIC) from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_eic(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_tic"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_tic}{}}}
\subsection{Method \code{plot_tic()}}{
Plots the total ion chromatogram (TIC) of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_tic(
  analyses = NULL,
  title = NULL,
  colorBy = "analyses",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_bpc"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_bpc}{}}}
\subsection{Method \code{plot_bpc()}}{
Plots the base peak chromatogram (BPC) of the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_bpc(
  analyses = NULL,
  title = NULL,
  colorBy = "analyses",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_ms2}{}}}
\subsection{Method \code{plot_ms2()}}{
Plots MS2 spectra from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_ms2(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  isolationWindow = 1.3,
  mzClust = 0.005,
  verbose = FALSE,
  minIntensity = 0,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_ms1}{}}}
\subsection{Method \code{plot_ms1()}}{
Plots MS1 spectra from the analyses based on targets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_ms1(
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  mzClust = 0.001,
  verbose = FALSE,
  minIntensity = 1000,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{id}}{Character with the same length as \emph{m/z} and retention time
targets to be used as identifier/s. When not given, the id is built as a
combination of the \emph{m/z} and retention time ranges or values.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_features}{}}}
\subsection{Method \code{plot_features()}}{
Plots features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtExpand = 120,
  mzExpand = 0.005,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-map_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-map_features}{}}}
\subsection{Method \code{map_features()}}{
Plots a map of the retention time vs \emph{m/z} of features from analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$map_features(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  filtered = FALSE,
  xlim = 30,
  ylim = 0.05,
  showLegend = TRUE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{xlim}}{A length one or two numeric vector for setting the \emph{x}
limits (in seconds) of the plot.}

\item{\code{ylim}}{A length one or two numeric vector for setting the \emph{m/z}
limits of the plot.}

\item{\code{showLegend}}{Logical. Set to \code{TRUE} to show legend.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_features_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_features_ms1}{}}}
\subsection{Method \code{plot_features_ms1()}}{
Plots MS1 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_features_ms1(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 100),
  mzClust = 0.003,
  minIntensity = 1000,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS1 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS1}}{Logical. When \code{TRUE} and if available, previously loaded MS1
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_features_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_features_ms2}{}}}
\subsection{Method \code{plot_features_ms2()}}{
Plots MS2 spectra from features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_features_ms2(
  analyses = NULL,
  features = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  isolationWindow = 1.3,
  mzClust = 0.005,
  minIntensity = 0,
  verbose = FALSE,
  filtered = FALSE,
  loadedMS2 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{features}}{A character vector with the feature id/s or a data.frame or
data.table with a column named \code{feature} with the feature id/s. A column
named \code{analysis} can be given to specify from which analyses the features are
returned.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClust}}{Numeric value with the mass deviation threshold (in Da) to
cluster mass traces. Highly dependent on the mass resolution of the MS data.}

\item{\code{minIntensity}}{Numeric value with the minimum intensity.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedMS2}}{Logical. When \code{TRUE} and if available, previously loaded MS2
data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_alignment"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_alignment}{}}}
\subsection{Method \code{plot_alignment()}}{
Plots the results from the retention time alignment across analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_alignment()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A plot with the retention time alignment differences
for each sample.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_groups}{}}}
\subsection{Method \code{plot_groups()}}{
Plots feature groups EIC.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_groups(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtExpand = 120,
  mzExpand = 0.005,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_groups_ms1"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_groups_ms1}{}}}
\subsection{Method \code{plot_groups_ms1()}}{
Plots MS1 spectra from feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_groups_ms1(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtWindow = c(-2, 2),
  mzWindow = c(-5, 90),
  mzClustFeatures = 0.005,
  minIntensityFeatures = 1000,
  loadedFeaturesMS1 = TRUE,
  mzClustGroups = 0.005,
  minIntensityGroups = 1000,
  verbose = FALSE,
  filtered = FALSE,
  loadedGroupsMS1 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtWindow}}{Numeric vector of length two with the retention time values
(in seconds) for expanding left and right the retention time range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzWindow}}{Numeric vector of length two with the mass or mass-to-charge
ratio (\emph{m/z}) values (in Da) for expanding left and right the mass range.
The first element expands left and the second expands right.
Note that the first element should be negative to expand to the left.}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS1}}{Logical. When \code{TRUE} and if available, previously
loaded features MS1 data is used instead of extraction from raw data.}

\item{\code{mzClustGroups}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for feature groups. Highly dependent on the
mass resolution of the MS data.}

\item{\code{minIntensityGroups}}{Numeric value with the minimum intensity for
feature groups.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedGroupsMS1}}{Logical. When \code{TRUE} and if available, previously
loaded feature groups MS1 data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_groups_ms2"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_groups_ms2}{}}}
\subsection{Method \code{plot_groups_ms2()}}{
Plots MS1 spectra from feature groups in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_groups_ms2(
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  isolationWindow = 1.3,
  mzClustFeatures = 0.003,
  minIntensityFeatures = 100,
  loadedFeaturesMS2 = TRUE,
  mzClustGroups = 0.003,
  minIntensityGroups = 100,
  verbose = FALSE,
  filtered = FALSE,
  loadedGroupsMS2 = TRUE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{isolationWindow}}{Numeric value with the isolation window (in Da)
applied for ion isolation and fragmentation during acquisition of tandem
data (i.e., MS2 data).}

\item{\code{mzClustFeatures}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for features. Highly dependent on the mass
resolution of the MS data.}

\item{\code{minIntensityFeatures}}{Numeric value with the minimum intensity for
features.}

\item{\code{loadedFeaturesMS2}}{Logical. When \code{TRUE} and if available, previously
loaded features MS2 data is used instead of extraction from raw data.}

\item{\code{mzClustGroups}}{Numeric value with the mass deviation threshold
(in Da) to cluster mass traces for feature groups. Highly dependent on the
mass resolution of the MS data.}

\item{\code{minIntensityGroups}}{Numeric value with the minimum intensity for
feature groups.}

\item{\code{verbose}}{Logical with length one. Set \code{TRUE} to output diagnostic and
result messages. When \code{FALSE}, some messages are omitted.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{loadedGroupsMS2}}{Logical. When \code{TRUE} and if available, previously
loaded feature groups MS2 data is used instead of extraction from raw data.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{colorBy}}{A string of length 1. One of \code{analyses}, \code{targets} (the
default) or \code{replicates}.}

\item{\code{interactive}}{Logical. When \code{TRUE}, the data is plotted interactively
using \pkg{plotly}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-plot_groups_overview"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-plot_groups_overview}{}}}
\subsection{Method \code{plot_groups_overview()}}{
Method to give an overview of the EIC, alignment and intensity variance
from features within target feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$plot_groups_overview(
  analyses = NULL,
  groups = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  rtExpand = 120,
  mzExpand = 0.005,
  filtered = FALSE,
  runParallel = FALSE,
  legendNames = NULL,
  title = NULL,
  heights = c(0.35, 0.5, 0.15)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{groups}}{A numeric/character vector with the number/id
of feature groups.}

\item{\code{mass}}{A vector with target neutral mass value/s (in Da) or a two columns
data.table or data.frame named \code{min} and \code{max} with minimum and maximum
neutral mass values (in Da), respectively. Alternatively, neutral mass (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mass} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
neutral mass and retention time targets. In this case, the column names must
be \code{min}, \code{max}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{mz}}{A vector with target \emph{m/z} value/s (in Da) or a two columns
data.table or data.frame named \code{mzmin} and \code{mzmax} with minimum and maximum
\emph{m/z} values (in Da), respectively. Alternatively, \emph{m/z} (in Da)
and retention time values (in seconds) can be given as one data.table or
data.frame with columns named \code{mz} and \code{rt}. Then, the deviations given in
the \code{ppm} and \code{sec} arguments are used to calculate the ranges.
Also works with a data.table or data.frame with minimum and maximum values of
\emph{m/z} and retention time targets. In this case, the column names must
be \code{mzmin}, \code{mzmax}, \code{rtmin} and \code{rtmax}. Note that when mass/time ranges
are given, the \code{ppm} and \code{sec} arguments are not used.}

\item{\code{rt}}{A vector with target retention time values (in seconds) or
a two columns data.table or data.frame with minimum and maximum retention
time values (in seconds).}

\item{\code{ppm}}{Numeric of length one with the mass deviation, in ppm.}

\item{\code{sec}}{Numeric of length one with the time deviation, in seconds.}

\item{\code{rtExpand}}{Numeric value with the retention time values (in seconds) for
expanding left and right the mass range.}

\item{\code{mzExpand}}{Numeric value with the mass or mass-to-charge ratio
(\emph{m/z}) (in Da) for expanding left and right the mass range.}

\item{\code{filtered}}{Logical. When \code{TRUE}, filtered features/groups are considered.}

\item{\code{runParallel}}{Logical of length one. Set to \code{TRUE} for parallel
processing. Note that parallel processing is not always faster due to
overhead.}

\item{\code{legendNames}}{A character vector with the same length as the targets.}

\item{\code{title}}{A string with the title.}

\item{\code{heights}}{A numeric vector of length 3 to control the height of
the first, second and third plot, respectively.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A plot.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-find_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-find_features}{}}}
\subsection{Method \code{find_features()}}{
Finds features (i.e., chromatographic peaks) from MS data
in analyses. The function uses the \pkg{patRoon} package
for peak finding, enabling the use of several algorithms (see details).
Note that the settings call name must be "find_features".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$find_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
See the \link[patRoon]{findFeatures} function from the
\pkg{patRoon} package or the
\href{https://rickhelmus.github.io/patRoon/reference/findFeatures.html}{reference guide} for more information. The following algorithms are
available via \pkg{patRoon}: "xcms3", "xcms", "openms", "envipick",
"sirius", "kpic2", "safd". The algorithm in the  settings should be
one of the described. The parameters are given as a list and should
match with algorithm requirements. Certain algorithms also require
defined MS file formats and data in profile mode.
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-group_features"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-group_features}{}}}
\subsection{Method \code{group_features()}}{
Groups and aligns features across analyses.
The function uses the \pkg{patRoon} package for grouping
features, enabling the use of several algorithms (see details).
Note that the settings call name must be "group_features".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$group_features(settings = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{settings}}{A ProcessingSettings S3 class object with the call name
applicable to the processing method. Alternatively, a named
list with \code{call}, \code{algorithm} and \code{parameters} to be transformed and used as
ProcessingSettings S3 class object. When not given, settings for the
processing method will be searched within the \code{MassSpecData} object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
See the \link[patRoon]{groupFeatures} function from the
\pkg{patRoon} package or the
\href{https://rickhelmus.github.io/patRoon/reference/groupFeatures.html}{reference guide}
for more information. The following algorithms are
possible: "xcms3", "xcms", "openms" or "kpic2". The algorithm slot in the
settings should be one of the described. The parameters
are given as a list and should match with algorithm requirements.
}

\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-as_features_patRoon"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-as_features_patRoon}{}}}
\subsection{Method \code{as_features_patRoon()}}{
Creates an object with S4 class \code{features} from the package \pkg{patRoon}
with the features in the analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$as_features_patRoon()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An object with S4 class \code{features}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-check_correspondence"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-check_correspondence}{}}}
\subsection{Method \code{check_correspondence()}}{
Checks the correspondence of features within feature groups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$check_correspondence()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{TRUE} or \code{FALSE}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-save_headers"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-save_headers}{}}}
\subsection{Method \code{save_headers()}}{
Saves the headers list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$save_headers(format = "json", name = "headers", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the headers list as the defined \code{format} in
\code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-save_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-save_settings}{}}}
\subsection{Method \code{save_settings()}}{
Saves settings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$save_settings(
  call = NULL,
  format = "json",
  name = "settings",
  path = getwd()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{call}}{A string or a vector of strings with the name/s of the
processing method/s to be saved. When \code{call} is \code{NULL} all
settings are saved.}

\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the settings list as the defined \code{format} in
\code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-save_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-save_analyses}{}}}
\subsection{Method \code{save_analyses()}}{
Saves analyses.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$save_analyses(
  analyses = NULL,
  format = "json",
  name = "analyses",
  path = getwd()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyses}}{A numeric/character vector with the number/name
of the analyses.}

\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the list of analyses as the defined \code{format} in
\code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-save_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-save_groups}{}}}
\subsection{Method \code{save_groups()}}{
Saves the feature groups \code{data.table}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$save_groups(format = "json", name = "groups", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the groups \code{data.table} as the defined \code{format}
in the \code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-save"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-save}{}}}
\subsection{Method \code{save()}}{
Saves the private fields (i.e., headers, settings, analyses,
groups and alignment) of the MassSpecData object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$save(format = "json", name = "MassSpecData", path = getwd())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{format}}{A string. Possible values are \code{json} and \code{rds} for saving as
JSON or RDS formats, respectively.}

\item{\code{name}}{String with the name of the file to be saved.}

\item{\code{path}}{String with the directory of the file to be saved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Saves the private fields of the msdata as the defined \code{format}
in the \code{path} and returns invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-import_headers"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-import_headers}{}}}
\subsection{Method \code{import_headers()}}{
Imports headers from a \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$import_headers(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file as obtained by the MassSpecData
method \code{save()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-import_settings"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-import_settings}{}}}
\subsection{Method \code{import_settings()}}{
Imports processing settings from a \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$import_settings(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file as obtained by the MassSpecData
method \code{save()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-import_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-import_analyses}{}}}
\subsection{Method \code{import_analyses()}}{
Imports analyses from a \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$import_analyses(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file as obtained by the MassSpecData
method \code{save()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-import_groups"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-import_groups}{}}}
\subsection{Method \code{import_groups()}}{
Imports feature groups from a \emph{rds} or \emph{json} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$import_groups(file = NA_character_)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{A \emph{json} or \emph{rds} file as obtained by the MassSpecData
method \code{save()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-processing_function_calls"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-processing_function_calls}{}}}
\subsection{Method \code{processing_function_calls()}}{
Possible processing function calls.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$processing_function_calls()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector with ordered possible function calls for data
pre and post-processing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MassSpecData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MassSpecData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MassSpecData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
