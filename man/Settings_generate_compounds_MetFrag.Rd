% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_ProcessingSettings.R
\name{Settings_generate_compounds_metfrag}
\alias{Settings_generate_compounds_metfrag}
\title{Settings_generate_compounds_metfrag}
\usage{
Settings_generate_compounds_metfrag(
  method = "CL",
  timeout = 300,
  timeoutRetries = 5,
  errorRetries = 5,
  topMost = 5,
  dbRelMzDev = 8,
  fragRelMzDev = 10,
  fragAbsMzDev = 0.005,
  adduct = NULL,
  database = "comptox",
  extendedPubChem = "auto",
  chemSpiderToken = "",
  scoreTypes = patRoon::compoundScorings("metfrag", "comptox", onlyDefault = TRUE)$name,
  scoreWeights = 1,
  preProcessingFilters = c("UnconnectedCompoundFilter", "IsotopeFilter"),
  postProcessingFilters = c("InChIKeyFilter"),
  maxCandidatesToStop = 100,
  identifiers = NULL,
  extraOpts = NULL
)
}
\arguments{
\item{method}{Character (length 1) with the method to be used for MetFrag execution: "CL" for MetFragCL and "R" for MetFragR.}

\item{timeout}{Numeric (length 1) with the maximum time (in seconds) before a MetFrag query for a feature group is stopped.}

\item{timeoutRetries}{Numeric (length 1) with the maximum number of retries after reaching a timeout before completely
skipping the MetFrag query for a feature group.}

\item{errorRetries}{Numeric (length 1) with the maximum number of retries after an error occurred.}

\item{topMost}{Numeric (length 1) with the maximum number of top candidates to be returned.}

\item{dbRelMzDev}{Numeric (length 1) with the relative mass deviation, in ppm, for the database search.}

\item{fragRelMzDev}{Numeric (length 1) with the relative mass deviation, in ppm, for the fragment search.}

\item{fragAbsMzDev}{Numeric (length 1) with the absolute mass deviation, in Da, for the fragment search.}

\item{adduct}{Character (length 1) with the adduct to be used for the MetFrag annotation.}

\item{database}{Character (length 1) with the database to be used for the MetFrag annotation. Valid values are:
"pubchem", "chemspider", "for-ident", "comptox", "pubchemlite", "kegg", "sdf", "psv" and "csv".}

\item{extendedPubChem}{Extended PubChem database is used for the MetFrag annotation when \code{database} is "pubchem".
Valid values are: FALSE (never use it), TRUE (always use it) or "auto" (default, use if specified scorings demand it).}

\item{chemSpiderToken}{Character (length 1) with the ChemSpider token to be used for the MetFrag annotation when
\code{database} is "chemspider".}

\item{scoreTypes}{Character vector with the score types to be used for the MetFrag annotation.}

\item{scoreWeights}{Numeric vector with the score weights to be used for the MetFrag annotation.}

\item{preProcessingFilters}{Character vector with the pre-processing filters to be used for the MetFrag annotation.}

\item{postProcessingFilters}{Character vector with the post-processing filters to be used for the MetFrag annotation.}

\item{maxCandidatesToStop}{Numeric (length 1) with the maximum number of candidates to be returned before stopping the
MetFrag query for a feature group.}

\item{identifiers}{A list containing for each feature group a character vector with database identifiers that should
be used to find candidates for a feature group (the list should be named by feature group names). Can be \code{NULL}.}

\item{extraOpts}{A named list containing further settings MetFrag.}
}
\value{
A ProcessingSettings S3 class object with subclass Settings_generate_compounds_metfrag.
}
\description{
Settings for generating compounds using \href{https://ipb-halle.github.io/MetFrag/}{MetFrag}.
The algorithm is used via the function \link[patRoon]{generateCompounds} from the package \pkg{patRoon}. Therefore,
it is highly recommended to check the original documentation of the function in \pkg{patRoon} for more details.
}
\details{
Detailed documentation can be found in \link[patRoon]{generateCompoundsMetFrag}.
}
\references{
\insertRef{metfrag01}{StreamFind}

\insertRef{metfrag02}{StreamFind}

\insertRef{metfrag03}{StreamFind}

\insertRef{metfrag04}{StreamFind}

\insertRef{patroon01}{StreamFind}

\insertRef{patroon02}{StreamFind}
}
