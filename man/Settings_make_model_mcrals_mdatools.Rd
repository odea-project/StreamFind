% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_ProcessingSettings.R
\name{Settings_make_model_mcrals_mdatools}
\alias{Settings_make_model_mcrals_mdatools}
\title{Settings_make_model_mcrals_mdatools}
\usage{
Settings_make_model_mcrals_mdatools(
  ncomp = NULL,
  cont.constraints = list(),
  spec.constraints = list(),
  cont.solver = "mcrals.nnls",
  spec.solver = "mcrals.nnls",
  exclrows = NULL,
  exclcols = NULL,
  verbose = FALSE,
  max.niter = 100,
  tol = 10^-6,
  info = ""
)
}
\arguments{
\item{ncomp}{Integer (length 1) with the number of components to be calculated.}

\item{cont.constraints}{List with constraints to be applied to contributions (see details in \link[mdatools]{mcrals}).}

\item{spec.constraints}{List with constraints to be applied to spectra (see details in \link[mdatools]{mcrals}).}

\item{cont.solver}{Character (length 1) with the name of the to solve the pure components contributions (see details
in \link[mdatools]{mcrals}).}

\item{spec.solver}{Character (length 1) with the name of the function to solve the pure components spectra (see
details in \link[mdatools]{mcrals}).}

\item{exclrows}{Integer vector with the row indices to be excluded.}

\item{exclcols}{Integer vector with the column indices to be excluded.}

\item{verbose}{Logical (length 1) indicating if the function should be verbose.}

\item{max.niter}{Integer (length 1) with the maximum number of iterations.}

\item{tol}{Numeric (length 1) with the tolerance for convergence.}

\item{info}{Character (length 1) with additional information.}
}
\value{
A ProcessingSettings S3 class object with subclass Settings_make_model_mcrals_mdatools.
}
\description{
Makes a Multivariate Curve Resolution (MCR) model using Alternating Least Squares (ALS) based on the
R package \pkg{mdatools}.
}
\note{
The functionality to define the initial pure components spectra as well as forcing concentration and spectra
values are not included in this integration of \link[mdatools]{mcrals}.
}
\references{
\insertRef{mdatools01}{StreamFind}

\insertRef{mdatools02}{StreamFind}
}
